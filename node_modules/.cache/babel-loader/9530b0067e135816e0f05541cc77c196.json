{"ast":null,"code":"import _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { findTypes, getFirst } from '../../util/component-types';\nimport { buildModernHybridComponent } from '../../util/state-management';\nimport * as reducers from './VerticalTabs.reducers';\nimport { VerticalListMenuDumb as VerticalListMenu } from '../VerticalListMenu/VerticalListMenu';\nconst cx = lucidClassNames.bind('&-VerticalTabs');\nconst {\n  string,\n  number,\n  bool,\n  func\n} = PropTypes;\nconst Tab = _props => null;\nTab.displayName = 'VerticalTabs.Tab';\nTab.peek = {\n  description: `Content that will be rendered in a tab. Be sure to nest a \\`Title\\` inside each \\`Tab\\` or provide it as a prop.`\n};\nTab.propName = 'Tab';\nTab.propTypes = {\n  /**\n      Determines if the Tab is selected.\n  */\n  isSelected: bool\n};\n/** Vertical Tabs Title Child Component */\nconst Title = _props => null;\nTitle.displayName = 'VerticalTabs.Title';\nTitle.peek = {\n  description: `A \\`Title\\` can be provided as a child or prop to a \\`Tab\\`.`\n};\nTitle.propName = 'Title';\n/** Default props for the VerticalTabs component */\nconst defaultProps = {\n  selectedIndex: 0,\n  onSelect: _.noop\n};\nclass VerticalTabs extends React.Component {\n  render() {\n    const {\n      className,\n      onSelect,\n      selectedIndex,\n      ...passThroughs\n    } = this.props;\n    // Grab props array from each Tab\n    const tabChildProps = _.map(findTypes(this.props, VerticalTabs.Tab), 'props');\n    const selectedIndexFromChildren = _.findLastIndex(tabChildProps, {\n      isSelected: true\n    });\n    const actualSelectedIndex = selectedIndexFromChildren !== -1 ? selectedIndexFromChildren : selectedIndex;\n    return React.createElement(\"div\", {\n      ...omit(passThroughs, ['className', 'selectedIndex', 'onSelect', 'initialState', 'callbackId']),\n      className: cx('&', className)\n    }, React.createElement(VerticalListMenu, {\n      selectedIndices: [actualSelectedIndex],\n      onSelect: onSelect\n    }, _.map(tabChildProps, (tabChildProp, index) => React.createElement(VerticalListMenu.Item, {\n      className: cx('&-Tab', {\n        '&-Tab-is-active': actualSelectedIndex === index\n      }),\n      key: index\n    }, React.createElement(\"span\", {\n      className: cx('&-Tab-content')\n    }, _.get(getFirst(tabChildProp, VerticalTabs.Title), 'props.children', ''))))), React.createElement(\"div\", {\n      className: cx('&-content')\n    }, _.get(tabChildProps, [actualSelectedIndex, 'children'])));\n  }\n}\nVerticalTabs.displayName = 'VerticalTabs';\nVerticalTabs.propTypes = {\n  /**\n      Class names that are appended to the defaults.\n  */\n  className: string,\n  /**\n      Indicates which of the \\`VerticalTabs.Tab\\` children is currently\n      selected. The index of the last \\`VerticalTabs.Tab\\` child with\n      \\`isSelected\\` equal to \\`true\\` takes precedence over this prop.\n  */\n  selectedIndex: number,\n  /**\n      Callback for when the user clicks a tab. Called with the index of the tab\n      that was clicked.  Signature: \\`(index, { event, props}) => {}\\`\n  */\n  onSelect: func\n};\nVerticalTabs.defaultProps = defaultProps;\nVerticalTabs.reducers = reducers;\nVerticalTabs.Tab = Tab;\nVerticalTabs.Title = Title;\nVerticalTabs.peek = {\n  description: `\\`VerticalTabs\\` provides vertically tabbed navigation. It has a flexible interface that allows tab content to be passed as regular React children or through props.`,\n  categories: ['navigation'],\n  madeFrom: ['VerticalListMenu']\n};\nexport default buildModernHybridComponent(VerticalTabs, {\n  reducers\n});\nexport { VerticalTabs as VerticalTabsDumb };","map":{"version":3,"mappings":"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","names":["_","omit","React","PropTypes","lucidClassNames","findTypes","getFirst","buildModernHybridComponent","reducers","VerticalListMenuDumb","VerticalListMenu","cx","bind","string","number","bool","func","Tab","_props","displayName","peek","description","propName","propTypes","isSelected","Title","defaultProps","selectedIndex","onSelect","noop","VerticalTabs","Component","render","className","passThroughs","props","tabChildProps","map","selectedIndexFromChildren","findLastIndex","actualSelectedIndex","selectedIndices","tabChildProp","index","Item","key","get","categories","madeFrom","VerticalTabsDumb"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/VerticalTabs/VerticalTabs.tsx"],"sourcesContent":["import _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport {\n\tfindTypes,\n\tgetFirst,\n\tOverwrite,\n\tStandardProps,\n} from '../../util/component-types';\nimport { buildModernHybridComponent } from '../../util/state-management';\nimport * as reducers from './VerticalTabs.reducers';\nimport {\n\tIVerticalListMenuItemProps,\n\tVerticalListMenuDumb as VerticalListMenu,\n} from '../VerticalListMenu/VerticalListMenu';\n\nconst cx = lucidClassNames.bind('&-VerticalTabs');\n\nconst { string, number, bool, func } = PropTypes;\n\n/** Vertical Tabs Tab Child Component */\nexport interface IVerticalTabsTabProps extends StandardProps {\n\t/** Determines if the Tab is selected */\n\tisSelected?: boolean;\n\n\t/** Custom title for the tab */\n\tTitle?: string;\n}\n\nconst Tab = (_props: IVerticalTabsTabProps): null => null;\n\nTab.displayName = 'VerticalTabs.Tab';\nTab.peek = {\n\tdescription: `Content that will be rendered in a tab. Be sure to nest a \\`Title\\` inside each \\`Tab\\` or provide it as a prop.`,\n};\nTab.propName = 'Tab';\nTab.propTypes = {\n\t/**\n        Determines if the Tab is selected.\n    */\n\tisSelected: bool,\n};\n\n/** Vertical Tabs Title Child Component */\nconst Title = (_props: StandardProps): null => null;\n\nTitle.displayName = 'VerticalTabs.Title';\nTitle.peek = {\n\tdescription: `A \\`Title\\` can be provided as a child or prop to a \\`Tab\\`.`,\n};\nTitle.propName = 'Title';\n\n/** Vertical Tabs Component */\ninterface IVerticalTabsPropsRaw extends StandardProps {\n\t/**\n\t * Custom Tab component (alias for `VerticalTabs.Tab`)\n\t */\n\tTab?: React.ReactNode;\n\n\t/**\n\t * Custom Title component (alias for `VerticalTabs.Title`)\n\t */\n\tTitle?: React.ReactNode;\n\n\t/**\n\t * Indicates which of the \\`VerticalTabs.Tab\\` children is currently selected\n\t */\n\tselectedIndex: number;\n\n\t/**\n\t * Callback fired when the user selects a \\`VerticalListMenu.Item\\`.\n\t */\n\tonSelect: (\n\t\tindex: number,\n\t\t{\n\t\t\tevent,\n\t\t\tprops,\n\t\t}: {\n\t\t\tevent: React.MouseEvent;\n\t\t\tprops: IVerticalListMenuItemProps;\n\t\t}\n\t) => void;\n}\n\nexport type IVerticalTabsProps = Overwrite<\n\tReact.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>,\n\tIVerticalTabsPropsRaw\n>;\n\n/** Default props for the VerticalTabs component */\nconst defaultProps = {\n\tselectedIndex: 0,\n\tonSelect: _.noop,\n};\n\nexport interface IVerticalTabsState {\n\tselectedIndex: number;\n}\n\nclass VerticalTabs extends React.Component<\n\tIVerticalTabsProps,\n\tIVerticalTabsState\n> {\n\tstatic displayName = 'VerticalTabs';\n\tstatic propTypes = {\n\t\t/**\n\t\t\tClass names that are appended to the defaults.\n\t\t*/\n\t\tclassName: string,\n\n\t\t/**\n\t\t\tIndicates which of the \\`VerticalTabs.Tab\\` children is currently\n\t\t\tselected. The index of the last \\`VerticalTabs.Tab\\` child with\n\t\t\t\\`isSelected\\` equal to \\`true\\` takes precedence over this prop.\n\t\t*/\n\t\tselectedIndex: number,\n\n\t\t/**\n\t\t\tCallback for when the user clicks a tab. Called with the index of the tab\n\t\t\tthat was clicked.  Signature: \\`(index, { event, props}) => {}\\`\n\t\t*/\n\t\tonSelect: func,\n\t};\n\n\tstatic defaultProps = defaultProps;\n\tstatic reducers = reducers;\n\tstatic Tab = Tab;\n\tstatic Title = Title;\n\tstatic peek = {\n\t\tdescription: `\\`VerticalTabs\\` provides vertically tabbed navigation. It has a flexible interface that allows tab content to be passed as regular React children or through props.`,\n\t\tcategories: ['navigation'],\n\t\tmadeFrom: ['VerticalListMenu'],\n\t};\n\n\trender(): React.ReactNode {\n\t\tconst { className, onSelect, selectedIndex, ...passThroughs } = this.props;\n\n\t\t// Grab props array from each Tab\n\t\tconst tabChildProps = _.map(\n\t\t\tfindTypes(this.props, VerticalTabs.Tab),\n\t\t\t'props'\n\t\t);\n\n\t\tconst selectedIndexFromChildren = _.findLastIndex(tabChildProps, {\n\t\t\tisSelected: true,\n\t\t});\n\n\t\tconst actualSelectedIndex =\n\t\t\tselectedIndexFromChildren !== -1\n\t\t\t\t? selectedIndexFromChildren\n\t\t\t\t: selectedIndex;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...omit(passThroughs, [\n\t\t\t\t\t'className',\n\t\t\t\t\t'selectedIndex',\n\t\t\t\t\t'onSelect',\n\t\t\t\t\t'initialState',\n\t\t\t\t\t'callbackId',\n\t\t\t\t])}\n\t\t\t\tclassName={cx('&', className)}\n\t\t\t>\n\t\t\t\t<VerticalListMenu\n\t\t\t\t\tselectedIndices={[actualSelectedIndex]}\n\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t>\n\t\t\t\t\t{_.map(tabChildProps, (tabChildProp, index) => (\n\t\t\t\t\t\t<VerticalListMenu.Item\n\t\t\t\t\t\t\tclassName={cx('&-Tab', {\n\t\t\t\t\t\t\t\t'&-Tab-is-active': actualSelectedIndex === index,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className={cx('&-Tab-content')}>\n\t\t\t\t\t\t\t\t{_.get(\n\t\t\t\t\t\t\t\t\tgetFirst(tabChildProp, VerticalTabs.Title),\n\t\t\t\t\t\t\t\t\t'props.children',\n\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</VerticalListMenu.Item>\n\t\t\t\t\t))}\n\t\t\t\t</VerticalListMenu>\n\t\t\t\t<div className={cx('&-content')}>\n\t\t\t\t\t{_.get(tabChildProps, [actualSelectedIndex, 'children'])}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default buildModernHybridComponent<\n\tIVerticalTabsProps,\n\tIVerticalTabsState,\n\ttypeof VerticalTabs\n>(VerticalTabs as any, { reducers });\n\nexport { VerticalTabs as VerticalTabsDumb };\n"]},"metadata":{},"sourceType":"module"}