{"ast":null,"code":"import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../Icon';\nimport { lucidClassNames } from '../../../util/style-helpers';\nconst cx = lucidClassNames.bind('&-LoadingIcon');\nexport var durations;\n(function (durations) {\n  durations[\"fast\"] = \"0.75s\";\n  durations[\"normal\"] = \"1.25s\";\n  durations[\"slow\"] = \"4s\";\n})(durations || (durations = {}));\nexport const loadingIconPropTypes = {\n  /**\tThe speed of rotation of the spinner. */\n  speed: PropTypes.oneOf(['fast', 'normal', 'slow']),\n  /** Size variations of the icons. \\`size\\` directly effects height and width\n      but the developer should also be conscious of the relationship with\n      \\`viewBox\\`. */\n  size: PropTypes.number,\n  /** Size handles width and height, whereas \\`width\\` can manually override the width that would be set by size. */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Size handles width and height, whereas \\`height\\` can manually override the height that would be set by size. */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Any valid SVG aspect ratio. */\n  aspectRatio: PropTypes.string,\n  /** Adds styling that makes the icon appear clickable. */\n  isClickable: PropTypes.bool,\n  /** Adds styling that makes the icon appear disabled.  Also forces\n      isClickable to be false. */\n  isDisabled: PropTypes.bool,\n  /** Called when the user clicks the \\`Icon\\`. Signature:\n      \\`({event, props}) => {}\\` */\n  onClick: PropTypes.func,\n  /** Called when the user clicks an active, clickable \\`Icon\\`. Signature:\n      \\`({event, props}) => {}\\` */\n  onSelect: PropTypes.func,\n  /** Any valid React children. */\n  children: PropTypes.element,\n  /** Classes that are appended to the component defaults. This prop is run\n      through the \\`classnames\\` library. */\n  className: PropTypes.string\n};\nexport const LoadingIcon = _ref => {\n  let {\n    className,\n    speed = 'normal',\n    style,\n    isDisabled,\n    ...passThroughs\n  } = _ref;\n  const animationDuration = `${durations[speed] || durations.normal}`;\n  return React.createElement(Icon, {\n    ..._.omit(passThroughs, ['initialState', 'viewbox', 'color']),\n    viewBox: '0 0 100 100',\n    className: cx('&', className),\n    style: {\n      animationDuration,\n      ...style\n    },\n    isDisabled: isDisabled\n  }, React.createElement(\"rect\", {\n    x: '0',\n    y: '0',\n    width: '100',\n    height: '100',\n    fill: 'none'\n  }), React.createElement(\"circle\", {\n    className: cx('&-circle'),\n    cx: '50',\n    cy: '50',\n    r: '40'\n  }), React.createElement(\"circle\", {\n    style: {\n      animationDuration\n    },\n    className: cx('&-spinner', {\n      '&-spinner-is-disabled': isDisabled\n    }),\n    cx: '50',\n    cy: '50',\n    r: '40'\n  }));\n};\nLoadingIcon.displayName = 'LoadingIcon';\nLoadingIcon.propTypes = loadingIconPropTypes;\nLoadingIcon.defaultProps = Icon.defaultProps;\nexport default LoadingIcon;","map":{"version":3,"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAoB,MAAM,SAAS;AAC1C,SAASC,eAAe,QAAQ,6BAA6B;AAE7D,MAAMC,EAAE,GAAGD,eAAe,CAACE,IAAI,CAAC,eAAe,CAAC;AAEhD,WAAYC,SAIX;AAJD,WAAYA,SAAS;EACpBA,2BAAc;EACdA,6BAAgB;EAChBA,wBAAW;AACZ,CAAC,EAJWA,SAAS,KAATA,SAAS;AAWrB,OAAO,MAAMC,oBAAoB,GAAG;EACnC;EACAC,KAAK,EAAEP,SAAS,CAACQ,KAAK,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;EAElD;;;EAGAC,IAAI,EAAET,SAAS,CAACU,MAAM;EAEtB;EACAC,KAAK,EAAEX,SAAS,CAACY,SAAS,CAAC,CAACZ,SAAS,CAACU,MAAM,EAAEV,SAAS,CAACa,MAAM,CAAC,CAAC;EAEhE;EACAC,MAAM,EAAEd,SAAS,CAACY,SAAS,CAAC,CAACZ,SAAS,CAACU,MAAM,EAAEV,SAAS,CAACa,MAAM,CAAC,CAAC;EAEjE;EACAE,WAAW,EAAEf,SAAS,CAACa,MAAM;EAE7B;EACAG,WAAW,EAAEhB,SAAS,CAACiB,IAAI;EAE3B;;EAEAC,UAAU,EAAElB,SAAS,CAACiB,IAAI;EAE1B;;EAEAE,OAAO,EAAEnB,SAAS,CAACoB,IAAI;EAEvB;;EAEAC,QAAQ,EAAErB,SAAS,CAACoB,IAAI;EAExB;EACAE,QAAQ,EAAEtB,SAAS,CAACuB,OAAO;EAE3B;;EAEAC,SAAS,EAAExB,SAAS,CAACa;CACrB;AAED,OAAO,MAAMY,WAAW,GAAG,QAMH;EAAA,IANI;IAC3BD,SAAS;IACTjB,KAAK,GAAG,QAAQ;IAChBmB,KAAK;IACLR,UAAU;IACV,GAAGS;EAAY,CACI;EACnB,MAAMC,iBAAiB,GAAG,GAAGvB,SAAS,CAACE,KAAK,CAAC,IAAIF,SAAS,CAACwB,MAAM,EAAE;EAEnE,OACC9B,oBAACE,IAAI;IAAA,GACAH,CAAC,CAACgC,IAAI,CAACH,YAAY,EAAE,CAAC,cAAc,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAC9DI,OAAO,EAAC,aAAa;IACrBP,SAAS,EAAErB,EAAE,CAAC,GAAG,EAAEqB,SAAS,CAAC;IAC7BE,KAAK,EAAE;MAAEE,iBAAiB;MAAE,GAAGF;IAAK,CAAE;IACtCR,UAAU,EAAEA;EAAU,GAEtBnB;IAAMiC,CAAC,EAAC,GAAG;IAACC,CAAC,EAAC,GAAG;IAACtB,KAAK,EAAC,KAAK;IAACG,MAAM,EAAC,KAAK;IAACoB,IAAI,EAAC;EAAM,EAAG,EACzDnC;IAAQyB,SAAS,EAAErB,EAAE,CAAC,UAAU,CAAC;IAAEA,EAAE,EAAC,IAAI;IAACgC,EAAE,EAAC,IAAI;IAACC,CAAC,EAAC;EAAI,EAAG,EAC5DrC;IACC2B,KAAK,EAAE;MAAEE;IAAiB,CAAE;IAC5BJ,SAAS,EAAErB,EAAE,CAAC,WAAW,EAAE;MAAE,uBAAuB,EAAEe;IAAU,CAAE,CAAC;IACnEf,EAAE,EAAC,IAAI;IACPgC,EAAE,EAAC,IAAI;IACPC,CAAC,EAAC;EAAI,EACL,CACI;AAET,CAAC;AAEDX,WAAW,CAACY,WAAW,GAAG,aAAa;AAEvCZ,WAAW,CAACa,SAAS,GAAGhC,oBAAoB;AAE5CmB,WAAW,CAACc,YAAY,GAAGtC,IAAI,CAACsC,YAAY;AAE5C,eAAed,WAAW","names":["_","React","PropTypes","Icon","lucidClassNames","cx","bind","durations","loadingIconPropTypes","speed","oneOf","size","number","width","oneOfType","string","height","aspectRatio","isClickable","bool","isDisabled","onClick","func","onSelect","children","element","className","LoadingIcon","style","passThroughs","animationDuration","normal","omit","viewBox","x","y","fill","cy","r","displayName","propTypes","defaultProps"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/Icon/LoadingIcon/LoadingIcon.tsx"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon, { IIconProps } from '../Icon';\nimport { lucidClassNames } from '../../../util/style-helpers';\n\nconst cx = lucidClassNames.bind('&-LoadingIcon');\n\nexport enum durations {\n\tfast = '0.75s',\n\tnormal = '1.25s',\n\tslow = '4s',\n}\n\nexport interface ILoadingIconProps extends IIconProps {\n\t/**\tThe speed of rotation of the spinner. */\n\tspeed?: keyof typeof durations;\n}\n\nexport const loadingIconPropTypes = {\n\t/**\tThe speed of rotation of the spinner. */\n\tspeed: PropTypes.oneOf(['fast', 'normal', 'slow']),\n\n\t/** Size variations of the icons. \\`size\\` directly effects height and width\n\t\tbut the developer should also be conscious of the relationship with\n\t\t\\`viewBox\\`. */\n\tsize: PropTypes.number,\n\n\t/** Size handles width and height, whereas \\`width\\` can manually override the width that would be set by size. */\n\twidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n\t/** Size handles width and height, whereas \\`height\\` can manually override the height that would be set by size. */\n\theight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n\t/** Any valid SVG aspect ratio. */\n\taspectRatio: PropTypes.string,\n\n\t/** Adds styling that makes the icon appear clickable. */\n\tisClickable: PropTypes.bool,\n\n\t/** Adds styling that makes the icon appear disabled.  Also forces\n\t\tisClickable to be false. */\n\tisDisabled: PropTypes.bool,\n\n\t/** Called when the user clicks the \\`Icon\\`. Signature:\n\t\t\\`({event, props}) => {}\\` */\n\tonClick: PropTypes.func,\n\n\t/** Called when the user clicks an active, clickable \\`Icon\\`. Signature:\n\t\t\\`({event, props}) => {}\\` */\n\tonSelect: PropTypes.func,\n\n\t/** Any valid React children. */\n\tchildren: PropTypes.element,\n\n\t/** Classes that are appended to the component defaults. This prop is run\n\t\tthrough the \\`classnames\\` library. */\n\tclassName: PropTypes.string,\n};\n\nexport const LoadingIcon = ({\n\tclassName,\n\tspeed = 'normal',\n\tstyle,\n\tisDisabled,\n\t...passThroughs\n}: ILoadingIconProps) => {\n\tconst animationDuration = `${durations[speed] || durations.normal}`;\n\n\treturn (\n\t\t<Icon\n\t\t\t{..._.omit(passThroughs, ['initialState', 'viewbox', 'color'])}\n\t\t\tviewBox='0 0 100 100'\n\t\t\tclassName={cx('&', className)}\n\t\t\tstyle={{ animationDuration, ...style }}\n\t\t\tisDisabled={isDisabled}\n\t\t>\n\t\t\t<rect x='0' y='0' width='100' height='100' fill='none' />\n\t\t\t<circle className={cx('&-circle')} cx='50' cy='50' r='40' />\n\t\t\t<circle\n\t\t\t\tstyle={{ animationDuration }}\n\t\t\t\tclassName={cx('&-spinner', { '&-spinner-is-disabled': isDisabled })}\n\t\t\t\tcx='50'\n\t\t\t\tcy='50'\n\t\t\t\tr='40'\n\t\t\t/>\n\t\t</Icon>\n\t);\n};\n\nLoadingIcon.displayName = 'LoadingIcon';\n\nLoadingIcon.propTypes = loadingIconPropTypes;\n\nLoadingIcon.defaultProps = Icon.defaultProps;\n\nexport default LoadingIcon;\n"]},"metadata":{},"sourceType":"module"}