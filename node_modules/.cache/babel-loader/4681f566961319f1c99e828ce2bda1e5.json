{"ast":null,"code":"import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../Icon';\nimport { lucidClassNames } from '../../../util/style-helpers';\nconst cx = lucidClassNames.bind('&-ArrowIcon');\nexport const iconPropTypes = {\n  /** Sets the direction of the Icon. */\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  /** Size variations of the icons. \\`size\\` directly effects height and width\n      but the developer should also be conscious of the relationship with\n      \\`viewBox\\`. */\n  size: PropTypes.number,\n  /** Size handles width and height, whereas \\`width\\` can manually override the width that would be set by size. */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Size handles width and height, whereas \\`height\\` can manually override the height that would be set by size. */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** \\`viewBox\\` is very important for SVGs. You can think of \\`viewBox\\` as\n      the \"artboard\" for our SVG while \\`size\\` is the presented height and\n      width. */\n  viewBox: PropTypes.string,\n  /** Sets the color of the Icon.  May not be applicable for icons that are tied\n      to specific colors (e.g. DangerIcon). */\n  color: PropTypes.oneOf(['neutral-dark', 'neutral-light', 'neutral-extra-light', 'primary', 'white', 'success', 'warning', 'secondary-one', 'secondary-two', 'secondary-three', 'secondary-five']),\n  /** Any valid SVG aspect ratio. */\n  aspectRatio: PropTypes.string,\n  /** Adds styling that makes the icon appear clickable. */\n  isClickable: PropTypes.bool,\n  /** Adds styling that makes the icon appear disabled.  Also forces\n      isClickable to be false. */\n  isDisabled: PropTypes.bool,\n  /** Called when the user clicks the \\`Icon\\`. Signature:\n      \\`({event, props}) => {}\\` */\n  onClick: PropTypes.func,\n  /** Called when the user clicks an active, clickable \\`Icon\\`. Signature:\n      \\`({event, props}) => {}\\` */\n  onSelect: PropTypes.func,\n  /** Any valid React children. */\n  children: PropTypes.element,\n  /** Classes that are appended to the component defaults. This prop is run\n      through the \\`classnames\\` library. */\n  className: PropTypes.string\n};\nexport const ArrowIcon = _ref => {\n  let {\n    className,\n    direction = 'left',\n    ...passThroughs\n  } = _ref;\n  return React.createElement(Icon, {\n    ..._.omit(passThroughs, ['initialState']),\n    className: cx('&', {\n      '&-is-down': direction === 'down',\n      '&-is-up': direction === 'up',\n      '&-is-left': direction === 'left',\n      '&-is-right': direction === 'right'\n    }, className)\n  }, React.createElement(\"path\", {\n    d: 'M0 8h15.5m-6-6l6 6-6 6'\n  }));\n};\nArrowIcon.displayName = 'ArrowIcon';\nArrowIcon.defaultProps = Icon.defaultProps;\nArrowIcon.propTypes = iconPropTypes;\nexport default ArrowIcon;","map":{"version":3,"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAiC,MAAM,SAAS;AACvD,SAASC,eAAe,QAAQ,6BAA6B;AAE7D,MAAMC,EAAE,GAAGD,eAAe,CAACE,IAAI,CAAC,aAAa,CAAC;AAE9C,OAAO,MAAMC,aAAa,GAAG;EAC5B;EACAC,SAAS,EAAEN,SAAS,CAACO,KAAK,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAE3D;;;EAGAC,IAAI,EAAER,SAAS,CAACS,MAAM;EAEtB;EACAC,KAAK,EAAEV,SAAS,CAACW,SAAS,CAAC,CAACX,SAAS,CAACS,MAAM,EAAET,SAAS,CAACY,MAAM,CAAC,CAAC;EAEhE;EACAC,MAAM,EAAEb,SAAS,CAACW,SAAS,CAAC,CAACX,SAAS,CAACS,MAAM,EAAET,SAAS,CAACY,MAAM,CAAC,CAAC;EAEjE;;;EAGAE,OAAO,EAAEd,SAAS,CAACY,MAAM;EAEzB;;EAEAG,KAAK,EAAEf,SAAS,CAACO,KAAK,CAAC,CACtB,cAAc,EACd,eAAe,EACf,qBAAqB,EACrB,SAAS,EACT,OAAO,EACP,SAAS,EACT,SAAS,EACT,eAAe,EACf,eAAe,EACf,iBAAiB,EACjB,gBAAgB,CAChB,CAAC;EAEF;EACAS,WAAW,EAAEhB,SAAS,CAACY,MAAM;EAE7B;EACAK,WAAW,EAAEjB,SAAS,CAACkB,IAAI;EAE3B;;EAEAC,UAAU,EAAEnB,SAAS,CAACkB,IAAI;EAE1B;;EAEAE,OAAO,EAAEpB,SAAS,CAACqB,IAAI;EAEvB;;EAEAC,QAAQ,EAAEtB,SAAS,CAACqB,IAAI;EAExB;EACAE,QAAQ,EAAEvB,SAAS,CAACwB,OAAO;EAE3B;;EAEAC,SAAS,EAAEzB,SAAS,CAACY;CACrB;AAED,OAAO,MAAMc,SAAS,GAAG,QAIK;EAAA,IAJJ;IACzBD,SAAS;IACTnB,SAAS,GAAG,MAAM;IAClB,GAAGqB;EAAY,CACU;EACzB,OACC5B,oBAACE,IAAI;IAAA,GACAH,CAAC,CAAC8B,IAAI,CAACD,YAAY,EAAE,CAAC,cAAc,CAAC,CAAC;IAC1CF,SAAS,EAAEtB,EAAE,CACZ,GAAG,EACH;MACC,WAAW,EAAEG,SAAS,KAAK,MAAM;MACjC,SAAS,EAAEA,SAAS,KAAK,IAAI;MAC7B,WAAW,EAAEA,SAAS,KAAK,MAAM;MACjC,YAAY,EAAEA,SAAS,KAAK;KAC5B,EACDmB,SAAS;EACT,GAED1B;IAAM8B,CAAC,EAAC;EAAwB,EAAG,CAC7B;AAET,CAAC;AAEDH,SAAS,CAACI,WAAW,GAAG,WAAW;AAEnCJ,SAAS,CAACK,YAAY,GAAG9B,IAAI,CAAC8B,YAAY;AAE1CL,SAAS,CAACM,SAAS,GAAG3B,aAAa;AAEnC,eAAeqB,SAAS","names":["_","React","PropTypes","Icon","lucidClassNames","cx","bind","iconPropTypes","direction","oneOf","size","number","width","oneOfType","string","height","viewBox","color","aspectRatio","isClickable","bool","isDisabled","onClick","func","onSelect","children","element","className","ArrowIcon","passThroughs","omit","d","displayName","defaultProps","propTypes"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/Icon/ArrowIcon/ArrowIcon.tsx"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon, { IIconWithDirectionProps } from '../Icon';\nimport { lucidClassNames } from '../../../util/style-helpers';\n\nconst cx = lucidClassNames.bind('&-ArrowIcon');\n\nexport const iconPropTypes = {\n\t/** Sets the direction of the Icon. */\n\tdirection: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n\n\t/** Size variations of the icons. \\`size\\` directly effects height and width\n\t\tbut the developer should also be conscious of the relationship with\n\t\t\\`viewBox\\`. */\n\tsize: PropTypes.number,\n\n\t/** Size handles width and height, whereas \\`width\\` can manually override the width that would be set by size. */\n\twidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n\t/** Size handles width and height, whereas \\`height\\` can manually override the height that would be set by size. */\n\theight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n\t/** \\`viewBox\\` is very important for SVGs. You can think of \\`viewBox\\` as\n\t\tthe \"artboard\" for our SVG while \\`size\\` is the presented height and\n\t\twidth. */\n\tviewBox: PropTypes.string,\n\n\t/** Sets the color of the Icon.  May not be applicable for icons that are tied\n\t\tto specific colors (e.g. DangerIcon). */\n\tcolor: PropTypes.oneOf([\n\t\t'neutral-dark',\n\t\t'neutral-light',\n\t\t'neutral-extra-light',\n\t\t'primary',\n\t\t'white',\n\t\t'success',\n\t\t'warning',\n\t\t'secondary-one',\n\t\t'secondary-two',\n\t\t'secondary-three',\n\t\t'secondary-five',\n\t]),\n\n\t/** Any valid SVG aspect ratio. */\n\taspectRatio: PropTypes.string,\n\n\t/** Adds styling that makes the icon appear clickable. */\n\tisClickable: PropTypes.bool,\n\n\t/** Adds styling that makes the icon appear disabled.  Also forces\n\t\tisClickable to be false. */\n\tisDisabled: PropTypes.bool,\n\n\t/** Called when the user clicks the \\`Icon\\`. Signature:\n\t\t\\`({event, props}) => {}\\` */\n\tonClick: PropTypes.func,\n\n\t/** Called when the user clicks an active, clickable \\`Icon\\`. Signature:\n\t\t\\`({event, props}) => {}\\` */\n\tonSelect: PropTypes.func,\n\n\t/** Any valid React children. */\n\tchildren: PropTypes.element,\n\n\t/** Classes that are appended to the component defaults. This prop is run\n\t\tthrough the \\`classnames\\` library. */\n\tclassName: PropTypes.string,\n};\n\nexport const ArrowIcon = ({\n\tclassName,\n\tdirection = 'left',\n\t...passThroughs\n}: IIconWithDirectionProps) => {\n\treturn (\n\t\t<Icon\n\t\t\t{..._.omit(passThroughs, ['initialState'])}\n\t\t\tclassName={cx(\n\t\t\t\t'&',\n\t\t\t\t{\n\t\t\t\t\t'&-is-down': direction === 'down',\n\t\t\t\t\t'&-is-up': direction === 'up',\n\t\t\t\t\t'&-is-left': direction === 'left',\n\t\t\t\t\t'&-is-right': direction === 'right',\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t<path d='M0 8h15.5m-6-6l6 6-6 6' />\n\t\t</Icon>\n\t);\n};\n\nArrowIcon.displayName = 'ArrowIcon';\n\nArrowIcon.defaultProps = Icon.defaultProps;\n\nArrowIcon.propTypes = iconPropTypes;\n\nexport default ArrowIcon;\n"]},"metadata":{},"sourceType":"module"}