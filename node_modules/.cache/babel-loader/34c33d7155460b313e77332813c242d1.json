{"ast":null,"code":"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _, { isNil } from 'lodash';\nimport Portal from '../Portal/Portal';\nimport { getFirst } from '../../util/component-types';\nimport { getAbsoluteBoundingClientRect, sharesAncestor } from '../../util/dom-helpers';\nimport { lucidClassNames, uniqueName } from '../../util/style-helpers';\nconst cx = lucidClassNames.bind('&-ContextMenu');\nconst {\n  bool,\n  node,\n  func,\n  number,\n  object,\n  oneOf,\n  string\n} = PropTypes;\nconst ContextMenuTarget = _props => null;\nContextMenuTarget.displayName = 'ContextMenu.Target';\nContextMenuTarget.propName = 'Target';\nContextMenuTarget.peek = {\n  description: `Renders an element of \\`elementType\\` (defaults to \\`<span>\\`)\n\tthat the menu \\`FlyOut\\` anchors to.`\n};\nContextMenuTarget.propTypes = {\n  elementType: string\n};\nContextMenuTarget.defaultProps = {\n  elementType: 'span'\n};\nconst ContextMenuFlyOut = _props => null;\nContextMenuFlyOut.displayName = 'ContextMenu.FlyOut';\nContextMenuFlyOut.propName = 'FlyOut';\nContextMenuFlyOut.peek = {\n  description: `Renders a \\`<Portal>\\` anchored to the \\`Target\\`.`\n};\n/** These have to be lowercase because:\n * 1. the key and value have to match\n * \t(limitation of TypeScript, see: https://github.com/Microsoft/TypeScript/issues/17198)\n * 2. the values are currently lowercase in the propTypes\n * */\nexport var EnumDirection;\n(function (EnumDirection) {\n  EnumDirection[\"up\"] = \"up\";\n  EnumDirection[\"down\"] = \"down\";\n  EnumDirection[\"left\"] = \"left\";\n  EnumDirection[\"right\"] = \"right\";\n})(EnumDirection || (EnumDirection = {}));\nexport var EnumAlignment;\n(function (EnumAlignment) {\n  EnumAlignment[\"start\"] = \"start\";\n  EnumAlignment[\"center\"] = \"center\";\n  EnumAlignment[\"end\"] = \"end\";\n})(EnumAlignment || (EnumAlignment = {}));\n/** default styling hides portal because its position can't be calculated\n * properly until after 1st render so here we unhide it if the ref exists */\nconst defaultFlyoutPosition = {\n  opacity: 1,\n  maxHeight: 'none',\n  left: 'auto',\n  top: 'auto'\n};\n/** TODO: Remove this constant when the component is converted to a functional component */\nconst nonPassThroughs = ['children', 'className', 'style', 'direction', 'directonOffset', 'alignment', 'alignmentOffset', 'getAlignmentOffset', 'minWidthOffset', 'isExpanded', 'onClickOut', 'portalId', 'FlyOut', 'Target'];\nclass ContextMenu extends React.Component {\n  constructor() {\n    var _this;\n    super(...arguments);\n    _this = this;\n    this.targetRef = React.createRef();\n    this.flyOutPortalRef = React.createRef();\n    this.state = {\n      portalId: this.props.portalId || uniqueName('ContextMenu-Portal-'),\n      targetRect: {\n        bottom: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n        height: 0,\n        width: 0\n      },\n      flyOutHeight: 0,\n      flyOutWidth: 0\n    };\n    // TODO: does this need to be instance property?\n    this.continueAlignment = false;\n    this.beginAlignment = () => {\n      this.continueAlignment = true;\n      window.requestAnimationFrame(this.handleAlignment);\n    };\n    this.endAlignment = () => {\n      this.continueAlignment = false;\n    };\n    this.handleAlignment = () => {\n      if (this.continueAlignment) {\n        if (this.props.isExpanded) {\n          this.alignFlyOut(true);\n        }\n        window.requestAnimationFrame(this.handleAlignment);\n      }\n    };\n    this.handleBodyClick = event => {\n      const {\n        props,\n        props: {\n          onClickOut\n        },\n        flyOutPortalRef,\n        targetRef\n      } = this;\n      // in this block, I assert the type of target because EventTarget -> Element -> HtmlElement (from general to specific typing)\n      const eventTarget = event.target;\n      if (!isNil(onClickOut) && flyOutPortalRef.current && targetRef.current && eventTarget && eventTarget.nodeName) {\n        const flyOutEl = flyOutPortalRef.current.portalElement.firstChild;\n        const wasALabelClick = eventTarget.nodeName === 'INPUT' && sharesAncestor(eventTarget, targetRef.current, 'LABEL');\n        // Attempt to detect <label> click and ignore it\n        if (wasALabelClick) {\n          return;\n        }\n        if (!(flyOutEl.contains(eventTarget) || targetRef.current.contains(eventTarget)) && event.type === 'click') {\n          onClickOut({\n            props,\n            event: event\n          });\n        }\n      }\n    };\n    this.calcAlignmentOffset = _ref => {\n      let {\n        direction,\n        alignment,\n        getAlignmentOffset,\n        flyOutHeight,\n        flyOutWidth\n      } = _ref;\n      const {\n        up: UP,\n        down: DOWN\n      } = EnumDirection;\n      const {\n        center: CENTER\n      } = EnumAlignment;\n      return !_.isUndefined(this.props.alignmentOffset) ? this.props.alignmentOffset : alignment === CENTER ? getAlignmentOffset(_.includes([UP, DOWN], direction) ? flyOutWidth : flyOutHeight) : 0;\n    };\n    this.getMatch = _ref2 => {\n      let {\n        direction,\n        alignment,\n        flyOutHeight,\n        flyOutWidth,\n        clientWidth,\n        directonOffset,\n        alignmentOffset,\n        top,\n        bottom,\n        left,\n        right,\n        width,\n        height\n      } = _ref2;\n      const {\n        up: UP,\n        down: DOWN,\n        left: LEFT,\n        right: RIGHT\n      } = EnumDirection;\n      const {\n        start: START,\n        center: CENTER,\n        end: END\n      } = EnumAlignment;\n      const options = {\n        [UP]: {\n          [START]: {\n            top: top - flyOutHeight - directonOffset,\n            left: left - alignmentOffset\n          },\n          [CENTER]: {\n            top: top - flyOutHeight - directonOffset,\n            left: left + width / 2 - flyOutWidth / 2 + alignmentOffset\n          },\n          [END]: {\n            top: top - flyOutHeight - directonOffset,\n            right: clientWidth - right - alignmentOffset\n          }\n        },\n        [DOWN]: {\n          [START]: {\n            top: bottom + directonOffset,\n            left: left - alignmentOffset\n          },\n          [CENTER]: {\n            top: bottom + directonOffset,\n            left: left + width / 2 - flyOutWidth / 2 + alignmentOffset\n          },\n          [END]: {\n            top: bottom + directonOffset,\n            right: clientWidth - right - alignmentOffset\n          }\n        },\n        [LEFT]: {\n          [START]: {\n            top: top - alignmentOffset,\n            right: clientWidth - left + directonOffset\n          },\n          [CENTER]: {\n            top: top - flyOutHeight / 2 + height / 2 + alignmentOffset,\n            right: clientWidth - left + directonOffset\n          },\n          [END]: {\n            top: top - flyOutHeight + height + alignmentOffset,\n            right: clientWidth - left + directonOffset\n          }\n        },\n        [RIGHT]: {\n          [START]: {\n            top: top - alignmentOffset,\n            left: left + width + directonOffset\n          },\n          [CENTER]: {\n            top: top - flyOutHeight / 2 + height / 2 + alignmentOffset,\n            left: left + width + directonOffset\n          },\n          [END]: {\n            top: top - flyOutHeight + height + alignmentOffset,\n            left: left + width + directonOffset\n          }\n        }\n      };\n      return {\n        ...defaultFlyoutPosition,\n        ...options[direction][alignment]\n      };\n    };\n    this.getFlyoutPosition = () => {\n      const {\n        props: {\n          direction,\n          alignment,\n          directonOffset = ContextMenu.defaultProps.directonOffset,\n          getAlignmentOffset = ContextMenu.defaultProps.getAlignmentOffset\n        },\n        state: {\n          flyOutHeight,\n          flyOutWidth,\n          targetRect: {\n            bottom,\n            left,\n            right,\n            top,\n            width,\n            height\n          }\n        },\n        flyOutPortalRef\n      } = this;\n      const {\n        clientWidth\n      } = document.body;\n      if (!flyOutPortalRef.current) return {};\n      if (direction && alignment) {\n        return this.getMatch({\n          direction,\n          alignment,\n          flyOutHeight,\n          flyOutWidth,\n          clientWidth,\n          directonOffset,\n          alignmentOffset: this.calcAlignmentOffset({\n            direction,\n            alignment,\n            getAlignmentOffset,\n            flyOutHeight,\n            flyOutWidth\n          }),\n          top,\n          bottom,\n          left,\n          right,\n          width,\n          height\n        });\n      }\n    };\n    this.alignFlyOut = function () {\n      let doRedunancyCheck = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const {\n        flyOutPortalRef,\n        targetRef\n      } = _this;\n      if (!targetRef.current || !flyOutPortalRef.current) {\n        return;\n      }\n      const targetRect = getAbsoluteBoundingClientRect(targetRef.current);\n      const portalRef = flyOutPortalRef.current;\n      // Don't cause a state-change if target dimensions are the same\n      if (doRedunancyCheck && targetRect.left === _this.state.targetRect.left && targetRect.top === _this.state.targetRect.top && targetRect.height === _this.state.targetRect.height && targetRect.width === _this.state.targetRect.width) {\n        return;\n      }\n      if (portalRef) {\n        const flyOutEl = portalRef.portalElement.firstChild;\n        const {\n          height,\n          width\n        } = flyOutEl.getBoundingClientRect();\n        _this.setState({\n          targetRect,\n          flyOutHeight: height,\n          flyOutWidth: width\n        });\n      }\n    };\n  }\n  UNSAFE_componentWillReceiveProps() {\n    _.defer(() => this.alignFlyOut());\n  }\n  componentDidMount() {\n    _.defer(() => this.alignFlyOut());\n    this.beginAlignment();\n    document.body.addEventListener('touchstart', this.handleBodyClick);\n    document.body.addEventListener('click', this.handleBodyClick);\n  }\n  componentWillUnmount() {\n    this.endAlignment();\n    document.body.removeEventListener('click', this.handleBodyClick);\n  }\n  render() {\n    const {\n      props: {\n        className,\n        direction,\n        isExpanded,\n        style,\n        minWidthOffset,\n        ...passThroughs\n      },\n      state: {\n        portalId,\n        targetRect\n      }\n    } = this;\n    const targetElement = getFirst(this.props, ContextMenu.Target);\n    const targetChildren = _.get(targetElement, 'props.children', null);\n    const TargetElementType = targetElement.props.elementType;\n    const flyoutElement = getFirst(this.props, ContextMenu.FlyOut);\n    const flyProps = _.get(flyoutElement, 'props', {});\n    return React.createElement(TargetElementType, {\n      ref: this.targetRef,\n      ..._.omit(passThroughs, nonPassThroughs),\n      className: cx('&', className),\n      style: style\n    }, targetChildren, isExpanded ? React.createElement(Portal, {\n      ref: this.flyOutPortalRef,\n      ...flyProps,\n      className: cx('&-FlyOut', `&-FlyOut-${direction}`, flyProps.className),\n      portalId: portalId,\n      style: {\n        minWidth: targetRect.width + minWidthOffset,\n        ...this.getFlyoutPosition(),\n        ...flyProps.style\n      }\n    }, flyProps.children) : null);\n  }\n}\nContextMenu.displayName = 'ContextMenu';\nContextMenu.peek = {\n  description: `Use a \\`ContextMenu\\` to render a target and a flyout positioned relative to the target.`,\n  categories: ['utility'],\n  madeFrom: ['Portal']\n};\nContextMenu.propTypes = {\n  /**\n      \\`children\\` should include exactly one ContextMenu.Target and one\n      ContextMenu.FlyOut.\n  */\n  children: node,\n  /**\n      Appended to the component-specific class names set on the root element.\n  */\n  className: string,\n  /**\n      Passed through to the root element.\n  */\n  style: object,\n  /**\n      direction of the FlyOut relative to Target.\n  */\n  direction: oneOf(['down', 'up', 'right', 'left']),\n  /**\n      the px offset along the axis of the direction\n  */\n  directonOffset: number,\n  /**\n      alignment of the Flyout relative to Target in the cross axis from\n      \\`direction\\`.\n  */\n  alignment: oneOf(['start', 'center', 'end']),\n  /**\n      the px offset along the axis of the alignment\n  */\n  alignmentOffset: number,\n  /**\n      an alternative to \\`alignmentOffset\\`, a function that is applied with\n      the width/height of the flyout. the result is used as the\n      \\`alignmentOffset\\`\n  */\n  getAlignmentOffset: func,\n  /**\n      The number of px's to grow or shrink the minWidth of the FlyOut\n  */\n  minWidthOffset: number,\n  /**\n      Indicates whether the FlyOut will render or not.\n  */\n  isExpanded: bool,\n  /**\n      Called when a click event happenens outside of the ContextMenu, with the\n      signature \\`({ props, event }) => { ... }\\`\n  */\n  onClickOut: func,\n  /**\n      The \\`id\\` of the FlyOut portal element that is appended to\n      \\`document.body\\`. Defaults to a generated \\`id\\`.\n  */\n  portalId: string,\n  FlyOut: node,\n  Target: node\n};\n// all of these should be removed, but it's a breaking change to do so :(\nContextMenu.UP = EnumDirection.up;\nContextMenu.DOWN = EnumDirection.down;\nContextMenu.LEFT = EnumDirection.left;\nContextMenu.RIGHT = EnumDirection.right;\nContextMenu.START = EnumAlignment.start;\nContextMenu.CENTER = EnumAlignment.center;\nContextMenu.END = EnumAlignment.end;\nContextMenu.Target = ContextMenuTarget;\nContextMenu.FlyOut = ContextMenuFlyOut;\nContextMenu.defaultProps = {\n  direction: 'down',\n  directonOffset: 0,\n  minWidthOffset: 0,\n  alignment: 'start',\n  // no default alignmentOffset so it can default to result of `getAlignmentOffset`\n  getAlignmentOffset: _.constant(0),\n  isExpanded: true,\n  onClickOut: null,\n  portalId: null\n};\nexport default ContextMenu;","map":{"version":3,"mappings":"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","names":["React","PropTypes","_","isNil","Portal","getFirst","getAbsoluteBoundingClientRect","sharesAncestor","lucidClassNames","uniqueName","cx","bind","bool","node","func","number","object","oneOf","string","ContextMenuTarget","_props","displayName","propName","peek","description","propTypes","elementType","defaultProps","ContextMenuFlyOut","EnumDirection","EnumAlignment","defaultFlyoutPosition","opacity","maxHeight","left","top","nonPassThroughs","ContextMenu","Component","constructor","createRef","portalId","props","targetRect","bottom","right","height","width","flyOutHeight","flyOutWidth","continueAlignment","window","requestAnimationFrame","handleAlignment","isExpanded","alignFlyOut","event","onClickOut","flyOutPortalRef","targetRef","eventTarget","target","current","nodeName","flyOutEl","portalElement","firstChild","wasALabelClick","contains","type","direction","alignment","getAlignmentOffset","up","UP","down","DOWN","center","CENTER","isUndefined","alignmentOffset","includes","clientWidth","directonOffset","LEFT","RIGHT","start","START","end","END","options","state","document","body","getMatch","calcAlignmentOffset","doRedunancyCheck","portalRef","getBoundingClientRect","setState","UNSAFE_componentWillReceiveProps","defer","componentDidMount","beginAlignment","addEventListener","handleBodyClick","componentWillUnmount","endAlignment","removeEventListener","render","className","style","minWidthOffset","passThroughs","targetElement","Target","targetChildren","get","TargetElementType","flyoutElement","FlyOut","flyProps","ref","omit","minWidth","getFlyoutPosition","children","categories","madeFrom","constant"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/ContextMenu/ContextMenu.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _, { isNil } from 'lodash';\n\nimport Portal from '../Portal/Portal';\nimport { getFirst, StandardProps } from '../../util/component-types';\nimport {\n\tgetAbsoluteBoundingClientRect,\n\tsharesAncestor,\n} from '../../util/dom-helpers';\nimport { lucidClassNames, uniqueName } from '../../util/style-helpers';\n\nconst cx = lucidClassNames.bind('&-ContextMenu');\n\nconst { bool, node, func, number, object, oneOf, string } = PropTypes;\n\nexport interface IContextMenuTargetProps extends StandardProps {\n\telementType: string;\n}\nconst ContextMenuTarget = (_props: IContextMenuTargetProps): null => null;\nContextMenuTarget.displayName = 'ContextMenu.Target';\nContextMenuTarget.propName = 'Target';\nContextMenuTarget.peek = {\n\tdescription: `Renders an element of \\`elementType\\` (defaults to \\`<span>\\`)\n\tthat the menu \\`FlyOut\\` anchors to.`,\n};\nContextMenuTarget.propTypes = {\n\telementType: string,\n};\nContextMenuTarget.defaultProps = {\n\telementType: 'span',\n};\n\nexport interface IContextMenuFlyOutProps\n\textends React.HTMLAttributes<HTMLDivElement> {}\nconst ContextMenuFlyOut = (_props: IContextMenuFlyOutProps): null => null;\nContextMenuFlyOut.displayName = 'ContextMenu.FlyOut';\nContextMenuFlyOut.propName = 'FlyOut';\nContextMenuFlyOut.peek = {\n\tdescription: `Renders a \\`<Portal>\\` anchored to the \\`Target\\`.`,\n};\n\n/** These have to be lowercase because:\n * 1. the key and value have to match\n * \t(limitation of TypeScript, see: https://github.com/Microsoft/TypeScript/issues/17198)\n * 2. the values are currently lowercase in the propTypes\n * */\nexport enum EnumDirection {\n\tup = 'up',\n\tdown = 'down',\n\tleft = 'left',\n\tright = 'right',\n}\nexport type Direction = keyof typeof EnumDirection;\n\nexport enum EnumAlignment {\n\tstart = 'start',\n\tcenter = 'center',\n\tend = 'end',\n}\nexport type Alignment = keyof typeof EnumAlignment;\n\nexport interface FlyoutPosition {\n\topacity: number;\n\tmaxHeight: string | number;\n\tleft: string | number;\n\ttop: string | number;\n}\n\n/** default styling hides portal because its position can't be calculated\n * properly until after 1st render so here we unhide it if the ref exists */\nconst defaultFlyoutPosition = {\n\topacity: 1,\n\tmaxHeight: 'none',\n\tleft: 'auto',\n\ttop: 'auto',\n};\n\ntype GetAlignmentOffset = (n: number) => number;\n\n// TODO: Is there a better way to add type checks for passThroughs in this case\n// where the underling element could be anything vs just extending\n// `React.HTMLProps<HTMLElement>`? Related to issue #1045\nexport interface IContextMenuProps\n\textends StandardProps,\n\t\tReact.HTMLAttributes<HTMLElement> {\n\t/** direction of the FlyOut relative to Target. */\n\tdirection?: Direction;\n\n\t// TODO: fix this mispelling, but it's a breaking change :(\n\t/**\tthe px offset along the axis of the direction */\n\tdirectonOffset: number;\n\n\t/** alignment of the Flyout relative to Target in the cross axis from `direction`. */\n\talignment: Alignment;\n\n\t/** the px offset along the axis of the alignment */\n\talignmentOffset?: number;\n\n\t/** an alternative to `alignmentOffset` a function that is applied with\n\t\tthe width/height of the flyout. the result is used as the\n\t\t`alignmentOffset` */\n\tgetAlignmentOffset: GetAlignmentOffset;\n\n\t/** The number of px's to grow or shrink the minWidth of the FlyOut */\n\tminWidthOffset: number;\n\n\t/** Indicates whether the FlyOut will render or not. */\n\tisExpanded: boolean;\n\n\t/** Called when a click event happenens outside of the ContextMenu */\n\tonClickOut: ({\n\t\tevent,\n\t\tprops,\n\t}: {\n\t\tevent: MouseEvent;\n\t\tprops: IContextMenuProps;\n\t}) => void | null;\n\n\t/** The `id` of the FlyOut portal element that is appended to\n\t\t`document.body`. Defaults to a generated `id`. */\n\tportalId: string | null;\n\n\tFlyOut?: React.ReactNode;\n\tTarget?: React.ReactNode;\n}\n\n/** TODO: Remove this constant when the component is converted to a functional component */\nconst nonPassThroughs = [\n\t'children',\n\t'className',\n\t'style',\n\t'direction',\n\t'directonOffset',\n\t'alignment',\n\t'alignmentOffset',\n\t'getAlignmentOffset',\n\t'minWidthOffset',\n\t'isExpanded',\n\t'onClickOut',\n\t'portalId',\n\t'FlyOut',\n\t'Target',\n];\n\ninterface IContextMenuState {\n\tportalId: string;\n\ttargetRect: {\n\t\tbottom: number;\n\t\ttop: number;\n\t\tleft: number;\n\t\tright: number;\n\t\theight: number;\n\t\twidth: number;\n\t};\n\tflyOutHeight: number;\n\tflyOutWidth: number;\n}\n\nclass ContextMenu extends React.Component<\n\tIContextMenuProps,\n\tIContextMenuState,\n\t{}\n> {\n\tstatic displayName = 'ContextMenu';\n\tstatic peek = {\n\t\tdescription: `Use a \\`ContextMenu\\` to render a target and a flyout positioned relative to the target.`,\n\t\tcategories: ['utility'],\n\t\tmadeFrom: ['Portal'],\n\t};\n\tstatic propTypes = {\n\t\t/**\n\t\t\t\\`children\\` should include exactly one ContextMenu.Target and one\n\t\t\tContextMenu.FlyOut.\n\t\t*/\n\t\tchildren: node,\n\n\t\t/**\n\t\t\tAppended to the component-specific class names set on the root element.\n\t\t*/\n\t\tclassName: string,\n\n\t\t/**\n\t\t\tPassed through to the root element.\n\t\t*/\n\t\tstyle: object,\n\n\t\t/**\n\t\t\tdirection of the FlyOut relative to Target.\n\t\t*/\n\t\tdirection: oneOf(['down', 'up', 'right', 'left']),\n\n\t\t/**\n\t\t\tthe px offset along the axis of the direction\n\t\t*/\n\t\tdirectonOffset: number,\n\n\t\t/**\n\t\t\talignment of the Flyout relative to Target in the cross axis from\n\t\t\t\\`direction\\`.\n\t\t*/\n\t\talignment: oneOf(['start', 'center', 'end']),\n\n\t\t/**\n\t\t\tthe px offset along the axis of the alignment\n\t\t*/\n\t\talignmentOffset: number,\n\n\t\t/**\n\t\t\tan alternative to \\`alignmentOffset\\`, a function that is applied with\n\t\t\tthe width/height of the flyout. the result is used as the\n\t\t\t\\`alignmentOffset\\`\n\t\t*/\n\t\tgetAlignmentOffset: func,\n\n\t\t/**\n\t\t\tThe number of px's to grow or shrink the minWidth of the FlyOut\n\t\t*/\n\t\tminWidthOffset: number,\n\n\t\t/**\n\t\t\tIndicates whether the FlyOut will render or not.\n\t\t*/\n\t\tisExpanded: bool,\n\n\t\t/**\n\t\t\tCalled when a click event happenens outside of the ContextMenu, with the\n\t\t\tsignature \\`({ props, event }) => { ... }\\`\n\t\t*/\n\t\tonClickOut: func,\n\n\t\t/**\n\t\t\tThe \\`id\\` of the FlyOut portal element that is appended to\n\t\t\t\\`document.body\\`. Defaults to a generated \\`id\\`.\n\t\t*/\n\t\tportalId: string,\n\n\t\tFlyOut: node,\n\t\tTarget: node,\n\t};\n\n\t// all of these should be removed, but it's a breaking change to do so :(\n\tstatic UP = EnumDirection.up;\n\tstatic DOWN = EnumDirection.down;\n\tstatic LEFT = EnumDirection.left;\n\tstatic RIGHT = EnumDirection.right;\n\tstatic START = EnumAlignment.start;\n\tstatic CENTER = EnumAlignment.center;\n\tstatic END = EnumAlignment.end;\n\n\tstatic Target = ContextMenuTarget;\n\tstatic FlyOut = ContextMenuFlyOut;\n\n\tprivate targetRef = React.createRef<HTMLDivElement>();\n\tprivate flyOutPortalRef = React.createRef<Portal>();\n\n\tstatic defaultProps = {\n\t\tdirection: 'down',\n\t\tdirectonOffset: 0,\n\t\tminWidthOffset: 0,\n\t\talignment: 'start',\n\t\t// no default alignmentOffset so it can default to result of `getAlignmentOffset`\n\t\tgetAlignmentOffset: _.constant(0),\n\t\tisExpanded: true,\n\t\tonClickOut: null,\n\t\tportalId: null,\n\t};\n\n\tstate = {\n\t\tportalId: this.props.portalId || uniqueName('ContextMenu-Portal-'),\n\t\ttargetRect: {\n\t\t\tbottom: 0,\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\theight: 0,\n\t\t\twidth: 0,\n\t\t},\n\t\tflyOutHeight: 0,\n\t\tflyOutWidth: 0,\n\t};\n\n\t// TODO: does this need to be instance property?\n\tcontinueAlignment = false;\n\n\tbeginAlignment = (): void => {\n\t\tthis.continueAlignment = true;\n\t\twindow.requestAnimationFrame(this.handleAlignment);\n\t};\n\n\tendAlignment = (): void => {\n\t\tthis.continueAlignment = false;\n\t};\n\n\thandleAlignment = (): void => {\n\t\tif (this.continueAlignment) {\n\t\t\tif (this.props.isExpanded) {\n\t\t\t\tthis.alignFlyOut(true);\n\t\t\t}\n\t\t\twindow.requestAnimationFrame(this.handleAlignment);\n\t\t}\n\t};\n\n\thandleBodyClick = (event: MouseEvent | TouchEvent): void => {\n\t\tconst {\n\t\t\tprops,\n\t\t\tprops: { onClickOut },\n\t\t\tflyOutPortalRef,\n\t\t\ttargetRef,\n\t\t} = this;\n\n\t\t// in this block, I assert the type of target because EventTarget -> Element -> HtmlElement (from general to specific typing)\n\t\tconst eventTarget = event.target as HTMLElement | null;\n\n\t\tif (\n\t\t\t!isNil(onClickOut) &&\n\t\t\tflyOutPortalRef.current &&\n\t\t\ttargetRef.current &&\n\t\t\teventTarget &&\n\t\t\teventTarget.nodeName\n\t\t) {\n\t\t\tconst flyOutEl = flyOutPortalRef.current.portalElement.firstChild;\n\t\t\tconst wasALabelClick =\n\t\t\t\teventTarget.nodeName === 'INPUT' &&\n\t\t\t\tsharesAncestor(eventTarget, targetRef.current, 'LABEL');\n\n\t\t\t// Attempt to detect <label> click and ignore it\n\t\t\tif (wasALabelClick) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!(\n\t\t\t\t\t(flyOutEl as HTMLDivElement).contains(eventTarget) ||\n\t\t\t\t\ttargetRef.current.contains(eventTarget)\n\t\t\t\t) &&\n\t\t\t\tevent.type === 'click'\n\t\t\t) {\n\t\t\t\tonClickOut({ props, event: event as MouseEvent });\n\t\t\t}\n\t\t}\n\t};\n\n\tcalcAlignmentOffset = ({\n\t\tdirection,\n\t\talignment,\n\t\tgetAlignmentOffset,\n\t\tflyOutHeight,\n\t\tflyOutWidth,\n\t}: {\n\t\tdirection: Direction;\n\t\talignment: Alignment;\n\t\tgetAlignmentOffset: GetAlignmentOffset;\n\t\tflyOutHeight: number;\n\t\tflyOutWidth: number;\n\t}): number => {\n\t\tconst { up: UP, down: DOWN } = EnumDirection;\n\t\tconst { center: CENTER } = EnumAlignment;\n\n\t\treturn !_.isUndefined(this.props.alignmentOffset)\n\t\t\t? this.props.alignmentOffset\n\t\t\t: alignment === CENTER\n\t\t\t? getAlignmentOffset(\n\t\t\t\t\t_.includes([UP, DOWN], direction) ? flyOutWidth : flyOutHeight\n\t\t\t  )\n\t\t\t: 0;\n\t};\n\n\tgetMatch = ({\n\t\tdirection,\n\t\talignment,\n\t\tflyOutHeight,\n\t\tflyOutWidth,\n\t\tclientWidth,\n\t\tdirectonOffset,\n\t\talignmentOffset,\n\t\ttop,\n\t\tbottom,\n\t\tleft,\n\t\tright,\n\t\twidth,\n\t\theight,\n\t}: {\n\t\tdirection: Direction;\n\t\talignment: Alignment;\n\t\tflyOutHeight: number;\n\t\tflyOutWidth: number;\n\t\tclientWidth: number;\n\t\tdirectonOffset: number;\n\t\talignmentOffset: number;\n\t\ttop: number;\n\t\tbottom: number;\n\t\tleft: number;\n\t\tright: number;\n\t\twidth: number;\n\t\theight: number;\n\t}): FlyoutPosition => {\n\t\tconst { up: UP, down: DOWN, left: LEFT, right: RIGHT } = EnumDirection;\n\t\tconst { start: START, center: CENTER, end: END } = EnumAlignment;\n\n\t\tconst options = {\n\t\t\t[UP]: {\n\t\t\t\t[START]: {\n\t\t\t\t\ttop: top - flyOutHeight - directonOffset,\n\t\t\t\t\tleft: left - alignmentOffset,\n\t\t\t\t},\n\t\t\t\t[CENTER]: {\n\t\t\t\t\ttop: top - flyOutHeight - directonOffset,\n\t\t\t\t\tleft: left + width / 2 - flyOutWidth / 2 + alignmentOffset,\n\t\t\t\t},\n\t\t\t\t[END]: {\n\t\t\t\t\ttop: top - flyOutHeight - directonOffset,\n\t\t\t\t\tright: clientWidth - right - alignmentOffset,\n\t\t\t\t},\n\t\t\t},\n\t\t\t[DOWN]: {\n\t\t\t\t[START]: {\n\t\t\t\t\ttop: bottom + directonOffset,\n\t\t\t\t\tleft: left - alignmentOffset,\n\t\t\t\t},\n\t\t\t\t[CENTER]: {\n\t\t\t\t\ttop: bottom + directonOffset,\n\t\t\t\t\tleft: left + width / 2 - flyOutWidth / 2 + alignmentOffset,\n\t\t\t\t},\n\t\t\t\t[END]: {\n\t\t\t\t\ttop: bottom + directonOffset,\n\t\t\t\t\tright: clientWidth - right - alignmentOffset,\n\t\t\t\t},\n\t\t\t},\n\t\t\t[LEFT]: {\n\t\t\t\t[START]: {\n\t\t\t\t\ttop: top - alignmentOffset,\n\t\t\t\t\tright: clientWidth - left + directonOffset,\n\t\t\t\t},\n\t\t\t\t[CENTER]: {\n\t\t\t\t\ttop: top - flyOutHeight / 2 + height / 2 + alignmentOffset,\n\t\t\t\t\tright: clientWidth - left + directonOffset,\n\t\t\t\t},\n\t\t\t\t[END]: {\n\t\t\t\t\ttop: top - flyOutHeight + height + alignmentOffset,\n\t\t\t\t\tright: clientWidth - left + directonOffset,\n\t\t\t\t},\n\t\t\t},\n\t\t\t[RIGHT]: {\n\t\t\t\t[START]: {\n\t\t\t\t\ttop: top - alignmentOffset,\n\t\t\t\t\tleft: left + width + directonOffset,\n\t\t\t\t},\n\t\t\t\t[CENTER]: {\n\t\t\t\t\ttop: top - flyOutHeight / 2 + height / 2 + alignmentOffset,\n\t\t\t\t\tleft: left + width + directonOffset,\n\t\t\t\t},\n\t\t\t\t[END]: {\n\t\t\t\t\ttop: top - flyOutHeight + height + alignmentOffset,\n\t\t\t\t\tleft: left + width + directonOffset,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn {\n\t\t\t...defaultFlyoutPosition,\n\t\t\t...options[direction][alignment],\n\t\t};\n\t};\n\n\tgetFlyoutPosition = (): FlyoutPosition | {} | undefined => {\n\t\tconst {\n\t\t\tprops: {\n\t\t\t\tdirection,\n\t\t\t\talignment,\n\t\t\t\tdirectonOffset = ContextMenu.defaultProps.directonOffset,\n\t\t\t\tgetAlignmentOffset = ContextMenu.defaultProps.getAlignmentOffset,\n\t\t\t},\n\t\t\tstate: {\n\t\t\t\tflyOutHeight,\n\t\t\t\tflyOutWidth,\n\t\t\t\ttargetRect: { bottom, left, right, top, width, height },\n\t\t\t},\n\t\t\tflyOutPortalRef,\n\t\t} = this;\n\n\t\tconst { clientWidth } = document.body;\n\n\t\tif (!flyOutPortalRef.current) return {};\n\n\t\tif (direction && alignment) {\n\t\t\treturn this.getMatch({\n\t\t\t\tdirection,\n\t\t\t\talignment,\n\t\t\t\tflyOutHeight,\n\t\t\t\tflyOutWidth,\n\t\t\t\tclientWidth,\n\t\t\t\tdirectonOffset,\n\t\t\t\talignmentOffset: this.calcAlignmentOffset({\n\t\t\t\t\tdirection,\n\t\t\t\t\talignment,\n\t\t\t\t\tgetAlignmentOffset,\n\t\t\t\t\tflyOutHeight,\n\t\t\t\t\tflyOutWidth,\n\t\t\t\t}),\n\t\t\t\ttop,\n\t\t\t\tbottom,\n\t\t\t\tleft,\n\t\t\t\tright,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t});\n\t\t}\n\t};\n\n\talignFlyOut = (doRedunancyCheck = false): void => {\n\t\tconst { flyOutPortalRef, targetRef } = this;\n\n\t\tif (!targetRef.current || !flyOutPortalRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst targetRect = getAbsoluteBoundingClientRect(\n\t\t\ttargetRef.current as HTMLDivElement\n\t\t);\n\t\tconst portalRef = flyOutPortalRef.current as Portal;\n\n\t\t// Don't cause a state-change if target dimensions are the same\n\t\tif (\n\t\t\tdoRedunancyCheck &&\n\t\t\ttargetRect.left === this.state.targetRect.left &&\n\t\t\ttargetRect.top === this.state.targetRect.top &&\n\t\t\ttargetRect.height === this.state.targetRect.height &&\n\t\t\ttargetRect.width === this.state.targetRect.width\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (portalRef) {\n\t\t\tconst flyOutEl = portalRef.portalElement.firstChild;\n\t\t\tconst { height, width } = (\n\t\t\t\tflyOutEl as HTMLDivElement\n\t\t\t).getBoundingClientRect();\n\t\t\tthis.setState({\n\t\t\t\ttargetRect,\n\t\t\t\tflyOutHeight: height,\n\t\t\t\tflyOutWidth: width,\n\t\t\t});\n\t\t}\n\t};\n\n\tUNSAFE_componentWillReceiveProps(): void {\n\t\t_.defer((): void => this.alignFlyOut());\n\t}\n\n\tcomponentDidMount(): void {\n\t\t_.defer((): void => this.alignFlyOut());\n\t\tthis.beginAlignment();\n\n\t\tdocument.body.addEventListener('touchstart', this.handleBodyClick);\n\t\tdocument.body.addEventListener('click', this.handleBodyClick);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.endAlignment();\n\t\tdocument.body.removeEventListener('click', this.handleBodyClick);\n\t}\n\n\trender(): React.ReactNode {\n\t\tconst {\n\t\t\tprops: {\n\t\t\t\tclassName,\n\t\t\t\tdirection,\n\t\t\t\tisExpanded,\n\t\t\t\tstyle,\n\t\t\t\tminWidthOffset,\n\t\t\t\t...passThroughs\n\t\t\t},\n\t\t\tstate: { portalId, targetRect },\n\t\t} = this;\n\n\t\tconst targetElement = getFirst(\n\t\t\tthis.props,\n\t\t\tContextMenu.Target\n\t\t) as React.ReactElement;\n\t\tconst targetChildren = _.get(targetElement, 'props.children', null);\n\t\tconst TargetElementType = targetElement.props.elementType;\n\n\t\tconst flyoutElement = getFirst(this.props, ContextMenu.FlyOut);\n\t\tconst flyProps = _.get(flyoutElement, 'props', {});\n\n\t\treturn (\n\t\t\t<TargetElementType\n\t\t\t\tref={this.targetRef}\n\t\t\t\t{..._.omit(passThroughs, nonPassThroughs)}\n\t\t\t\tclassName={cx('&', className)}\n\t\t\t\tstyle={style}\n\t\t\t>\n\t\t\t\t{targetChildren}\n\t\t\t\t{isExpanded ? (\n\t\t\t\t\t<Portal\n\t\t\t\t\t\tref={this.flyOutPortalRef}\n\t\t\t\t\t\t{...flyProps}\n\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\t'&-FlyOut',\n\t\t\t\t\t\t\t`&-FlyOut-${direction}`,\n\t\t\t\t\t\t\tflyProps.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tportalId={portalId}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tminWidth: targetRect.width + (minWidthOffset as number),\n\t\t\t\t\t\t\t...this.getFlyoutPosition(),\n\t\t\t\t\t\t\t...flyProps.style,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{flyProps.children}\n\t\t\t\t\t</Portal>\n\t\t\t\t) : null}\n\t\t\t</TargetElementType>\n\t\t);\n\t}\n}\n\nexport default ContextMenu;\n"]},"metadata":{},"sourceType":"module"}