{"ast":null,"code":"import _ from 'lodash';\nexport function onExpand(state) {\n  const {\n    selectedIndices\n  } = state;\n  const focusedIndex = _.last(selectedIndices);\n  return {\n    ...state,\n    isExpanded: true,\n    focusedIndex: _.isNil(focusedIndex) ? null : focusedIndex\n  };\n}\nexport function onCollapse(state) {\n  return {\n    ...state,\n    isExpanded: false\n  };\n}\nexport function onSelect(state, optionIndex) {\n  return {\n    ...state,\n    selectedIndices: [optionIndex],\n    isExpanded: false\n  };\n}\nexport function onFocusNext(state) {\n  const {\n    focusedIndex\n  } = state;\n  let nextFocusedIndex = focusedIndex;\n  if (_.isNull(focusedIndex)) {\n    nextFocusedIndex = 0;\n  } else if (_.isNumber(focusedIndex)) {\n    nextFocusedIndex = focusedIndex + 1;\n  }\n  return {\n    ...state,\n    focusedIndex: nextFocusedIndex\n  };\n}\nexport function onFocusPrev(state) {\n  const {\n    focusedIndex\n  } = state;\n  let nextFocusedIndex = focusedIndex;\n  if (_.isNull(focusedIndex) || focusedIndex === 0) {\n    nextFocusedIndex = null;\n  } else if (_.isNumber(focusedIndex)) {\n    nextFocusedIndex = focusedIndex - 1;\n  }\n  return {\n    ...state,\n    focusedIndex: nextFocusedIndex\n  };\n}\nexport function onFocusOption(state, optionIndex) {\n  return {\n    ...state,\n    focusedIndex: optionIndex\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AAGtB,OAAM,SAAUC,QAAQ,CAACC,KAAqB;EAC7C,MAAM;IAAEC;EAAe,CAAE,GAAGD,KAAK;EACjC,MAAME,YAAY,GAAGJ,CAAC,CAACK,IAAI,CAACF,eAAe,CAAC;EAC5C,OAAO;IACN,GAAGD,KAAK;IACRI,UAAU,EAAE,IAAI;IAChBF,YAAY,EAAEJ,CAAC,CAACO,KAAK,CAACH,YAAY,CAAC,GAAG,IAAI,GAAGA;GAC7C;AACF;AAEA,OAAM,SAAUI,UAAU,CAACN,KAAqB;EAC/C,OAAO;IACN,GAAGA,KAAK;IACRI,UAAU,EAAE;GACZ;AACF;AAEA,OAAM,SAAUG,QAAQ,CACvBP,KAAqB,EACrBQ,WAAmB;EAEnB,OAAO;IACN,GAAGR,KAAK;IACRC,eAAe,EAAE,CAACO,WAAW,CAAC;IAC9BJ,UAAU,EAAE;GACZ;AACF;AAEA,OAAM,SAAUK,WAAW,CAACT,KAAqB;EAChD,MAAM;IAAEE;EAAY,CAAE,GAAGF,KAAK;EAC9B,IAAIU,gBAAgB,GAAGR,YAAY;EAEnC,IAAIJ,CAAC,CAACa,MAAM,CAACT,YAAY,CAAC,EAAE;IAC3BQ,gBAAgB,GAAG,CAAC;GACpB,MAAM,IAAIZ,CAAC,CAACc,QAAQ,CAACV,YAAY,CAAC,EAAE;IACpCQ,gBAAgB,GAAGR,YAAY,GAAG,CAAC;;EAGpC,OAAO;IACN,GAAGF,KAAK;IACRE,YAAY,EAAEQ;GACd;AACF;AAEA,OAAM,SAAUG,WAAW,CAACb,KAAqB;EAChD,MAAM;IAAEE;EAAY,CAAE,GAAGF,KAAK;EAC9B,IAAIU,gBAAgB,GAAGR,YAAY;EAEnC,IAAIJ,CAAC,CAACa,MAAM,CAACT,YAAY,CAAC,IAAIA,YAAY,KAAK,CAAC,EAAE;IACjDQ,gBAAgB,GAAG,IAAI;GACvB,MAAM,IAAIZ,CAAC,CAACc,QAAQ,CAACV,YAAY,CAAC,EAAE;IACpCQ,gBAAgB,GAAGR,YAAY,GAAG,CAAC;;EAGpC,OAAO;IACN,GAAGF,KAAK;IACRE,YAAY,EAAEQ;GACd;AACF;AAEA,OAAM,SAAUI,aAAa,CAC5Bd,KAAqB,EACrBQ,WAAmB;EAEnB,OAAO;IACN,GAAGR,KAAK;IACRE,YAAY,EAAEM;GACd;AACF","names":["_","onExpand","state","selectedIndices","focusedIndex","last","isExpanded","isNil","onCollapse","onSelect","optionIndex","onFocusNext","nextFocusedIndex","isNull","isNumber","onFocusPrev","onFocusOption"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/DropMenu/DropMenu.reducers.ts"],"sourcesContent":["import _ from 'lodash';\nimport { IDropMenuState } from './DropMenu';\n\nexport function onExpand(state: IDropMenuState): IDropMenuState {\n\tconst { selectedIndices } = state;\n\tconst focusedIndex = _.last(selectedIndices);\n\treturn {\n\t\t...state,\n\t\tisExpanded: true,\n\t\tfocusedIndex: _.isNil(focusedIndex) ? null : focusedIndex,\n\t};\n}\n\nexport function onCollapse(state: IDropMenuState): IDropMenuState {\n\treturn {\n\t\t...state,\n\t\tisExpanded: false,\n\t};\n}\n\nexport function onSelect(\n\tstate: IDropMenuState,\n\toptionIndex: number\n): IDropMenuState {\n\treturn {\n\t\t...state,\n\t\tselectedIndices: [optionIndex],\n\t\tisExpanded: false,\n\t};\n}\n\nexport function onFocusNext(state: IDropMenuState): IDropMenuState {\n\tconst { focusedIndex } = state;\n\tlet nextFocusedIndex = focusedIndex;\n\n\tif (_.isNull(focusedIndex)) {\n\t\tnextFocusedIndex = 0;\n\t} else if (_.isNumber(focusedIndex)) {\n\t\tnextFocusedIndex = focusedIndex + 1;\n\t}\n\n\treturn {\n\t\t...state,\n\t\tfocusedIndex: nextFocusedIndex,\n\t};\n}\n\nexport function onFocusPrev(state: IDropMenuState): IDropMenuState {\n\tconst { focusedIndex } = state;\n\tlet nextFocusedIndex = focusedIndex;\n\n\tif (_.isNull(focusedIndex) || focusedIndex === 0) {\n\t\tnextFocusedIndex = null;\n\t} else if (_.isNumber(focusedIndex)) {\n\t\tnextFocusedIndex = focusedIndex - 1;\n\t}\n\n\treturn {\n\t\t...state,\n\t\tfocusedIndex: nextFocusedIndex,\n\t};\n}\n\nexport function onFocusOption(\n\tstate: IDropMenuState,\n\toptionIndex: number\n): IDropMenuState {\n\treturn {\n\t\t...state,\n\t\tfocusedIndex: optionIndex,\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}