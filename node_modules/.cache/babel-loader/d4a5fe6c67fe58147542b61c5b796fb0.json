{"ast":null,"code":"export function onToggle(state) {\n  return {\n    ...state,\n    isExpanded: !state.isExpanded\n  };\n}\n// TODO:  why doesn't typscript catch this when we `import * as reducers` from\n// this file.\n//\n// export function doesNotExist(state: IExpanderState): IExpanderState {\n// \treturn {\n// \t\t...state,\n// \t\tisExpanded: !state.isExpanded,\n// \t};\n// }","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,QAAQ,CAACC,KAAqB;EAC7C,OAAO;IACN,GAAGA,KAAK;IACRC,UAAU,EAAE,CAACD,KAAK,CAACC;GACnB;AACF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["onToggle","state","isExpanded"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/Expander/Expander.reducers.ts"],"sourcesContent":["import { IExpanderState } from './Expander';\n\nexport function onToggle(state: IExpanderState): IExpanderState {\n\treturn {\n\t\t...state,\n\t\tisExpanded: !state.isExpanded,\n\t};\n}\n\n// TODO:  why doesn't typscript catch this when we `import * as reducers` from\n// this file.\n//\n// export function doesNotExist(state: IExpanderState): IExpanderState {\n// \treturn {\n// \t\t...state,\n// \t\tisExpanded: !state.isExpanded,\n// \t};\n// }\n"]},"metadata":{},"sourceType":"module"}