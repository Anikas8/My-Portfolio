{"ast":null,"code":"/* eslint-disable react/prop-types */\nimport _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { findTypes } from '../../util/component-types';\nconst cx = lucidClassNames.bind('&-Breadcrumb');\nconst {\n  any,\n  node\n} = PropTypes;\nconst BreadcrumbItem = _props => null;\nBreadcrumbItem.displayName = 'Breadcrumb.Item';\nBreadcrumbItem.peek = {\n  description: `Renders a \\`li\\``\n};\nBreadcrumbItem.propName = 'Item';\nBreadcrumbItem.propTypes = {\n  children: node\n};\nexport const Breadcrumb = props => {\n  const {\n    className,\n    ...passThroughs\n  } = props;\n  const items = findTypes(props, Breadcrumb.Item);\n  const initialItems = _.initial(items);\n  const lastItem = _.last(items);\n  return React.createElement(\"nav\", {\n    ...passThroughs,\n    className: cx('&', className)\n  }, !_.isEmpty(items) ? React.createElement(\"ul\", {\n    className: cx('&-List')\n  }, _.map(initialItems, _ref => {\n    let {\n      props,\n      key\n    } = _ref;\n    return React.createElement(\"li\", {\n      ...props,\n      key: key,\n      className: cx('&-Item', className)\n    }, props.children, React.createElement(\"span\", {\n      className: cx('&-BreadcrumbSeparator')\n    }, React.createElement(\"span\", null), React.createElement(\"span\", null)));\n  }), React.createElement(\"li\", {\n    ...lastItem.props,\n    key: lastItem.key,\n    className: cx('&-Item', lastItem.props.className)\n  })) : null);\n};\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.peek = {\n  description: `A navigation component to show a user's place in a navigation hierarchy and provide links to return to higher points in that hierarchy.`,\n  categories: ['navigation']\n};\nBreadcrumb.propTypes = {\n  /**\n      All children should be \\`Breadcrumb.Item\\`s. Others are ignored.\n  */\n  children: node,\n  /**\n      Appended to the component-specific class names set on the root element.\n      Value is run through the \\`classnames\\` library.\n  */\n  className: any,\n  /**\n      A child element that renders a \\`li\\`.\n  */\n  Item: node\n};\nBreadcrumb.Item = BreadcrumbItem;\nexport default Breadcrumb;","map":{"version":3,"mappings":"AAAA;AACA,OAAOA,CAAC,MAAM,QAAQ;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,SAAS,QAAuB,4BAA4B;AAErE,MAAMC,EAAE,GAAGF,eAAe,CAACG,IAAI,CAAC,cAAc,CAAC;AAE/C,MAAM;EAAEC,GAAG;EAAEC;AAAI,CAAE,GAAGN,SAAS;AAG/B,MAAMO,cAAc,GAAIC,MAA4B,IAAW,IAAI;AAEnED,cAAc,CAACE,WAAW,GAAG,iBAAiB;AAC9CF,cAAc,CAACG,IAAI,GAAG;EACrBC,WAAW,EAAE;CACb;AACDJ,cAAc,CAACK,QAAQ,GAAG,MAAM;AAChCL,cAAc,CAACM,SAAS,GAAG;EAC1BC,QAAQ,EAAER;CACV;AAWD,OAAO,MAAMS,UAAU,GAAIC,KAAuB,IAAwB;EACzE,MAAM;IAAEC,SAAS;IAAE,GAAGC;EAAY,CAAE,GAAGF,KAAK;EAC5C,MAAMG,KAAK,GAAGjB,SAAS,CAACc,KAAK,EAAED,UAAU,CAACK,IAAI,CAAC;EAC/C,MAAMC,YAAY,GAAGvB,CAAC,CAACwB,OAAO,CAACH,KAAK,CAAC;EACrC,MAAMI,QAAQ,GAAGzB,CAAC,CAAC0B,IAAI,CAACL,KAAK,CAAC;EAE9B,OACCpB;IAAA,GAAUmB,YAAoB;IAAED,SAAS,EAAEd,EAAE,CAAC,GAAG,EAAEc,SAAS;EAAC,GAC3D,CAACnB,CAAC,CAAC2B,OAAO,CAACN,KAAK,CAAC,GACjBpB;IAAIkB,SAAS,EAAEd,EAAE,CAAC,QAAQ;EAAC,GACzBL,CAAC,CAAC4B,GAAG,CACLL,YAAoC,EACpC;IAAA,IAAC;MAAEL,KAAK;MAAEW;IAAG,CAAE;IAAA,OACd5B;MAAA,GAAQiB,KAAK;MAAEW,GAAG,EAAEA,GAAG;MAAEV,SAAS,EAAEd,EAAE,CAAC,QAAQ,EAAEc,SAAS;IAAC,GACzDD,KAAK,CAACF,QAAQ,EACff;MAAMkB,SAAS,EAAEd,EAAE,CAAC,uBAAuB;IAAC,GAC3CJ,iCAAQ,EACRA,iCAAQ,CACF,CACH;EAAA,CACL,CACD,EACDA;IAAA,GACMwB,QAA+B,CAACP,KAAK;IAC1CW,GAAG,EAAGJ,QAA+B,CAACI,GAAG;IACzCV,SAAS,EAAEd,EAAE,CACZ,QAAQ,EACPoB,QAA+B,CAACP,KAAK,CAACC,SAAS;EAChD,EACA,CACE,GACF,IAAI,CACH;AAER,CAAC;AACDF,UAAU,CAACN,WAAW,GAAG,YAAY;AACrCM,UAAU,CAACL,IAAI,GAAG;EACjBC,WAAW,EAAE,yIAAyI;EACtJiB,UAAU,EAAE,CAAC,YAAY;CACzB;AACDb,UAAU,CAACF,SAAS,GAAG;EACtB;;;EAGAC,QAAQ,EAAER,IAAI;EACd;;;;EAIAW,SAAS,EAAEZ,GAAG;EACd;;;EAGAe,IAAI,EAAEd;CACN;AAEDS,UAAU,CAACK,IAAI,GAAGb,cAAc;AAEhC,eAAeQ,UAAU","names":["_","React","PropTypes","lucidClassNames","findTypes","cx","bind","any","node","BreadcrumbItem","_props","displayName","peek","description","propName","propTypes","children","Breadcrumb","props","className","passThroughs","items","Item","initialItems","initial","lastItem","last","isEmpty","map","key","categories"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/Breadcrumb/Breadcrumb.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { findTypes, StandardProps } from '../../util/component-types';\n\nconst cx = lucidClassNames.bind('&-Breadcrumb');\n\nconst { any, node } = PropTypes;\n\nexport interface IBreadcrumbItemProps extends StandardProps {}\nconst BreadcrumbItem = (_props: IBreadcrumbItemProps): null => null;\n\nBreadcrumbItem.displayName = 'Breadcrumb.Item';\nBreadcrumbItem.peek = {\n\tdescription: `Renders a \\`li\\``,\n};\nBreadcrumbItem.propName = 'Item';\nBreadcrumbItem.propTypes = {\n\tchildren: node,\n};\n\nexport interface IBreadcrumbProps\n\textends StandardProps,\n\t\tReact.DetailedHTMLProps<\n\t\t\tReact.HTMLAttributes<HTMLDivElement>,\n\t\t\tHTMLDivElement\n\t\t> {\n\tItem?: string | (React.ReactNode & { props: IBreadcrumbItemProps });\n}\n\nexport const Breadcrumb = (props: IBreadcrumbProps): React.ReactElement => {\n\tconst { className, ...passThroughs } = props;\n\tconst items = findTypes(props, Breadcrumb.Item);\n\tconst initialItems = _.initial(items);\n\tconst lastItem = _.last(items);\n\n\treturn (\n\t\t<nav {...(passThroughs as any)} className={cx('&', className)}>\n\t\t\t{!_.isEmpty(items) ? (\n\t\t\t\t<ul className={cx('&-List')}>\n\t\t\t\t\t{_.map(\n\t\t\t\t\t\tinitialItems as React.ReactElement[],\n\t\t\t\t\t\t({ props, key }): React.ReactNode => (\n\t\t\t\t\t\t\t<li {...props} key={key} className={cx('&-Item', className)}>\n\t\t\t\t\t\t\t\t{props.children}\n\t\t\t\t\t\t\t\t<span className={cx('&-BreadcrumbSeparator')}>\n\t\t\t\t\t\t\t\t\t<span />\n\t\t\t\t\t\t\t\t\t<span />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t\t<li\n\t\t\t\t\t\t{...(lastItem as React.ReactElement).props}\n\t\t\t\t\t\tkey={(lastItem as React.ReactElement).key}\n\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\t'&-Item',\n\t\t\t\t\t\t\t(lastItem as React.ReactElement).props.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t) : null}\n\t\t</nav>\n\t);\n};\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.peek = {\n\tdescription: `A navigation component to show a user's place in a navigation hierarchy and provide links to return to higher points in that hierarchy.`,\n\tcategories: ['navigation'],\n};\nBreadcrumb.propTypes = {\n\t/**\n\t\tAll children should be \\`Breadcrumb.Item\\`s. Others are ignored.\n\t*/\n\tchildren: node,\n\t/**\n\t\tAppended to the component-specific class names set on the root element.\n\t\tValue is run through the \\`classnames\\` library.\n\t*/\n\tclassName: any,\n\t/**\n\t\tA child element that renders a \\`li\\`.\n\t*/\n\tItem: node,\n};\n\nBreadcrumb.Item = BreadcrumbItem;\n\nexport default Breadcrumb;\n"]},"metadata":{},"sourceType":"module"}