{"ast":null,"code":"import React from 'react';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport PropTypes from 'prop-types';\nconst cx = lucidClassNames.bind('&-TextFieldPlain');\nconst TextFieldPlain = React.forwardRef((_ref, ref) => {\n  let {\n    isDisabled = false,\n    isMultiLine = false,\n    ...props\n  } = _ref;\n  const className = cx('&', {\n    '&-is-disabled': isDisabled,\n    '&-is-multi-line': isMultiLine,\n    '&-is-single-line': !isMultiLine\n  }, props.className);\n  if (isMultiLine) {\n    return React.createElement(\"textarea\", {\n      ref: ref,\n      ...props,\n      className: className\n    });\n  } else {\n    return React.createElement(\"input\", {\n      ref: ref,\n      ...props,\n      className: className\n    });\n  }\n});\n// @ts-ignore\nTextFieldPlain.propTypes = {\n  isDisabled: PropTypes.bool,\n  isMultiLine: PropTypes.bool,\n  className: PropTypes.string\n};\nTextFieldPlain.displayName = 'TextFieldPlain';\nexport default TextFieldPlain;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,EAAE,GAAGF,eAAe,CAACG,IAAI,CAAC,kBAAkB,CAAC;AAiBnD,MAAMC,cAAc,GAAGL,KAAK,CAACM,UAAU,CACtC,OAMCC,GAAsD,KACnD;EAAA,IANH;IACCC,UAAU,GAAG,KAAK;IAClBC,WAAW,GAAG,KAAK;IACnB,GAAGC;EAAK,CACsC;EAG/C,MAAMC,SAAS,GAAGR,EAAE,CACnB,GAAG,EACH;IACC,eAAe,EAAEK,UAAU;IAC3B,iBAAiB,EAAEC,WAAW;IAC9B,kBAAkB,EAAE,CAACA;GACrB,EACDC,KAAK,CAACC,SAAS,CACf;EACD,IAAIF,WAAW,EAAE;IAChB,OACCT;MACCO,GAAG,EAAEA,GAAqC;MAAA,GACrCG,KAAgC;MACrCC,SAAS,EAAEA;IAAS,EACnB;GAEH,MAAM;IACN,OACCX;MACCO,GAAG,EAAEA,GAAkC;MAAA,GAClCG,KAA6B;MAClCC,SAAS,EAAEA;IAAS,EACnB;;AAGL,CAAC,CACD;AACD;AACAN,cAAc,CAACO,SAAS,GAAG;EAC1BJ,UAAU,EAAEN,SAAS,CAACW,IAAI;EAC1BJ,WAAW,EAAEP,SAAS,CAACW,IAAI;EAC3BF,SAAS,EAAET,SAAS,CAACY;CACrB;AACDT,cAAc,CAACU,WAAW,GAAG,gBAAgB;AAC7C,eAAeV,cAAc","names":["React","lucidClassNames","PropTypes","cx","bind","TextFieldPlain","forwardRef","ref","isDisabled","isMultiLine","props","className","propTypes","bool","string","displayName"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/TextField/TextFieldPlain.tsx"],"sourcesContent":["import React from 'react';\n\nimport { lucidClassNames } from '../../util/style-helpers';\nimport PropTypes from 'prop-types';\n\nconst cx = lucidClassNames.bind('&-TextFieldPlain');\n\ntype InputProps = JSX.IntrinsicElements['input'];\ntype TextareaProps = JSX.IntrinsicElements['textarea'];\n\ninterface TextFieldInputPlain extends InputProps {\n\tisDisabled?: boolean;\n\tisMultiLine?: boolean;\n\trows?: number;\n\tstyle?: object;\n\tplaceholder?: string;\n}\ninterface TextFieldTextareaPlain extends TextareaProps {\n\tisDisabled?: boolean;\n\tisMultiLine?: boolean;\n}\n\nconst TextFieldPlain = React.forwardRef(\n\t(\n\t\t{\n\t\t\tisDisabled = false,\n\t\t\tisMultiLine = false,\n\t\t\t...props\n\t\t}: TextFieldInputPlain | TextFieldTextareaPlain,\n\t\tref: React.Ref<HTMLTextAreaElement | HTMLInputElement>\n\t) => {\n\t\tconst className = cx(\n\t\t\t'&',\n\t\t\t{\n\t\t\t\t'&-is-disabled': isDisabled,\n\t\t\t\t'&-is-multi-line': isMultiLine,\n\t\t\t\t'&-is-single-line': !isMultiLine,\n\t\t\t},\n\t\t\tprops.className\n\t\t);\n\t\tif (isMultiLine) {\n\t\t\treturn (\n\t\t\t\t<textarea\n\t\t\t\t\tref={ref as React.Ref<HTMLTextAreaElement>}\n\t\t\t\t\t{...(props as TextFieldTextareaPlain)}\n\t\t\t\t\tclassName={className}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<input\n\t\t\t\t\tref={ref as React.Ref<HTMLInputElement>}\n\t\t\t\t\t{...(props as TextFieldInputPlain)}\n\t\t\t\t\tclassName={className}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n);\n// @ts-ignore\nTextFieldPlain.propTypes = {\n\tisDisabled: PropTypes.bool,\n\tisMultiLine: PropTypes.bool,\n\tclassName: PropTypes.string,\n};\nTextFieldPlain.displayName = 'TextFieldPlain';\nexport default TextFieldPlain;\n"]},"metadata":{},"sourceType":"module"}