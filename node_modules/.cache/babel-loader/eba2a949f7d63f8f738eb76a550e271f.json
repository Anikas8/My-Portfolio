{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport CloseIcon from '../Icon/CloseIcon/CloseIcon';\nimport { filterTypes, rejectTypes } from '../../util/component-types';\nconst cx = lucidClassNames.bind('&-Tag');\nconst {\n  bool,\n  func,\n  node,\n  string,\n  oneOf\n} = PropTypes;\n/** TODO: Remove the nonPassThroughs when the component is converted to a functional component */\nconst nonPassThroughs = ['callbackId', 'initialState'];\nconst defaultProps = {\n  isTop: false,\n  hasLightBackground: true,\n  isRemovable: false,\n  kind: 'default',\n  onRemove: _.noop\n};\nexport const Tag = props => {\n  const {\n    isTop,\n    hasLightBackground,\n    isRemovable,\n    kind,\n    onRemove,\n    children,\n    className,\n    ...passThroughs\n  } = props;\n  const handleRemove = _ref => {\n    let {\n      event\n    } = _ref;\n    onRemove({\n      props,\n      event\n    });\n  };\n  const subTags = filterTypes(children, Tag);\n  const otherChildren = rejectTypes(children, Tag);\n  const hasOtherChildren = !_.isEmpty(otherChildren);\n  const isLeaf = _.isEmpty(subTags);\n  return React.createElement(\"div\", {\n    ..._.omit(passThroughs, nonPassThroughs),\n    className: cx('&', {\n      '&-is-top': isTop,\n      '&-is-leaf': isLeaf,\n      '&-is-removable': isRemovable,\n      '&-has-light-background': hasLightBackground,\n      '&-default': kind === 'default',\n      '&-primary': kind === 'primary',\n      '&-success': kind === 'success',\n      '&-warning': kind === 'warning',\n      '&-danger': kind === 'danger',\n      '&-info': kind === 'info'\n    }, className)\n  }, hasOtherChildren && React.createElement(\"span\", {\n    className: cx('&-other-children')\n  }, otherChildren, isRemovable && React.createElement(CloseIcon, {\n    onClick: handleRemove,\n    className: cx('&-remove-button'),\n    size: 7,\n    isClickable: true\n  })), subTags);\n};\nTag.defaultProps = defaultProps;\nTag.displayName = 'Tag';\nTag.peek = {\n  description: `\\`Tag\\` is a visualization for selected settings.`,\n  notes: {\n    overview: `\n\t\t\t\t\tA visualization for items. Tags can be removable and can be nested into groups.\n\t\t\t\t\t`,\n    intendedUse: `\n\t\t\t\t\tTags are typically used to display filter selections. Tags can be interactive or display-only. They can also be grouped into a parent container.\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t**Styling notes**\n\t\t\t\t\t\n\t\t\t\t\t- The default style is not interactive, it does not have a \\`CloseIcon\\`.\n\t\t\t\t\t- Use \\`isRemovable='true'\\` for interactive tags.\n\t\t\t\t\t- Styling is optimized for 40 or fewer characters.\n\t\t\t\t\t`,\n    technicalRecommendations: `\n\t\t\t\t\tNone\n\t\t\t`\n  },\n  categories: ['communication']\n};\nTag.propTypes = {\n  /**\n      Set this prop if you're using three levels of tags so it can be styled\n      appropriately. This is required because we aren't able to know if your\n      Tags have grand children efficiently.\n  */\n  isTop: bool,\n  /**\n      Use the light background when your tags are on a white page background.\n      Use a dark background when your tags need to be placed on a darker\n      background (e.g. in a page header).\n  */\n  hasLightBackground: bool,\n  /**\n      Shows or hides the little \"x\" for a given tag.\n  */\n  isRemovable: bool,\n  /**\n      Style variations of the \\`Tag\\`.\n  */\n  kind: oneOf(['primary', 'success', 'warning', 'danger', 'info', 'default']),\n  /**\n      Called when the user clicks to remove a tag.  Signature:\n      \\`({props, event}) => {}\\`\n  */\n  onRemove: func,\n  /**\n      Can contain elements or nested \\`Tag\\` components.\n  */\n  children: node,\n  /**\n      Appended to the component-specific class names set on the root element.\n  */\n  className: string\n};\nexport default Tag;","map":{"version":3,"mappings":"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","names":["React","PropTypes","_","lucidClassNames","CloseIcon","filterTypes","rejectTypes","cx","bind","bool","func","node","string","oneOf","nonPassThroughs","defaultProps","isTop","hasLightBackground","isRemovable","kind","onRemove","noop","Tag","props","children","className","passThroughs","handleRemove","event","subTags","otherChildren","hasOtherChildren","isEmpty","isLeaf","omit","onClick","size","isClickable","displayName","peek","description","notes","overview","intendedUse","technicalRecommendations","categories","propTypes"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/Tag/Tag.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport CloseIcon from '../Icon/CloseIcon/CloseIcon';\nimport {\n\tStandardProps,\n\tfilterTypes,\n\trejectTypes,\n} from '../../util/component-types';\n\nconst cx = lucidClassNames.bind('&-Tag');\n\nconst { bool, func, node, string, oneOf } = PropTypes;\n\nexport interface ITagProps\n\textends StandardProps,\n\t\tReact.DetailedHTMLProps<\n\t\t\tReact.HTMLAttributes<HTMLDivElement>,\n\t\t\tHTMLDivElement\n\t\t> {\n\t/** Set this prop if you're using three levels of tags so it can be styled\n\t\tappropriately. This is required because we aren't able to know if your\n\t\tTags have grand children efficiently. */\n\tisTop: boolean;\n\n\t/** Use the light background when your tags are on a white page background.\n\t\tUse a dark background when your tags need to be placed on a darker\n\t\tbackground (e.g. in a page header). */\n\thasLightBackground: boolean;\n\n\t/** Shows or hides the little \"x\" for a given tag. */\n\tisRemovable: boolean;\n\n\t/** Style variations of the `Tag`. */\n\tkind?: 'primary' | 'success' | 'warning' | 'danger' | 'info' | 'default';\n\n\t/** Called when the user clicks to remove a tag. */\n\tonRemove: ({\n\t\tprops,\n\t\tevent,\n\t}: {\n\t\tprops: ITagProps;\n\t\tevent: React.MouseEvent;\n\t}) => void;\n}\n\n/** TODO: Remove the nonPassThroughs when the component is converted to a functional component */\nconst nonPassThroughs = ['callbackId', 'initialState'];\n\nconst defaultProps = {\n\tisTop: false,\n\thasLightBackground: true,\n\tisRemovable: false,\n\tkind: 'default' as const,\n\tonRemove: _.noop,\n};\n\nexport const Tag = (props: ITagProps): React.ReactElement => {\n\tconst {\n\t\tisTop,\n\t\thasLightBackground,\n\t\tisRemovable,\n\t\tkind,\n\t\tonRemove,\n\t\tchildren,\n\t\tclassName,\n\t\t...passThroughs\n\t} = props;\n\n\tconst handleRemove = ({ event }: { event: React.MouseEvent }): void => {\n\t\tonRemove({ props, event });\n\t};\n\n\tconst subTags = filterTypes(children, Tag);\n\tconst otherChildren = rejectTypes(children, Tag);\n\tconst hasOtherChildren = !_.isEmpty(otherChildren);\n\tconst isLeaf = _.isEmpty(subTags);\n\n\treturn (\n\t\t<div\n\t\t\t{..._.omit(passThroughs, nonPassThroughs)}\n\t\t\tclassName={cx(\n\t\t\t\t'&',\n\t\t\t\t{\n\t\t\t\t\t'&-is-top': isTop,\n\t\t\t\t\t'&-is-leaf': isLeaf,\n\t\t\t\t\t'&-is-removable': isRemovable,\n\t\t\t\t\t'&-has-light-background': hasLightBackground,\n\t\t\t\t\t'&-default': kind === 'default',\n\t\t\t\t\t'&-primary': kind === 'primary',\n\t\t\t\t\t'&-success': kind === 'success',\n\t\t\t\t\t'&-warning': kind === 'warning',\n\t\t\t\t\t'&-danger': kind === 'danger',\n\t\t\t\t\t'&-info': kind === 'info',\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t{hasOtherChildren && (\n\t\t\t\t<span className={cx('&-other-children')}>\n\t\t\t\t\t{otherChildren}\n\t\t\t\t\t{isRemovable && (\n\t\t\t\t\t\t<CloseIcon\n\t\t\t\t\t\t\tonClick={handleRemove}\n\t\t\t\t\t\t\tclassName={cx('&-remove-button')}\n\t\t\t\t\t\t\tsize={7}\n\t\t\t\t\t\t\tisClickable\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</span>\n\t\t\t)}\n\t\t\t{subTags}\n\t\t</div>\n\t);\n};\n\nTag.defaultProps = defaultProps;\nTag.displayName = 'Tag';\n\nTag.peek = {\n\tdescription: `\\`Tag\\` is a visualization for selected settings.`,\n\tnotes: {\n\t\toverview: `\n\t\t\t\t\tA visualization for items. Tags can be removable and can be nested into groups.\n\t\t\t\t\t`,\n\t\tintendedUse: `\n\t\t\t\t\tTags are typically used to display filter selections. Tags can be interactive or display-only. They can also be grouped into a parent container.\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t**Styling notes**\n\t\t\t\t\t\n\t\t\t\t\t- The default style is not interactive, it does not have a \\`CloseIcon\\`.\n\t\t\t\t\t- Use \\`isRemovable='true'\\` for interactive tags.\n\t\t\t\t\t- Styling is optimized for 40 or fewer characters.\n\t\t\t\t\t`,\n\t\ttechnicalRecommendations: `\n\t\t\t\t\tNone\n\t\t\t`,\n\t},\n\tcategories: ['communication'],\n};\n\nTag.propTypes = {\n\t/**\n\t\tSet this prop if you're using three levels of tags so it can be styled\n\t\tappropriately. This is required because we aren't able to know if your\n\t\tTags have grand children efficiently.\n\t*/\n\tisTop: bool,\n\n\t/**\n\t\tUse the light background when your tags are on a white page background.\n\t\tUse a dark background when your tags need to be placed on a darker\n\t\tbackground (e.g. in a page header).\n\t*/\n\thasLightBackground: bool,\n\n\t/**\n\t\tShows or hides the little \"x\" for a given tag.\n\t*/\n\tisRemovable: bool,\n\n\t/**\n\t\tStyle variations of the \\`Tag\\`.\n\t*/\n\tkind: oneOf(['primary', 'success', 'warning', 'danger', 'info', 'default']),\n\n\t/**\n\t\tCalled when the user clicks to remove a tag.  Signature:\n\t\t\\`({props, event}) => {}\\`\n\t*/\n\tonRemove: func,\n\n\t/**\n\t\tCan contain elements or nested \\`Tag\\` components.\n\t*/\n\tchildren: node,\n\n\t/**\n\t\tAppended to the component-specific class names set on the root element.\n\t*/\n\tclassName: string,\n};\n\nexport default Tag;\n"]},"metadata":{},"sourceType":"module"}