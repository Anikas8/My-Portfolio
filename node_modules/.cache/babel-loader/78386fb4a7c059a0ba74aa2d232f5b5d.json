{"ast":null,"code":"import _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { filterTypes, findTypes } from '../../util/component-types';\nimport { buildModernHybridComponent } from '../../util/state-management';\nimport * as reducers from './Submarine.reducers';\nimport SplitHorizontal from '../SplitHorizontal/SplitHorizontal';\nimport ChevronIcon from '../Icon/ChevronIcon/ChevronIcon';\nimport GripperHorizontalIcon from '../Icon/GripperHorizontalIcon/GripperHorizontalIcon';\nimport Button from '../Button/Button';\nconst cx = lucidClassNames.bind('&-Submarine');\nconst {\n  any,\n  bool,\n  func,\n  node,\n  number,\n  string,\n  oneOf,\n  oneOfType\n} = PropTypes;\nconst Primary = _props => null;\nPrimary.peek = {\n  description: `Primary content rendered beside the Submarine.`\n};\nPrimary.displayName = 'SplitHorizontal.Primary';\nPrimary.propName = 'Primary';\nconst Title = _props => null;\nTitle.peek = {\n  description: `Submarine title.`\n};\nTitle.displayName = 'Submarine.Title';\nTitle.propName = 'Title';\nconst Bar = _props => null;\nBar.peek = {\n  description: `Submarine bar.`\n};\nBar.displayName = 'Submarine.Bar';\nBar.propName = 'Bar';\nBar.propTypes = {\n  /**\n      Set the title of the Submarine. (alias for \\`Submarine.Title\\`)\n  */\n  Title: any\n};\n/** Submarine */\nconst defaultProps = {\n  isExpanded: true,\n  isAnimated: true,\n  height: 250,\n  position: 'bottom',\n  isResizeDisabled: false,\n  isHidden: false,\n  isTitleShownCollapsed: false,\n  onResizing: _.noop,\n  onResize: _.noop,\n  onToggle: _.noop\n};\nclass Submarine extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.handleExpanderClick = _ref => {\n      let {\n        event\n      } = _ref;\n      const {\n        onToggle\n      } = this.props;\n      onToggle({\n        props: this.props,\n        event\n      });\n    };\n    this.handleResizing = (height, _ref2) => {\n      let {\n        event\n      } = _ref2;\n      const {\n        onResizing\n      } = this.props;\n      onResizing(height, {\n        props: this.props,\n        event\n      });\n    };\n    this.handleResize = (height, _ref3) => {\n      let {\n        event\n      } = _ref3;\n      const {\n        onResize\n      } = this.props;\n      onResize(height, {\n        props: this.props,\n        event\n      });\n    };\n  }\n  render() {\n    const {\n      children,\n      className,\n      isExpanded,\n      isAnimated,\n      position,\n      isResizeDisabled,\n      height,\n      isHidden,\n      isTitleShownCollapsed,\n      ...passThroughs\n    } = this.props;\n    const primaryProps = _.get(_.first(filterTypes(children, Submarine.Primary)), 'props', {}); // props from first Primary\n    const barProps = _.get(_.first(filterTypes(children, Submarine.Bar)), 'props', {}); // props from first Bar\n    const titleProps = _.get(findTypes(barProps, Submarine.Title).concat(findTypes(this.props, Submarine.Title)),\n    // get titles from Bar and parent Submarine\n    '[0].props',\n    // select props from the first title element\n    React.createElement(Submarine.Title).props // default props\n    );\n\n    let PrimaryPane, BarPane; // using Left/Right Pane as primary depends on position\n    if (position !== 'bottom') {\n      PrimaryPane = SplitHorizontal.BottomPane;\n      BarPane = SplitHorizontal.TopPane;\n    } else {\n      PrimaryPane = SplitHorizontal.TopPane;\n      BarPane = SplitHorizontal.BottomPane;\n    }\n    // leave 33px of sidebar to stick out when collapsed, or 0px if hidden\n    const collapseShift = isHidden ? 0 : 33;\n    return React.createElement(SplitHorizontal, {\n      ...omit(passThroughs, ['className', 'children', 'height', 'isExpanded', 'isHidden', 'isTitleShownCollapsed', 'isAnimated', 'position', 'isResizeDisabled', 'Title', 'Bar', 'Primary', 'onResizing', 'onResize', 'onToggle'].concat('initialState')),\n      className: cx('&', {\n        '&-is-resize-disabled': isResizeDisabled,\n        '&-is-position-bottom': position === 'bottom',\n        '&-is-position-top': position !== 'bottom'\n      }, className),\n      isAnimated: isAnimated,\n      isExpanded: isExpanded && !isHidden,\n      collapseShift: collapseShift,\n      onResizing: this.handleResizing,\n      onResize: this.handleResize\n    }, React.createElement(BarPane, {\n      ...omit(barProps, ['Title'].concat('initialState')),\n      className: cx('&-Bar', barProps.className),\n      height: height\n    }, React.createElement(\"div\", {\n      className: cx('&-Bar-overlay')\n    }), React.createElement(\"div\", {\n      className: cx('&-Bar-header')\n    }, React.createElement(\"div\", {\n      ...titleProps,\n      className: cx('&-Bar-Title', {\n        '&-Bar-Title-is-shown-collapsed': isTitleShownCollapsed\n      }, titleProps.className)\n    }), React.createElement(Button, {\n      className: cx('&-expander'),\n      kind: 'invisible',\n      onClick: this.handleExpanderClick,\n      hasOnlyIcon: true\n    }, React.createElement(ChevronIcon, {\n      direction: isExpanded && position === 'bottom' || !isExpanded && position !== 'bottom' ? 'down' : 'up'\n    }))), React.createElement(\"div\", {\n      className: cx('&-Bar-content')\n    }, barProps.children)), React.createElement(SplitHorizontal.Divider, {\n      className: cx('&-Divider')\n    }, React.createElement(GripperHorizontalIcon, {\n      className: cx('&-Divider-gripper')\n    })), React.createElement(PrimaryPane, {\n      ...primaryProps,\n      className: cx('&-Primary', primaryProps.className),\n      isPrimary: true\n    }));\n  }\n}\nSubmarine.displayName = 'Submarine';\nSubmarine.Bar = Bar;\nSubmarine.Title = Title;\nSubmarine.Primary = Primary;\nSubmarine.peek = {\n  description: `\\`Submarine\\` renders a collapsible, resizeable side bar panel next to primary content.`,\n  categories: ['layout'],\n  madeFrom: ['SplitHorizontal', 'ChevronIcon', 'GripperHorizontalIcon']\n};\nSubmarine.reducers = reducers;\nSubmarine.propTypes = {\n  /**\n      Appended to the component-specific class names set on the root element.\n      Value is run through the \\`classnames\\` library.\n  */\n  className: string,\n  /**\n      Direct children must be types {Submarine.Primary, Submarine.Bar,\n      Submarine.Title}.  All content is composed as children of these\n      respective elements.\n  */\n  children: node,\n  /**\n      Sets the starting height of the Bar.\n  */\n  height: oneOfType([number, string]),\n  /**\n      Force the Submarine to be expanded or collapsed.\n  */\n  isExpanded: bool,\n  /**\n      Indicates if the Submarine should be shown or not.  This will override\n      the value of isExpanded.\n  */\n  isHidden: bool,\n  /**\n      Indicates if the Title should be shown when the Submarine is collapsed\n  */\n  isTitleShownCollapsed: bool,\n  /**\n      Allows animated expand and collapse behavior.\n  */\n  isAnimated: bool,\n  /**\n      Render the Submarine to the top or bottom of primary content.\n  */\n  position: oneOf(['top', 'bottom']),\n  /**\n      Disable user resizing of the Submarine.\n  */\n  isResizeDisabled: bool,\n  /**\n      Set the title of the Submarine.\n  */\n  Title: any,\n  /**\n      Set the Submarine Bar content.\n  */\n  Bar: any,\n  /**\n      Set the primary content of the Submarine.\n  */\n  Primary: any,\n  /**\n      Called when the user is currently resizing the Submarine.  Signature:\n      \\`(height, { event, props }) => {}\\`\n  */\n  onResizing: func,\n  /**\n      Called when the user resizes the Submarine.  Signature:\n      \\`(height, { event, props }) => {}\\`\n  */\n  onResize: func,\n  /**\n      Called when the user expands or collapses the Submarine.  Signature:\n      \\`({ event, props }) => {}\\`\n  */\n  onToggle: func\n};\nSubmarine.defaultProps = defaultProps;\nexport default buildModernHybridComponent(Submarine, {\n  reducers\n});\nexport { Submarine as SubmarineDumb };","map":{"version":3,"mappings":"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","names":["_","omit","React","PropTypes","lucidClassNames","filterTypes","findTypes","buildModernHybridComponent","reducers","SplitHorizontal","ChevronIcon","GripperHorizontalIcon","Button","cx","bind","any","bool","func","node","number","string","oneOf","oneOfType","Primary","_props","peek","description","displayName","propName","Title","Bar","propTypes","defaultProps","isExpanded","isAnimated","height","position","isResizeDisabled","isHidden","isTitleShownCollapsed","onResizing","noop","onResize","onToggle","Submarine","Component","constructor","event","props","render","children","className","passThroughs","primaryProps","get","first","barProps","titleProps","concat","createElement","PrimaryPane","BarPane","BottomPane","TopPane","collapseShift","handleResizing","handleResize","kind","onClick","handleExpanderClick","hasOnlyIcon","direction","Divider","isPrimary","categories","madeFrom","SubmarineDumb"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/Submarine/Submarine.tsx"],"sourcesContent":["import _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport {\n\tfilterTypes,\n\tfindTypes,\n\tStandardProps,\n} from '../../util/component-types';\nimport { buildModernHybridComponent } from '../../util/state-management';\nimport * as reducers from './Submarine.reducers';\nimport SplitHorizontal from '../SplitHorizontal/SplitHorizontal';\nimport ChevronIcon from '../Icon/ChevronIcon/ChevronIcon';\nimport GripperHorizontalIcon from '../Icon/GripperHorizontalIcon/GripperHorizontalIcon';\nimport Button from '../Button/Button';\n\nexport interface ISubmarineState {\n\tisExpanded: boolean;\n\theight: number;\n}\n\nconst cx = lucidClassNames.bind('&-Submarine');\n\nconst { any, bool, func, node, number, string, oneOf, oneOfType } = PropTypes;\n\n/** Primary */\nexport interface ISubmarinePrimaryProps extends StandardProps {}\n\nconst Primary = (_props: ISubmarinePrimaryProps): null => null;\nPrimary.peek = {\n\tdescription: `Primary content rendered beside the Submarine.`,\n};\nPrimary.displayName = 'SplitHorizontal.Primary';\nPrimary.propName = 'Primary';\n\n/** Title */\nexport interface ISumbarineTitleProps extends StandardProps {}\n\nconst Title = (_props: ISumbarineTitleProps): null => null;\nTitle.peek = {\n\tdescription: `Submarine title.`,\n};\nTitle.displayName = 'Submarine.Title';\nTitle.propName = 'Title';\n\n/** Bar */\nexport interface ISubmarineBarProps extends StandardProps {\n\tTitle?: ISumbarineTitleProps | string;\n}\nconst Bar = (_props: ISubmarineBarProps): null => null;\nBar.peek = {\n\tdescription: `Submarine bar.`,\n};\nBar.displayName = 'Submarine.Bar';\nBar.propName = 'Bar';\nBar.propTypes = {\n\t/**\n\t\tSet the title of the Submarine. (alias for \\`Submarine.Title\\`)\n\t*/\n\tTitle: any,\n};\n\n/** Submarine */\nconst defaultProps = {\n\tisExpanded: true,\n\tisAnimated: true,\n\theight: 250,\n\tposition: 'bottom' as const,\n\tisResizeDisabled: false,\n\tisHidden: false,\n\tisTitleShownCollapsed: false,\n\tonResizing: _.noop,\n\tonResize: _.noop,\n\tonToggle: _.noop,\n};\n\nexport interface ISubmarineProps extends StandardProps {\n\t/** Sets the starting height of the Bar. */\n\theight: number;\n\n\t/** Force the Submarine to be expanded or collapsed. */\n\tisExpanded: boolean;\n\n\t/** Indicates if the Submarine should be shown or not.  This will override\n\t\t\tthe value of isExpanded. */\n\tisHidden: boolean;\n\n\t/** Indicates if the Title should be shown when the Submarine is collapsed */\n\tisTitleShownCollapsed: boolean;\n\n\t/** Allows animated expand and collapse behavior. */\n\tisAnimated: boolean;\n\n\t/** Render the Submarine to the top or bottom of primary content. */\n\tposition: 'top' | 'bottom';\n\n\t/** Disable user resizing of the Submarine. */\n\tisResizeDisabled: boolean;\n\n\t/** Set the title of the Submarine. */\n\tTitle?: React.ReactNode;\n\n\t/** Set the title of the Submarine. */\n\tPrimary?: React.ReactNode;\n\n\t/** Set the content and title of the Submarine Bar. */\n\tBar?: React.ReactNode;\n\n\t/** Called when the user is currently resizing the Submarine. */\n\tonResizing: (\n\t\theight: number,\n\t\t{ event, props }: { event: MouseEvent | TouchEvent; props: ISubmarineProps }\n\t) => void;\n\n\t/** Called when the user resizes the Submarine. */\n\tonResize: (\n\t\theight: number,\n\t\t{ event, props }: { event: MouseEvent | TouchEvent; props: ISubmarineProps }\n\t) => void;\n\n\t/** Called when the user expands or collapses the Submarine. */\n\tonToggle: ({\n\t\tevent,\n\t\tprops,\n\t}: {\n\t\tevent: React.MouseEvent<HTMLButtonElement>;\n\t\tprops: ISubmarineProps;\n\t}) => void;\n\n\tinitialState?: Object;\n}\n\nclass Submarine extends React.Component<ISubmarineProps, ISubmarineState> {\n\tstatic displayName = 'Submarine';\n\n\tstatic Bar = Bar;\n\tstatic Title = Title;\n\tstatic Primary = Primary;\n\n\tstatic peek = {\n\t\tdescription: `\\`Submarine\\` renders a collapsible, resizeable side bar panel next to primary content.`,\n\t\tcategories: ['layout'],\n\t\tmadeFrom: ['SplitHorizontal', 'ChevronIcon', 'GripperHorizontalIcon'],\n\t};\n\n\tstatic reducers = reducers;\n\n\tstatic propTypes = {\n\t\t/**\n\t\t\tAppended to the component-specific class names set on the root element.\n\t\t\tValue is run through the \\`classnames\\` library.\n\t\t*/\n\t\tclassName: string,\n\n\t\t/**\n\t\t\tDirect children must be types {Submarine.Primary, Submarine.Bar,\n\t\t\tSubmarine.Title}.  All content is composed as children of these\n\t\t\trespective elements.\n\t\t*/\n\t\tchildren: node,\n\n\t\t/**\n\t\t\tSets the starting height of the Bar.\n\t\t*/\n\t\theight: oneOfType([number, string]),\n\n\t\t/**\n\t\t\tForce the Submarine to be expanded or collapsed.\n\t\t*/\n\t\tisExpanded: bool,\n\n\t\t/**\n\t\t\tIndicates if the Submarine should be shown or not.  This will override\n\t\t\tthe value of isExpanded.\n\t\t*/\n\t\tisHidden: bool,\n\n\t\t/**\n\t\t\tIndicates if the Title should be shown when the Submarine is collapsed\n\t\t*/\n\t\tisTitleShownCollapsed: bool,\n\n\t\t/**\n\t\t\tAllows animated expand and collapse behavior.\n\t\t*/\n\t\tisAnimated: bool,\n\n\t\t/**\n\t\t\tRender the Submarine to the top or bottom of primary content.\n\t\t*/\n\t\tposition: oneOf(['top', 'bottom']),\n\n\t\t/**\n\t\t\tDisable user resizing of the Submarine.\n\t\t*/\n\t\tisResizeDisabled: bool,\n\n\t\t/**\n\t\t\tSet the title of the Submarine.\n\t\t*/\n\t\tTitle: any,\n\n\t\t/**\n\t\t\tSet the Submarine Bar content.\n\t\t*/\n\t\tBar: any,\n\n\t\t/**\n\t\t\tSet the primary content of the Submarine.\n\t\t*/\n\t\tPrimary: any,\n\n\t\t/**\n\t\t\tCalled when the user is currently resizing the Submarine.  Signature:\n\t\t\t\\`(height, { event, props }) => {}\\`\n\t\t*/\n\t\tonResizing: func,\n\n\t\t/**\n\t\t\tCalled when the user resizes the Submarine.  Signature:\n\t\t\t\\`(height, { event, props }) => {}\\`\n\t\t*/\n\t\tonResize: func,\n\n\t\t/**\n\t\t\tCalled when the user expands or collapses the Submarine.  Signature:\n\t\t\t\\`({ event, props }) => {}\\`\n\t\t*/\n\t\tonToggle: func,\n\t};\n\n\tstatic defaultProps = defaultProps;\n\n\thandleExpanderClick = ({\n\t\tevent,\n\t}: {\n\t\tevent: React.MouseEvent<HTMLButtonElement>;\n\t}) => {\n\t\tconst { onToggle } = this.props;\n\n\t\tonToggle({ props: this.props, event });\n\t};\n\n\thandleResizing = (\n\t\theight: number,\n\t\t{ event }: { event: MouseEvent | TouchEvent }\n\t) => {\n\t\tconst { onResizing } = this.props;\n\n\t\tonResizing(height, { props: this.props, event });\n\t};\n\n\thandleResize = (\n\t\theight: number,\n\t\t{ event }: { event: MouseEvent | TouchEvent }\n\t) => {\n\t\tconst { onResize } = this.props;\n\n\t\tonResize(height, { props: this.props, event });\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tclassName,\n\t\t\tisExpanded,\n\t\t\tisAnimated,\n\t\t\tposition,\n\t\t\tisResizeDisabled,\n\t\t\theight,\n\t\t\tisHidden,\n\t\t\tisTitleShownCollapsed,\n\t\t\t...passThroughs\n\t\t} = this.props;\n\n\t\tconst primaryProps = _.get(\n\t\t\t_.first(filterTypes(children, Submarine.Primary)),\n\t\t\t'props',\n\t\t\t{}\n\t\t); // props from first Primary\n\n\t\tconst barProps = _.get(\n\t\t\t_.first(filterTypes(children, Submarine.Bar)),\n\t\t\t'props',\n\t\t\t{}\n\t\t); // props from first Bar\n\n\t\tconst titleProps = _.get(\n\t\t\tfindTypes(barProps, Submarine.Title).concat(\n\t\t\t\tfindTypes(this.props, Submarine.Title)\n\t\t\t), // get titles from Bar and parent Submarine\n\t\t\t'[0].props', // select props from the first title element\n\t\t\tReact.createElement(Submarine.Title).props // default props\n\t\t);\n\n\t\tlet PrimaryPane, BarPane; // using Left/Right Pane as primary depends on position\n\t\tif (position !== 'bottom') {\n\t\t\tPrimaryPane = SplitHorizontal.BottomPane;\n\t\t\tBarPane = SplitHorizontal.TopPane;\n\t\t} else {\n\t\t\tPrimaryPane = SplitHorizontal.TopPane;\n\t\t\tBarPane = SplitHorizontal.BottomPane;\n\t\t}\n\n\t\t// leave 33px of sidebar to stick out when collapsed, or 0px if hidden\n\t\tconst collapseShift = isHidden ? 0 : 33;\n\n\t\treturn (\n\t\t\t<SplitHorizontal\n\t\t\t\t{...omit(\n\t\t\t\t\tpassThroughs,\n\t\t\t\t\t[\n\t\t\t\t\t\t'className',\n\t\t\t\t\t\t'children',\n\t\t\t\t\t\t'height',\n\t\t\t\t\t\t'isExpanded',\n\t\t\t\t\t\t'isHidden',\n\t\t\t\t\t\t'isTitleShownCollapsed',\n\t\t\t\t\t\t'isAnimated',\n\t\t\t\t\t\t'position',\n\t\t\t\t\t\t'isResizeDisabled',\n\t\t\t\t\t\t'Title',\n\t\t\t\t\t\t'Bar',\n\t\t\t\t\t\t'Primary',\n\t\t\t\t\t\t'onResizing',\n\t\t\t\t\t\t'onResize',\n\t\t\t\t\t\t'onToggle',\n\t\t\t\t\t].concat('initialState')\n\t\t\t\t)}\n\t\t\t\tclassName={cx(\n\t\t\t\t\t'&',\n\t\t\t\t\t{\n\t\t\t\t\t\t'&-is-resize-disabled': isResizeDisabled,\n\t\t\t\t\t\t'&-is-position-bottom': position === 'bottom',\n\t\t\t\t\t\t'&-is-position-top': position !== 'bottom',\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tisAnimated={isAnimated}\n\t\t\t\tisExpanded={isExpanded && !isHidden}\n\t\t\t\tcollapseShift={collapseShift}\n\t\t\t\tonResizing={this.handleResizing}\n\t\t\t\tonResize={this.handleResize}\n\t\t\t>\n\t\t\t\t<BarPane\n\t\t\t\t\t{...omit(barProps, ['Title'].concat('initialState'))}\n\t\t\t\t\tclassName={cx('&-Bar', barProps.className)}\n\t\t\t\t\theight={height}\n\t\t\t\t>\n\t\t\t\t\t<div className={cx('&-Bar-overlay')} />\n\t\t\t\t\t<div className={cx('&-Bar-header')}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t{...titleProps}\n\t\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\t\t'&-Bar-Title',\n\t\t\t\t\t\t\t\t{ '&-Bar-Title-is-shown-collapsed': isTitleShownCollapsed },\n\t\t\t\t\t\t\t\ttitleProps.className\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={cx('&-expander')}\n\t\t\t\t\t\t\tkind='invisible'\n\t\t\t\t\t\t\tonClick={this.handleExpanderClick}\n\t\t\t\t\t\t\thasOnlyIcon={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ChevronIcon\n\t\t\t\t\t\t\t\tdirection={\n\t\t\t\t\t\t\t\t\t(isExpanded && position === 'bottom') ||\n\t\t\t\t\t\t\t\t\t(!isExpanded && position !== 'bottom')\n\t\t\t\t\t\t\t\t\t\t? 'down'\n\t\t\t\t\t\t\t\t\t\t: 'up'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={cx('&-Bar-content')}>{barProps.children}</div>\n\t\t\t\t</BarPane>\n\t\t\t\t<SplitHorizontal.Divider className={cx('&-Divider')}>\n\t\t\t\t\t<GripperHorizontalIcon className={cx('&-Divider-gripper')} />\n\t\t\t\t</SplitHorizontal.Divider>\n\t\t\t\t<PrimaryPane\n\t\t\t\t\t{...primaryProps}\n\t\t\t\t\tclassName={cx('&-Primary', primaryProps.className)}\n\t\t\t\t\tisPrimary\n\t\t\t\t/>\n\t\t\t</SplitHorizontal>\n\t\t);\n\t}\n}\n\nexport default buildModernHybridComponent<\n\tISubmarineProps,\n\tISubmarineState,\n\ttypeof Submarine\n>(Submarine as any, { reducers });\nexport { Submarine as SubmarineDumb };\n"]},"metadata":{},"sourceType":"module"}