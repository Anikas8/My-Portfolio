{"ast":null,"code":"/* eslint-disable react/prop-types */\nimport _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { getFirst } from '../../util/component-types';\nimport LoadingIcon from '../Icon/LoadingIcon/LoadingIcon';\nconst cx = lucidClassNames.bind('&-LoadingMessage');\nconst {\n  any,\n  node,\n  string\n} = PropTypes;\nconst LoadingMessageIcon = _props => null;\nLoadingMessageIcon.displayName = 'LoadingMessage.Icon';\nLoadingMessageIcon.peek = {\n  description: `Renders the \\`Icon\\` element passed in.`\n};\nLoadingMessageIcon.propName = 'Icon';\nLoadingMessageIcon.propTypes = {\n  description: string,\n  children: any\n};\nconst LoadingMessageTitle = _props => null;\nLoadingMessageTitle.displayName = 'LoadingMessage.Title';\nLoadingMessageTitle.peek = {\n  description: `Renders an \\`<h3>\\` that represents the title of the \\`LoadingMessage\\`.  Defaults to the string \"Loading\".`\n};\nLoadingMessageTitle.propName = 'Title';\nLoadingMessageTitle.propTypes = {\n  description: string,\n  children: any\n};\nconst LoadingMessageBody = _props => null;\nLoadingMessageBody.displayName = 'LoadingMessage.Body';\nLoadingMessageBody.peek = {\n  description: `Renders a \\`<span>\\` that represents the body of the \\`LoadingMessage\\`.`\n};\nLoadingMessageBody.propName = 'Body';\nLoadingMessageBody.propTypes = {\n  description: string,\n  children: any\n};\nexport const LoadingMessage = props => {\n  const {\n    className,\n    ...passThroughs\n  } = props;\n  const {\n    Icon,\n    Title,\n    Body\n  } = LoadingMessage;\n  const defaultTitle = 'Loading';\n  const iconElement = getFirst(props, Icon);\n  const iconChildren = _.get(iconElement, 'props.children', React.createElement(LoadingIcon, null));\n  const titleElement = getFirst(props, Title);\n  const titleChildren = _.get(titleElement, 'props.children');\n  const bodyElement = getFirst(props, Body);\n  const bodyChildren = _.get(bodyElement, 'props.children', null);\n  return React.createElement(\"div\", {\n    ...omit(passThroughs, ['className', 'children', 'Icon', 'Title', 'Body', 'initialState', 'callbackId']),\n    className: cx('&', {\n      '&-no-content': _.isNull(titleChildren) && !bodyChildren\n    }, className)\n  }, iconChildren, !_.isNull(titleChildren) && React.createElement(\"h3\", {\n    className: cx('&-title')\n  }, titleChildren || defaultTitle), bodyChildren && React.createElement(\"span\", {\n    className: cx('&-body')\n  }, bodyChildren));\n};\nLoadingMessage.Icon = LoadingMessageIcon;\nLoadingMessage.Title = LoadingMessageTitle;\nLoadingMessage.Body = LoadingMessageBody;\nLoadingMessage._isPrivate = true;\nLoadingMessage.displayName = 'LoadingMessage';\nLoadingMessage.peek = {\n  description: `A loading message.`,\n  categories: ['communication'],\n  madeFrom: ['LoadingIcon']\n};\nLoadingMessage.propTypes = {\n  /**\n      Class names that are appended to the defaults.\n  */\n  className: string,\n  /**\n      Any valid React children.\n  */\n  children: node,\n  /**\n      Custom Icon element (alias for \\`LoadingMessage.Icon\\`)\n  */\n  Icon: node,\n  /**\n      Custom Title element (alias for \\`LoadingMessage.Title\\`)\n  */\n  Title: node,\n  /**\n      Custom Body element (alias for \\`LoadingMessage.Body\\`)\n  */\n  Body: node\n};\nexport default LoadingMessage;","map":{"version":3,"mappings":"AAAA;AACA,OAAOA,CAAC,IAAIC,IAAI,QAAQ,QAAQ;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,QAAQ,QAAuB,4BAA4B;AACpE,OAAOC,WAAW,MAAM,iCAAiC;AAEzD,MAAMC,EAAE,GAAGH,eAAe,CAACI,IAAI,CAAC,kBAAkB,CAAC;AAEnD,MAAM;EAAEC,GAAG;EAAEC,IAAI;EAAEC;AAAM,CAAE,GAAGR,SAAS;AAMvC,MAAMS,kBAAkB,GAAIC,MAAgC,IAAW,IAAI;AAC3ED,kBAAkB,CAACE,WAAW,GAAG,qBAAqB;AACtDF,kBAAkB,CAACG,IAAI,GAAG;EACzBC,WAAW,EAAE;CACb;AACDJ,kBAAkB,CAACK,QAAQ,GAAG,MAAM;AACpCL,kBAAkB,CAACM,SAAS,GAAG;EAC9BF,WAAW,EAAEL,MAAM;EACnBQ,QAAQ,EAAEV;CACV;AAMD,MAAMW,mBAAmB,GAAIP,MAAiC,IAAW,IAAI;AAC7EO,mBAAmB,CAACN,WAAW,GAAG,sBAAsB;AACxDM,mBAAmB,CAACL,IAAI,GAAG;EAC1BC,WAAW,EAAE;CACb;AACDI,mBAAmB,CAACH,QAAQ,GAAG,OAAO;AACtCG,mBAAmB,CAACF,SAAS,GAAG;EAC/BF,WAAW,EAAEL,MAAM;EACnBQ,QAAQ,EAAEV;CACV;AAMD,MAAMY,kBAAkB,GAAIR,MAAgC,IAAW,IAAI;AAC3EQ,kBAAkB,CAACP,WAAW,GAAG,qBAAqB;AACtDO,kBAAkB,CAACN,IAAI,GAAG;EACzBC,WAAW,EAAE;CACb;AACDK,kBAAkB,CAACJ,QAAQ,GAAG,MAAM;AACpCI,kBAAkB,CAACH,SAAS,GAAG;EAC9BF,WAAW,EAAEL,MAAM;EACnBQ,QAAQ,EAAEV;CACV;AAmBD,OAAO,MAAMa,cAAc,GAC1BC,KAA2B,IACJ;EACvB,MAAM;IAAEC,SAAS;IAAE,GAAGC;EAAY,CAAE,GAAGF,KAAK;EAC5C,MAAM;IAAEG,IAAI;IAAEC,KAAK;IAAEC;EAAI,CAAE,GAAGN,cAAc;EAE5C,MAAMO,YAAY,GAAG,SAAS;EAC9B,MAAMC,WAAW,GAAGzB,QAAQ,CAACkB,KAAK,EAAEG,IAAI,CAAC;EACzC,MAAMK,YAAY,GAAG/B,CAAC,CAACgC,GAAG,CAACF,WAAW,EAAE,gBAAgB,EAAE5B,oBAACI,WAAW,OAAG,CAAC;EAC1E,MAAM2B,YAAY,GAAG5B,QAAQ,CAACkB,KAAK,EAAEI,KAAK,CAAC;EAC3C,MAAMO,aAAa,GAAGlC,CAAC,CAACgC,GAAG,CAACC,YAAY,EAAE,gBAAgB,CAAC;EAC3D,MAAME,WAAW,GAAG9B,QAAQ,CAACkB,KAAK,EAAEK,IAAI,CAAC;EACzC,MAAMQ,YAAY,GAAGpC,CAAC,CAACgC,GAAG,CAACG,WAAW,EAAE,gBAAgB,EAAE,IAAI,CAAC;EAE/D,OACCjC;IAAA,GACKD,IAAI,CAACwB,YAAY,EAAE,CACtB,WAAW,EACX,UAAU,EACV,MAAM,EACN,OAAO,EACP,MAAM,EACN,cAAc,EACd,YAAY,CACZ,CAAC;IACFD,SAAS,EAAEjB,EAAE,CACZ,GAAG,EACH;MAAE,cAAc,EAAEP,CAAC,CAACqC,MAAM,CAACH,aAAa,CAAC,IAAI,CAACE;IAAY,CAAE,EAC5DZ,SAAS;EACT,GAEAO,YAAY,EACZ,CAAC/B,CAAC,CAACqC,MAAM,CAACH,aAAa,CAAC,IACxBhC;IAAIsB,SAAS,EAAEjB,EAAE,CAAC,SAAS;EAAC,GAAG2B,aAAa,IAAIL,YAAY,CAC5D,EACAO,YAAY,IAAIlC;IAAMsB,SAAS,EAAEjB,EAAE,CAAC,QAAQ;EAAC,GAAG6B,YAAY,CAAQ,CAChE;AAER,CAAC;AAEDd,cAAc,CAACI,IAAI,GAAGd,kBAAkB;AACxCU,cAAc,CAACK,KAAK,GAAGP,mBAAmB;AAC1CE,cAAc,CAACM,IAAI,GAAGP,kBAAkB;AAExCC,cAAc,CAACgB,UAAU,GAAG,IAAI;AAChChB,cAAc,CAACR,WAAW,GAAG,gBAAgB;AAC7CQ,cAAc,CAACP,IAAI,GAAG;EACrBC,WAAW,EAAE,oBAAoB;EACjCuB,UAAU,EAAE,CAAC,eAAe,CAAC;EAC7BC,QAAQ,EAAE,CAAC,aAAa;CACxB;AACDlB,cAAc,CAACJ,SAAS,GAAG;EAC1B;;;EAGAM,SAAS,EAAEb,MAAM;EAEjB;;;EAGAQ,QAAQ,EAAET,IAAI;EAEd;;;EAGAgB,IAAI,EAAEhB,IAAI;EAEV;;;EAGAiB,KAAK,EAAEjB,IAAI;EAEX;;;EAGAkB,IAAI,EAAElB;CACN;AAED,eAAeY,cAAc","names":["_","omit","React","PropTypes","lucidClassNames","getFirst","LoadingIcon","cx","bind","any","node","string","LoadingMessageIcon","_props","displayName","peek","description","propName","propTypes","children","LoadingMessageTitle","LoadingMessageBody","LoadingMessage","props","className","passThroughs","Icon","Title","Body","defaultTitle","iconElement","iconChildren","get","titleElement","titleChildren","bodyElement","bodyChildren","isNull","_isPrivate","categories","madeFrom"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/LoadingMessage/LoadingMessage.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { getFirst, StandardProps } from '../../util/component-types';\nimport LoadingIcon from '../Icon/LoadingIcon/LoadingIcon';\n\nconst cx = lucidClassNames.bind('&-LoadingMessage');\n\nconst { any, node, string } = PropTypes;\n\n/** Loading Message Icon */\nexport interface ILoadingMessageIconProps extends StandardProps {\n\tdescription?: string;\n}\nconst LoadingMessageIcon = (_props: ILoadingMessageIconProps): null => null;\nLoadingMessageIcon.displayName = 'LoadingMessage.Icon';\nLoadingMessageIcon.peek = {\n\tdescription: `Renders the \\`Icon\\` element passed in.`,\n};\nLoadingMessageIcon.propName = 'Icon';\nLoadingMessageIcon.propTypes = {\n\tdescription: string,\n\tchildren: any,\n};\n\n/** Loading Message Title */\nexport interface ILoadingMessageTitleProps extends StandardProps {\n\tdescription?: string;\n}\nconst LoadingMessageTitle = (_props: ILoadingMessageTitleProps): null => null;\nLoadingMessageTitle.displayName = 'LoadingMessage.Title';\nLoadingMessageTitle.peek = {\n\tdescription: `Renders an \\`<h3>\\` that represents the title of the \\`LoadingMessage\\`.  Defaults to the string \"Loading\".`,\n};\nLoadingMessageTitle.propName = 'Title';\nLoadingMessageTitle.propTypes = {\n\tdescription: string,\n\tchildren: any,\n};\n\n/** Loading Message Body */\nexport interface ILoadingMessageBodyProps extends StandardProps {\n\tdescription?: string;\n}\nconst LoadingMessageBody = (_props: ILoadingMessageBodyProps): null => null;\nLoadingMessageBody.displayName = 'LoadingMessage.Body';\nLoadingMessageBody.peek = {\n\tdescription: `Renders a \\`<span>\\` that represents the body of the \\`LoadingMessage\\`.`,\n};\nLoadingMessageBody.propName = 'Body';\nLoadingMessageBody.propTypes = {\n\tdescription: string,\n\tchildren: any,\n};\n\n/** Loading Message */\nexport interface ILoadingMessageProps\n\textends StandardProps,\n\t\tReact.DetailedHTMLProps<\n\t\t\tReact.HTMLAttributes<HTMLDivElement>,\n\t\t\tHTMLDivElement\n\t\t> {\n\t/** Custom Icon element (alias for `LoadingMessage.Icon`) */\n\tIcon?: React.ReactNode;\n\n\t/** Custom Title element (alias for `LoadingMessage.Title`) */\n\tTitle?: React.ReactNode;\n\n\t/** Custom Body element (alias for `LoadingMessage.Body`) */\n\tBody?: React.ReactNode;\n}\n\nexport const LoadingMessage = (\n\tprops: ILoadingMessageProps\n): React.ReactElement => {\n\tconst { className, ...passThroughs } = props;\n\tconst { Icon, Title, Body } = LoadingMessage;\n\n\tconst defaultTitle = 'Loading';\n\tconst iconElement = getFirst(props, Icon);\n\tconst iconChildren = _.get(iconElement, 'props.children', <LoadingIcon />);\n\tconst titleElement = getFirst(props, Title);\n\tconst titleChildren = _.get(titleElement, 'props.children');\n\tconst bodyElement = getFirst(props, Body);\n\tconst bodyChildren = _.get(bodyElement, 'props.children', null);\n\n\treturn (\n\t\t<div\n\t\t\t{...omit(passThroughs, [\n\t\t\t\t'className',\n\t\t\t\t'children',\n\t\t\t\t'Icon',\n\t\t\t\t'Title',\n\t\t\t\t'Body',\n\t\t\t\t'initialState',\n\t\t\t\t'callbackId',\n\t\t\t])}\n\t\t\tclassName={cx(\n\t\t\t\t'&',\n\t\t\t\t{ '&-no-content': _.isNull(titleChildren) && !bodyChildren },\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t{iconChildren}\n\t\t\t{!_.isNull(titleChildren) && (\n\t\t\t\t<h3 className={cx('&-title')}>{titleChildren || defaultTitle}</h3>\n\t\t\t)}\n\t\t\t{bodyChildren && <span className={cx('&-body')}>{bodyChildren}</span>}\n\t\t</div>\n\t);\n};\n\nLoadingMessage.Icon = LoadingMessageIcon;\nLoadingMessage.Title = LoadingMessageTitle;\nLoadingMessage.Body = LoadingMessageBody;\n\nLoadingMessage._isPrivate = true;\nLoadingMessage.displayName = 'LoadingMessage';\nLoadingMessage.peek = {\n\tdescription: `A loading message.`,\n\tcategories: ['communication'],\n\tmadeFrom: ['LoadingIcon'],\n};\nLoadingMessage.propTypes = {\n\t/**\n\t\tClass names that are appended to the defaults.\n\t*/\n\tclassName: string,\n\n\t/**\n\t\tAny valid React children.\n\t*/\n\tchildren: node,\n\n\t/**\n\t\tCustom Icon element (alias for \\`LoadingMessage.Icon\\`)\n\t*/\n\tIcon: node,\n\n\t/**\n\t\tCustom Title element (alias for \\`LoadingMessage.Title\\`)\n\t*/\n\tTitle: node,\n\n\t/**\n\t\tCustom Body element (alias for \\`LoadingMessage.Body\\`)\n\t*/\n\tBody: node,\n};\n\nexport default LoadingMessage;\n"]},"metadata":{},"sourceType":"module"}