{"ast":null,"code":"import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../Icon';\nimport { lucidClassNames } from '../../../util/style-helpers';\nconst cx = lucidClassNames.bind('&-HamburgerMenuIcon');\nexport const iconPropTypes = {\n  /** Sets the color of the Icon.  May not be applicable for icons that are tied\n      to specific colors (e.g. DangerIcon). */\n  color: PropTypes.oneOf(['neutral-dark', 'neutral-light', 'neutral-extra-light', 'primary', 'white', 'success', 'warning', 'secondary-one', 'secondary-two', 'secondary-three', 'secondary-five']),\n  /** Any valid SVG aspect ratio. */\n  aspectRatio: PropTypes.string,\n  /** Adds styling that makes the icon appear clickable. */\n  isClickable: PropTypes.bool,\n  /** Adds styling that makes the icon appear disabled.  Also forces\n      isClickable to be false. */\n  isDisabled: PropTypes.bool,\n  /** Called when the user clicks the \\`Icon\\`. Signature:\n      \\`({event, props}) => {}\\` */\n  onClick: PropTypes.func,\n  /** Called when the user clicks an active, clickable \\`Icon\\`. Signature:\n      \\`({event, props}) => {}\\` */\n  onSelect: PropTypes.func,\n  /** Any valid React children. */\n  children: PropTypes.element,\n  /** Classes that are appended to the component defaults. This prop is run\n      through the \\`classnames\\` library. */\n  className: PropTypes.string\n};\nexport const HamburgerMenuIcon = _ref => {\n  let {\n    className,\n    ...passThroughs\n  } = _ref;\n  return React.createElement(Icon\n  // As size, height, width and viewbox are static for this icon, editing those props is disallowed\n  , {\n    ..._.omit(passThroughs, ['initialState', 'size', 'height', 'width', 'viewbox']),\n    className: cx('&', className),\n    width: 16,\n    height: 16,\n    viewBox: '0 0 16 16'\n  }, React.createElement(\"path\", {\n    d: 'M.5 8h15M.5 13.5h15M.5 2.5h15'\n  }));\n};\nHamburgerMenuIcon.displayName = 'HamburgerMenuIcon';\nHamburgerMenuIcon.propTypes = iconPropTypes;\nHamburgerMenuIcon.defaultProps = Icon.defaultProps;\nexport default HamburgerMenuIcon;","map":{"version":3,"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAoB,MAAM,SAAS;AAC1C,SAASC,eAAe,QAAQ,6BAA6B;AAE7D,MAAMC,EAAE,GAAGD,eAAe,CAACE,IAAI,CAAC,qBAAqB,CAAC;AAEtD,OAAO,MAAMC,aAAa,GAAG;EAC5B;;EAEAC,KAAK,EAAEN,SAAS,CAACO,KAAK,CAAC,CACtB,cAAc,EACd,eAAe,EACf,qBAAqB,EACrB,SAAS,EACT,OAAO,EACP,SAAS,EACT,SAAS,EACT,eAAe,EACf,eAAe,EACf,iBAAiB,EACjB,gBAAgB,CAChB,CAAC;EAEF;EACAC,WAAW,EAAER,SAAS,CAACS,MAAM;EAE7B;EACAC,WAAW,EAAEV,SAAS,CAACW,IAAI;EAE3B;;EAEAC,UAAU,EAAEZ,SAAS,CAACW,IAAI;EAE1B;;EAEAE,OAAO,EAAEb,SAAS,CAACc,IAAI;EAEvB;;EAEAC,QAAQ,EAAEf,SAAS,CAACc,IAAI;EAExB;EACAE,QAAQ,EAAEhB,SAAS,CAACiB,OAAO;EAE3B;;EAEAC,SAAS,EAAElB,SAAS,CAACS;CACrB;AAED,OAAO,MAAMU,iBAAiB,GAAG,QAGhB;EAAA,IAHiB;IACjCD,SAAS;IACT,GAAGE;EAAY,CACH;EACZ,OACCrB,oBAACE;EACA;EAAA;OACIH,CAAC,CAACuB,IAAI,CAACD,YAAY,EAAE,CACxB,cAAc,EACd,MAAM,EACN,QAAQ,EACR,OAAO,EACP,SAAS,CACT,CAAC;IACFF,SAAS,EAAEf,EAAE,CAAC,GAAG,EAAEe,SAAS,CAAC;IAC7BI,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAC;EAAW,GAEnBzB;IAAM0B,CAAC,EAAC;EAA+B,EAAG,CACpC;AAET,CAAC;AAEDN,iBAAiB,CAACO,WAAW,GAAG,mBAAmB;AAEnDP,iBAAiB,CAACQ,SAAS,GAAGtB,aAAa;AAE3Cc,iBAAiB,CAACS,YAAY,GAAG3B,IAAI,CAAC2B,YAAY;AAElD,eAAeT,iBAAiB","names":["_","React","PropTypes","Icon","lucidClassNames","cx","bind","iconPropTypes","color","oneOf","aspectRatio","string","isClickable","bool","isDisabled","onClick","func","onSelect","children","element","className","HamburgerMenuIcon","passThroughs","omit","width","height","viewBox","d","displayName","propTypes","defaultProps"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/Icon/HamburgerMenuIcon/HamburgerMenuIcon.tsx"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon, { IIconProps } from '../Icon';\nimport { lucidClassNames } from '../../../util/style-helpers';\n\nconst cx = lucidClassNames.bind('&-HamburgerMenuIcon');\n\nexport const iconPropTypes = {\n\t/** Sets the color of the Icon.  May not be applicable for icons that are tied\n\t\tto specific colors (e.g. DangerIcon). */\n\tcolor: PropTypes.oneOf([\n\t\t'neutral-dark',\n\t\t'neutral-light',\n\t\t'neutral-extra-light',\n\t\t'primary',\n\t\t'white',\n\t\t'success',\n\t\t'warning',\n\t\t'secondary-one',\n\t\t'secondary-two',\n\t\t'secondary-three',\n\t\t'secondary-five',\n\t]),\n\n\t/** Any valid SVG aspect ratio. */\n\taspectRatio: PropTypes.string,\n\n\t/** Adds styling that makes the icon appear clickable. */\n\tisClickable: PropTypes.bool,\n\n\t/** Adds styling that makes the icon appear disabled.  Also forces\n\t\tisClickable to be false. */\n\tisDisabled: PropTypes.bool,\n\n\t/** Called when the user clicks the \\`Icon\\`. Signature:\n\t\t\\`({event, props}) => {}\\` */\n\tonClick: PropTypes.func,\n\n\t/** Called when the user clicks an active, clickable \\`Icon\\`. Signature:\n\t\t\\`({event, props}) => {}\\` */\n\tonSelect: PropTypes.func,\n\n\t/** Any valid React children. */\n\tchildren: PropTypes.element,\n\n\t/** Classes that are appended to the component defaults. This prop is run\n\t\tthrough the \\`classnames\\` library. */\n\tclassName: PropTypes.string,\n};\n\nexport const HamburgerMenuIcon = ({\n\tclassName,\n\t...passThroughs\n}: IIconProps) => {\n\treturn (\n\t\t<Icon\n\t\t\t// As size, height, width and viewbox are static for this icon, editing those props is disallowed\n\t\t\t{..._.omit(passThroughs, [\n\t\t\t\t'initialState',\n\t\t\t\t'size',\n\t\t\t\t'height',\n\t\t\t\t'width',\n\t\t\t\t'viewbox',\n\t\t\t])}\n\t\t\tclassName={cx('&', className)}\n\t\t\twidth={16}\n\t\t\theight={16}\n\t\t\tviewBox='0 0 16 16'\n\t\t>\n\t\t\t<path d='M.5 8h15M.5 13.5h15M.5 2.5h15' />\n\t\t</Icon>\n\t);\n};\n\nHamburgerMenuIcon.displayName = 'HamburgerMenuIcon';\n\nHamburgerMenuIcon.propTypes = iconPropTypes;\n\nHamburgerMenuIcon.defaultProps = Icon.defaultProps;\n\nexport default HamburgerMenuIcon;\n"]},"metadata":{},"sourceType":"module"}