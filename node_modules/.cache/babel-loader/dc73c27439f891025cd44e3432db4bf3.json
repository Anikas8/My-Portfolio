{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { lucidClassNames, uniqueName } from '../../util/style-helpers';\nimport { getFirst, rejectTypes, findTypes } from '../../util/component-types';\nimport { scrollParentTo } from '../../util/dom-helpers';\nimport { buildModernHybridComponent } from '../../util/state-management';\nimport * as KEYCODE from '../../constants/key-code';\nimport * as reducers from './DropMenu.reducers';\nimport ContextMenu from '../ContextMenu/ContextMenu';\nfunction joinArray(array, getSeparator) {\n  return _.reduce(array, (newArray, element, index) => {\n    newArray.push(element);\n    if (index < _.size(array) - 1) {\n      newArray.push(getSeparator(element, index, array));\n    }\n    return newArray;\n  }, []);\n}\nfunction isOptionVisible(option) {\n  return !option.optionProps.isHidden;\n}\nconst cx = lucidClassNames.bind('&-DropMenu');\nconst {\n  any,\n  arrayOf,\n  bool,\n  func,\n  node,\n  number,\n  object,\n  oneOf,\n  string\n} = PropTypes;\nconst Header = _props => null;\nHeader.displayName = 'DropMenu.Header';\nHeader.peek = {\n  description: `\n\t\tAn optional header to be displayed within the expanded Flyout,\n\t\tabove all \\`Option\\`s.\n\t`\n};\nHeader.propName = 'Header';\nHeader.propTypes = {};\nconst Control = _props => null;\nControl.displayName = 'DropMenu.Control';\nControl.peek = {\n  description: `Renders a \\`<div>\\` that acts as the control target which the flyout menu is anchored to. Only one \\`Control\\` is used.`\n};\nControl.propName = 'Control';\nControl.propTypes = {};\nconst OptionGroup = _props => null;\nOptionGroup.displayName = 'DropMenu.OptionGroup';\nOptionGroup.peek = {\n  description: `A special kind of \\`Option\\` that is always rendered at the top of the menu and has an \\`optionIndex\\` of \\`null\\`. Useful for unselect.`\n};\nOptionGroup.propName = 'OptionGroup';\nOptionGroup.propTypes = {\n  /**\n      hides the \\`OptionGroup\\` from the list.\n  */\n  isHidden: bool\n};\nOptionGroup.defaultProps = {\n  isHidden: false\n};\nconst Option = _props => null;\nOption.displayName = 'DropMenu.Option';\nOption.peek = {\n  description: `\n\t\tRenders a \\`<div>\\` that acts as an option in the menu.\n\t`\n};\nOption.propName = 'Option';\nOption.propTypes = {\n  /**\n      disables selection of the \\`Option\\`.\n  */\n  isDisabled: bool,\n  /**\n      hides the \\`Option\\` from the list.\n  */\n  isHidden: bool,\n  /**\n      controls wrapping of the text.\n  */\n  isWrapped: bool\n};\nOption.defaultProps = {\n  isDisabled: false,\n  isHidden: false,\n  isWrapped: true\n};\nconst NullOption = _props => null;\nNullOption.displayName = 'DropMenu.NullOption';\nNullOption.peek = {\n  description: `A special kind of \\`Option\\` that is always rendered at the top of the menu and has an \\`optionIndex\\` of \\`null\\` used for deselecting.`\n};\nNullOption.propName = 'NullOption';\nNullOption.propTypes = {};\nconst FixedOption = _props => null;\nFixedOption.displayName = 'DropMenu.FixedOption';\nFixedOption.peek = {\n  description: `\n\t\tA special kind of \\`Option\\` that is always rendered at the top of\n\t\tthe menu.\n\t`\n};\nFixedOption.propName = 'FixedOption';\nFixedOption.propTypes = {\n  /**\n      disables selection of the \\`Option\\`.\n  */\n  isDisabled: bool,\n  /**\n      hides the \\`Option\\` from the list.\n  */\n  isHidden: bool,\n  /**\n      controls wrapping of the text.\n  */\n  isWrapped: bool\n};\nFixedOption.defaultProps = {\n  isDisabled: false,\n  isHidden: false,\n  isWrapped: true\n};\nconst DropMenuContextMenu = _props => null;\nDropMenuContextMenu.displayName = 'DropMenu.ContextMenu';\nDropMenuContextMenu.peek = {\n  description: `Props that are passed through to the underlying ContextMenu.`\n};\nDropMenuContextMenu.propName = 'ContextMenu';\nDropMenuContextMenu.propTypes = {\n  children: node /**/\n};\n/** TODO: Remove the nonPassThroughs when the component is converted to a functional component */\nconst nonPassThroughs = ['children', 'className', 'style', 'isDisabled', 'isExpanded', 'direction', 'alignment', 'selectedIndices', 'focusedIndex', 'portalId', 'flyOutStyle', 'optionContainerStyle', 'onExpand', 'onCollapse', 'onSelect', 'onFocusNext', 'onFocusPrev', 'onFocusOption', 'Control', 'Option', 'OptionGroup', 'NullOption', 'Header', 'ContextMenu', 'FixedOption', 'initialState', 'callbackId'];\nclass DropMenu extends React.Component {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    this.getPreprocessedOptionData = props => {\n      return DropMenu.preprocessOptionData(props, DropMenu);\n    };\n    this.handleKeydown = event => {\n      const {\n        props,\n        props: {\n          isExpanded,\n          focusedIndex,\n          onExpand,\n          onCollapse,\n          onSelect,\n          onFocusOption\n        }\n      } = this;\n      const {\n        flattenedOptionsData,\n        nullOptions\n      } = this.state;\n      this.setState({\n        isMouseTriggered: false\n      });\n      if (isExpanded) {\n        if (event.keyCode === KEYCODE.Enter) {\n          event.preventDefault();\n          const focusedOptionData = _.get(flattenedOptionsData, _.isNil(focusedIndex) ? '' : focusedIndex, null);\n          const focusedOptionProps = _.get(focusedOptionData, 'optionProps', Option.defaultProps);\n          if (focusedOptionData && !focusedOptionProps.isDisabled) {\n            onSelect && onSelect(focusedIndex, {\n              props: focusedOptionProps,\n              event\n            });\n          } else if (_.isNull(focusedIndex)) {\n            onSelect && onSelect(null, {\n              props: _.first(nullOptions),\n              event\n            });\n          }\n        }\n        if (event.keyCode === KEYCODE.Escape) {\n          event.preventDefault();\n          onCollapse && onCollapse({\n            props,\n            event\n          });\n        }\n        if (event.keyCode === KEYCODE.ArrowUp) {\n          if (_.isNumber(focusedIndex) || _.isNull(focusedIndex)) {\n            if (focusedIndex === 0) {\n              if (!_.isEmpty(nullOptions)) {\n                event.preventDefault();\n                onFocusOption && onFocusOption(null, {\n                  props,\n                  event\n                });\n              }\n            }\n            if (!_.isNil(focusedIndex) && focusedIndex > 0) {\n              event.preventDefault();\n              onFocusOption && onFocusOption(_.findLastIndex(flattenedOptionsData, isOptionVisible, focusedIndex - 1), {\n                props,\n                event\n              });\n            }\n          } else {\n            event.preventDefault();\n            focusedIndex && onFocusOption && onFocusOption(_.findLastIndex(flattenedOptionsData, isOptionVisible, focusedIndex - 1), {\n              props,\n              event\n            });\n          }\n        }\n        if (event.keyCode === KEYCODE.ArrowDown) {\n          if (_.isNumber(focusedIndex)) {\n            if (focusedIndex < _.size(flattenedOptionsData) - 1) {\n              event.preventDefault();\n              onFocusOption && onFocusOption(_.findIndex(flattenedOptionsData, isOptionVisible, focusedIndex + 1), {\n                props,\n                event\n              });\n            }\n          } else {\n            event.preventDefault();\n            onFocusOption && onFocusOption(_.findIndex(flattenedOptionsData, isOptionVisible, !_.isNil(focusedIndex) ? focusedIndex : undefined), {\n              props,\n              event\n            });\n          }\n        }\n      } else {\n        if (event.keyCode === KEYCODE.ArrowDown) {\n          event.preventDefault();\n          onExpand && onExpand({\n            props,\n            event\n          });\n        }\n      }\n    };\n    this.handleClick = event => {\n      const {\n        props,\n        props: {\n          isExpanded,\n          onExpand,\n          onCollapse\n        }\n      } = this;\n      if (isExpanded) {\n        onCollapse && onCollapse({\n          props,\n          event\n        });\n      } else {\n        onExpand && onExpand({\n          props,\n          event\n        });\n      }\n    };\n    this.handleMouseFocusOption = (optionIndex, optionProps, event) => {\n      const {\n        focusedIndex,\n        onFocusOption\n      } = this.props;\n      this.setState({\n        isMouseTriggered: true\n      });\n      if (!optionProps.isDisabled && focusedIndex !== optionIndex) {\n        onFocusOption && onFocusOption(optionIndex, {\n          props: this.props,\n          event\n        });\n      }\n    };\n    this.handleSelectOption = (optionIndex, optionProps, event) => {\n      const {\n        onSelect\n      } = this.props;\n      if (!optionProps.isDisabled) {\n        onSelect && onSelect(optionIndex, {\n          props: optionProps,\n          event\n        });\n      }\n    };\n    this.renderOption = function (optionProps, optionIndex) {\n      let isGrouped = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const {\n        selectedIndices,\n        focusedIndex\n      } = _this.props;\n      const {\n        isMouseTriggered\n      } = _this.state;\n      const {\n        isDisabled,\n        isHidden,\n        isWrapped\n      } = optionProps;\n      const isFocused = optionIndex === focusedIndex;\n      const isSelected = _.includes(selectedIndices, optionIndex);\n      return isHidden ? null : React.createElement(\"div\", {\n        key: 'DropMenuOption' + optionIndex,\n        ..._.omit(optionProps, ['isDisabled', 'isHidden', 'isWrapped', 'Selected', 'Selection', 'initialState', 'callbackId']),\n        onClick: event => _this.handleSelectOption(optionIndex, optionProps, event),\n        onMouseMove: event => _this.handleMouseFocusOption(optionIndex, optionProps, event),\n        className: cx('&-Option', {\n          '&-Option-is-grouped': isGrouped,\n          '&-Option-is-focused': isFocused,\n          '&-Option-is-selected': isSelected,\n          '&-Option-is-disabled': isDisabled,\n          '&-Option-is-null': _.isNull(optionIndex),\n          '&-Option-is-wrapped': isWrapped\n        }, optionProps.className),\n        ref: optionHTMLElement => {\n          if (isFocused && !isMouseTriggered) {\n            scrollParentTo(optionHTMLElement, _this._header && _this._header.current ? _this._header.current.offsetHeight : undefined);\n          }\n        }\n      });\n    };\n    this.UNSAFE_componentWillReceiveProps = nextProps => {\n      // only preprocess options data when it changes (via new props) - better performance than doing this each render\n      this.setState(this.getPreprocessedOptionData(nextProps));\n    };\n    this.state = {\n      optionGroups: [],\n      flattenedOptionsData: [],\n      ungroupedOptionData: [],\n      optionGroupDataLookup: {},\n      nullOptions: [],\n      fixedOptionData: [],\n      isMouseTriggered: false,\n      portalId: this.props.portalId || uniqueName('DropMenu-Portal-'),\n      isExpanded: false,\n      focusedIndex: null,\n      optionGroupIndex: null,\n      optionProps: [],\n      selectedIndices: [],\n      ...this.getPreprocessedOptionData(props) // TODO: typescript hack that should be removed\n    };\n\n    this._header = React.createRef();\n  }\n  render() {\n    const {\n      className,\n      style,\n      isDisabled,\n      isExpanded,\n      direction,\n      alignment,\n      onCollapse,\n      flyOutStyle,\n      optionContainerStyle,\n      ...passThroughs\n    } = this.props;\n    const {\n      optionGroups,\n      fixedOptionData,\n      ungroupedOptionData,\n      optionGroupDataLookup,\n      nullOptions,\n      portalId\n    } = this.state;\n    const contextMenuProps = _.get(getFirst(this.props, DropMenu.ContextMenu), 'props', {});\n    const controlProps = _.get(getFirst(this.props, DropMenu.Control), 'props', {});\n    const headerProps = _.get(getFirst(this.props, DropMenu.Header), 'props', {});\n    return React.createElement(\"div\", {\n      className: cx('&', '&-base', {\n        '&-is-expanded': isExpanded,\n        '&-direction-down': isExpanded && direction === 'down',\n        '&-direction-up': isExpanded && direction === 'up'\n      }, className),\n      style: style,\n      ..._.omit(passThroughs, nonPassThroughs)\n    }, React.createElement(ContextMenu, {\n      ...contextMenuProps,\n      portalId: portalId,\n      isExpanded: isExpanded,\n      direction: direction,\n      alignment: alignment,\n      onClickOut: onCollapse\n    }, React.createElement(ContextMenu.Target, null, React.createElement(\"div\", {\n      ...(!isDisabled ? {\n        tabIndex: 0,\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeydown\n      } : null),\n      ...controlProps,\n      className: cx('&-Control', _.get(controlProps, 'className'))\n    })), React.createElement(ContextMenu.FlyOut, {\n      className: cx('&', className),\n      style: flyOutStyle\n    }, !_.isEmpty(headerProps) && React.createElement(\"div\", {\n      ...headerProps,\n      className: cx('&-Header', headerProps.className),\n      onKeyDown: this.handleKeydown,\n      ref: this._header\n    }), React.createElement(\"div\", {\n      className: cx('&-option-container'),\n      style: _.assign({}, flyOutStyle, optionContainerStyle)\n    }, _.map(nullOptions, optionProps => this.renderOption(optionProps, null)).concat(_.isEmpty(nullOptions) ? [] : [React.createElement(\"div\", {\n      key: 'OptionGroup-divider-NullOption',\n      className: cx('&-OptionGroup-divider')\n    })]),\n    // fixed options go first\n    _.map(fixedOptionData, _ref => {\n      let {\n        optionProps,\n        optionIndex\n      } = _ref;\n      return this.renderOption(optionProps, optionIndex);\n    }), joinArray(\n    // for each option group,\n    _.map(optionGroups, (optionGroupProps, optionGroupIndex) => {\n      const groupedOptions = optionGroupDataLookup[optionGroupIndex];\n      if (optionGroupProps.isHidden || _.every(groupedOptions, {\n        optionProps: {\n          isHidden: true\n        }\n      })) {\n        return null;\n      }\n      const labelElements = rejectTypes(optionGroupProps.children, [DropMenu.Control, DropMenu.OptionGroup, DropMenu.Option, DropMenu.NullOption]);\n      // render label if there is one\n      return (_.isEmpty(labelElements) ? [] : [React.createElement(\"div\", {\n        ..._.omit(optionGroupProps, ['isHidden', 'initialState', 'callbackId']),\n        key: 'OptionGroup-label' + optionGroupIndex,\n        className: cx('&-label', optionGroupProps.className)\n      }, labelElements)\n      // render the options in the group\n      ]).concat(_.map(optionGroupDataLookup[optionGroupIndex], _ref2 => {\n        let {\n          optionProps,\n          optionIndex\n        } = _ref2;\n        return this.renderOption(optionProps, optionIndex, true);\n      }));\n      // append all ungrouped options as another unlabeled group\n    }).concat(_.isEmpty(ungroupedOptionData) ? [] : [_.map(ungroupedOptionData, _ref3 => {\n      let {\n        optionProps,\n        optionIndex\n      } = _ref3;\n      return this.renderOption(optionProps, optionIndex);\n    })]), (element, index) => element && React.createElement(\"div\", {\n      key: `OptionGroup-divider-${index}`,\n      className: cx('&-OptionGroup-divider')\n    }) // separate each group with divider\n    )))));\n  }\n}\n\nDropMenu.displayName = 'DropMenu';\nDropMenu.ContextMenu = DropMenuContextMenu;\nDropMenu.FixedOption = FixedOption;\nDropMenu.NullOption = NullOption;\nDropMenu.Option = Option;\nDropMenu.OptionGroup = OptionGroup;\nDropMenu.Control = Control;\nDropMenu.Header = Header;\nDropMenu.peek = {\n  ContextMenu: DropMenuContextMenu,\n  description: `\\`DropMenu\\` is a helper component used to render a menu of options attached to any control. Supports option groups with and without labels as well as special options with a \\`null\\` index for unselect.`,\n  categories: ['helpers'],\n  madeFrom: ['ContextMenu']\n};\nDropMenu.reducers = reducers;\nDropMenu.propTypes = {\n  /**\n      Should be instances of: \\`DropMenu.Control\\`, \\`DropMenu.Option\\`,\n      \\`DropMenu.OptionGroup\\`, \\`DropMenu.Nulloption\\`. Other direct child\n      elements will not render.\n  */\n  children: node,\n  className: string /**\n                    Appended to the component-specific class names set on the root elements.\n                    Applies to *both* the control and the flyout menu.\n                    */,\n\n  /**\n      Styles that are passed through to root element.\n  */\n  style: object,\n  /**\n      Disables the DropMenu from being clicked or focused.\n  */\n  isDisabled: bool,\n  /**\n      Renders the flyout menu adjacent to the control.\n  */\n  isExpanded: bool,\n  /**\n      Sets the direction the flyout menu will render relative to the control.\n  */\n  direction: oneOf(['down', 'up']),\n  /**\n      Sets the alignment the flyout menu will render relative to the control.\n  */\n  alignment: oneOf(['start', 'center', 'end']),\n  /**\n      An array of currently selected \\`DropMenu.Option\\` indices.\n  */\n  selectedIndices: arrayOf(number),\n  /**\n      The currently focused index of \\`DropMenu.Option\\`. Can also be \\`null\\`.\n  */\n  focusedIndex: number,\n  /**\n      The \\`id\\` of the flyout menu portal element that is appended to\n      \\`document.body\\`. Defaults to a generated id.\n  */\n  portalId: string,\n  /**\n      Styles that are passed through to the ContextMenu FlyOut element.\n  */\n  flyOutStyle: object,\n  /**\n      Styles that are passed through to the option container element.\n  */\n  optionContainerStyle: object,\n  /**\n      Called when collapsed and the control is clicked, or when the control has\n      focus and the Down Arrow is pressed.  Has the signature\n      \\`({ props, event }) => {}\\`\n  */\n  onExpand: func,\n  /**\n      Called when expanded and the user clicks the control or outside of the\n      menu, or when the control has focus and the Escape key is pressed Has the\n      signature \\`({ props, event }) => {}\\`\n  */\n  onCollapse: func,\n  /**\n      Called when an option is clicked, or when an option has focus and the\n      Enter key is pressed.  Has the signature\n      \\`(optionIndex, {props, event}) => {}\\`\n      where optionIndex can be a number or \\`null\\`.\n  */\n  onSelect: func,\n  /**\n      Called when expanded and the the Down Arrow key is pressed. Not called\n      when focus is on the last option.  Has the signature\n      \\`({ props, event }) => {}\\`\n  */\n  onFocusNext: func,\n  /**\n      Called when expanded and the the Up Arrow key is pressed. Not called when\n      focus is on the first option.  Has the signature\n      \\`({ props, event }) => {}\\`\n  */\n  onFocusPrev: func,\n  /**\n      Called when the mouse moves over an option.  Has the signature\n      \\`(optionIndex) => {}\\` where optionIndex can be a number or \\`null\\`.\n  */\n  onFocusOption: func,\n  Control: any /**\n               *Child Element* - The control target which the flyout menu is anchored\n               to. Only one \\`Control\\` is used.\n               */,\n  Option: any /**\n              *Child Element* - These are menu options. The \\`optionIndex\\` is in-order\n              of rendering regardless of group nesting, starting with index \\`0\\`.\n              Each \\`Option\\` may be passed a prop called \\`isDisabled\\` to disable\n              selection of that \\`Option\\`.  Any other props pass to Option will be\n              available from the \\`onSelect\\` handler.\n              */,\n  OptionGroup: any /**\n                   *Child Element* - Used to group \\`Option\\`s within the menu. Any\n                   non-\\`Option\\`s passed in will be rendered as a label for the group.\n                   */,\n  NullOption: any /**\n                  *Child Element* - A special kind of \\`Option\\` that is always rendered at\n                  the top of the menu and has an \\`optionIndex\\` of \\`null\\`. Useful for\n                  unselect.\n                  */,\n  Header: any /**\n              *Child Element* - An optional header to be displayed within the expanded\n              Flyout, above all \\`Option\\`s.\n              */,\n  ContextMenu: any /**\n                   *Child Element* - props pass through to the underlying ContextMenu\n                   component\n                   */,\n  FixedOption: any /**\n                   *Child Element* - A special kind of \\`Option\\` that is always rendered at the top of\n                   the menu.\n                   */\n};\n\nDropMenu.defaultProps = {\n  isDisabled: false,\n  isExpanded: false,\n  direction: 'down',\n  alignment: 'start',\n  selectedIndices: [],\n  focusedIndex: null,\n  flyOutStyle: {\n    maxHeight: '18em'\n  },\n  onExpand: _.noop,\n  onCollapse: _.noop,\n  onSelect: _.noop,\n  onFocusNext: _.noop,\n  onFocusPrev: _.noop,\n  onFocusOption: _.noop,\n  portalId: '',\n  optionContainerStyle: {},\n  ContextMenu: ContextMenu.defaultProps\n};\nDropMenu.preprocessOptionData = (props, ParentType) => {\n  const {\n    OptionGroup,\n    Option,\n    NullOption,\n    FixedOption\n  } = ParentType;\n  const optionGroups = _.map(findTypes(props, OptionGroup), 'props'); // find all OptionGroup props\n  const fixedOptions = _.map(findTypes(props, FixedOption), 'props'); // find all FixedOption props\n  const ungroupedOptions = _.map(findTypes(props, Option), 'props'); // find all ungrouped Option props\n  const nullOptions = NullOption ? _.map(findTypes(props, NullOption), 'props') : []; // find all NullOption props\n  const fixedOptionData = _.map(fixedOptions, (optionProps, localOptionIndex) => {\n    return {\n      localOptionIndex,\n      optionIndex: localOptionIndex,\n      optionGroupIndex: null,\n      optionProps\n    };\n  });\n  // flatten grouped options into array of objects to associate { index, group index, and props } for each option\n  const groupedOptionData = _.reduce(optionGroups, (memo, optionGroupProps, optionGroupIndex) => {\n    const groupedOptions = _.map(findTypes(optionGroupProps, Option), 'props'); // find all Option props for current group\n    return memo.concat(_.map(groupedOptions, (optionProps, localOptionIndex) => {\n      return {\n        localOptionIndex,\n        optionIndex: _.size(memo) + _.size(fixedOptionData) + localOptionIndex,\n        optionGroupIndex,\n        optionProps: {\n          isHidden: false,\n          ...optionProps\n        }\n      };\n    }));\n  }, []);\n  // create lookup object for options by their group index\n  const optionGroupDataLookup = _.groupBy(groupedOptionData, 'optionGroupIndex');\n  // store ungrouped options into array of objects to associate { index, and props } for each option\n  const ungroupedOptionData = _.map(ungroupedOptions, (optionProps, localOptionIndex) => {\n    return {\n      localOptionIndex,\n      optionIndex: _.size(groupedOptionData) + _.size(fixedOptionData) + localOptionIndex,\n      optionGroupIndex: null,\n      optionProps: {\n        isHidden: false,\n        ...optionProps\n      }\n    };\n  });\n  // concatenate grouped options array with ungrouped options array to get flat list of all options\n  const flattenedOptionsData = _.concat(fixedOptionData, groupedOptionData, ungroupedOptionData);\n  return {\n    optionGroups,\n    optionGroupDataLookup,\n    fixedOptionData,\n    ungroupedOptionData,\n    flattenedOptionsData,\n    nullOptions\n  };\n};\nexport default buildModernHybridComponent(DropMenu, {\n  reducers\n});\nexport { DropMenu as DropMenuDumb, NullOption, OptionGroup };","map":{"version":3,"mappings":"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","names":["React","PropTypes","_","lucidClassNames","uniqueName","getFirst","rejectTypes","findTypes","scrollParentTo","buildModernHybridComponent","KEYCODE","reducers","ContextMenu","joinArray","array","getSeparator","reduce","newArray","element","index","push","size","isOptionVisible","option","optionProps","isHidden","cx","bind","any","arrayOf","bool","func","node","number","object","oneOf","string","Header","_props","displayName","peek","description","propName","propTypes","Control","OptionGroup","defaultProps","Option","isDisabled","isWrapped","NullOption","FixedOption","DropMenuContextMenu","children","nonPassThroughs","DropMenu","Component","constructor","props","preprocessOptionData","event","isExpanded","focusedIndex","onExpand","onCollapse","onSelect","onFocusOption","flattenedOptionsData","nullOptions","state","setState","isMouseTriggered","keyCode","Enter","preventDefault","focusedOptionData","get","isNil","focusedOptionProps","isNull","first","Escape","ArrowUp","isNumber","isEmpty","findLastIndex","ArrowDown","findIndex","undefined","optionIndex","isGrouped","selectedIndices","isFocused","isSelected","includes","key","omit","onClick","handleSelectOption","onMouseMove","handleMouseFocusOption","className","ref","optionHTMLElement","_header","current","offsetHeight","nextProps","getPreprocessedOptionData","optionGroups","ungroupedOptionData","optionGroupDataLookup","fixedOptionData","portalId","optionGroupIndex","createRef","render","style","direction","alignment","flyOutStyle","optionContainerStyle","passThroughs","contextMenuProps","controlProps","headerProps","onClickOut","Target","tabIndex","handleClick","onKeyDown","handleKeydown","FlyOut","assign","map","renderOption","concat","optionGroupProps","groupedOptions","every","labelElements","categories","madeFrom","onFocusNext","onFocusPrev","maxHeight","noop","ParentType","fixedOptions","ungroupedOptions","localOptionIndex","groupedOptionData","memo","groupBy","DropMenuDumb"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/DropMenu/DropMenu.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { lucidClassNames, uniqueName } from '../../util/style-helpers';\nimport {\n\tStandardProps,\n\tgetFirst,\n\trejectTypes,\n\tfindTypes,\n\tOverwrite,\n} from '../../util/component-types';\nimport { scrollParentTo } from '../../util/dom-helpers';\nimport { buildModernHybridComponent } from '../../util/state-management';\nimport * as KEYCODE from '../../constants/key-code';\nimport * as reducers from './DropMenu.reducers';\nimport ContextMenu from '../ContextMenu/ContextMenu';\n\nfunction joinArray(\n\tarray: React.ReactNode[],\n\tgetSeparator: (\n\t\telement: React.ReactNode,\n\t\tindex: number,\n\t\tarray: React.ReactNode[]\n\t) => React.ReactNode\n) {\n\treturn _.reduce(\n\t\tarray,\n\t\t(newArray: React.ReactNode[], element, index) => {\n\t\t\tnewArray.push(element);\n\t\t\tif (index < _.size(array) - 1) {\n\t\t\t\tnewArray.push(getSeparator(element, index, array));\n\t\t\t}\n\t\t\treturn newArray;\n\t\t},\n\t\t[]\n\t);\n}\n\nfunction isOptionVisible(option: IOptionsData) {\n\treturn !option.optionProps.isHidden;\n}\n\nconst cx = lucidClassNames.bind('&-DropMenu');\n\nconst { any, arrayOf, bool, func, node, number, object, oneOf, string } =\n\tPropTypes;\n\n/** Header */\nexport interface IDropMenuHeaderProps extends StandardProps {\n\tdescription?: string;\n}\n\nconst Header = (_props: IDropMenuHeaderProps): null => null;\nHeader.displayName = 'DropMenu.Header';\nHeader.peek = {\n\tdescription: `\n\t\tAn optional header to be displayed within the expanded Flyout,\n\t\tabove all \\`Option\\`s.\n\t`,\n};\nHeader.propName = 'Header';\nHeader.propTypes = {};\n\n/** Control */\nexport interface IDropMenuControlProps extends StandardProps {\n\tdescription?: string;\n}\n\nconst Control = (_props: IDropMenuControlProps): null => null;\nControl.displayName = 'DropMenu.Control';\nControl.peek = {\n\tdescription: `Renders a \\`<div>\\` that acts as the control target which the flyout menu is anchored to. Only one \\`Control\\` is used.`,\n};\nControl.propName = 'Control';\nControl.propTypes = {};\n\n/** Option Group */\nexport interface IDropMenuOptionGroupProps extends StandardProps {\n\tdescription?: string;\n\tisHidden?: boolean;\n}\n\nexport type OptionGroupFC = (props: IDropMenuOptionGroupProps) => null;\n\nconst OptionGroup = (_props: IDropMenuOptionGroupProps): null => null;\nOptionGroup.displayName = 'DropMenu.OptionGroup';\nOptionGroup.peek = {\n\tdescription: `A special kind of \\`Option\\` that is always rendered at the top of the menu and has an \\`optionIndex\\` of \\`null\\`. Useful for unselect.`,\n};\nOptionGroup.propName = 'OptionGroup';\nOptionGroup.propTypes = {\n\t/**\n\t\thides the \\`OptionGroup\\` from the list.\n\t*/\n\tisHidden: bool,\n};\nOptionGroup.defaultProps = {\n\tisHidden: false,\n};\n\n/** Option */\nexport interface IDropMenuOptionProps extends StandardProps {\n\tisDisabled?: boolean;\n\tisHidden?: boolean;\n\tisWrapped?: boolean;\n\tSelected?: any;\n}\n\nconst Option = (_props: IDropMenuOptionProps): null => null;\nOption.displayName = 'DropMenu.Option';\nOption.peek = {\n\tdescription: `\n\t\tRenders a \\`<div>\\` that acts as an option in the menu.\n\t`,\n};\nOption.propName = 'Option';\nOption.propTypes = {\n\t/**\n\t\tdisables selection of the \\`Option\\`.\n\t*/\n\tisDisabled: bool,\n\n\t/**\n\t\thides the \\`Option\\` from the list.\n\t*/\n\tisHidden: bool,\n\n\t/**\n\t\tcontrols wrapping of the text.\n\t*/\n\tisWrapped: bool,\n};\nOption.defaultProps = {\n\tisDisabled: false,\n\tisHidden: false,\n\tisWrapped: true,\n};\n\n/** Null Option */\nexport interface IDropMenuNullOptionProps extends StandardProps {\n\tdescription?: string;\n}\n\nconst NullOption = (_props: IDropMenuNullOptionProps): null => null;\nNullOption.displayName = 'DropMenu.NullOption';\nNullOption.peek = {\n\tdescription: `A special kind of \\`Option\\` that is always rendered at the top of the menu and has an \\`optionIndex\\` of \\`null\\` used for deselecting.`,\n};\nNullOption.propName = 'NullOption';\nNullOption.propTypes = {};\n\n/** Fixed Option */\nexport interface IDropMenuFixedOptionProps extends StandardProps {\n\tdescription?: string;\n\tisDisabled: boolean;\n\tisHidden: boolean;\n\tisWrapped: boolean;\n}\n\nconst FixedOption = (_props: IDropMenuFixedOptionProps): null => null;\nFixedOption.displayName = 'DropMenu.FixedOption';\nFixedOption.peek = {\n\tdescription: `\n\t\tA special kind of \\`Option\\` that is always rendered at the top of\n\t\tthe menu.\n\t`,\n};\nFixedOption.propName = 'FixedOption';\nFixedOption.propTypes = {\n\t/**\n\t\tdisables selection of the \\`Option\\`.\n\t*/\n\tisDisabled: bool,\n\n\t/**\n\t\thides the \\`Option\\` from the list.\n\t*/\n\tisHidden: bool,\n\n\t/**\n\t\tcontrols wrapping of the text.\n\t*/\n\tisWrapped: bool,\n};\nFixedOption.defaultProps = {\n\tisDisabled: false,\n\tisHidden: false,\n\tisWrapped: true,\n};\n\n/** Context Menu */\nexport interface IDropMenuContextMenuProps extends StandardProps {\n\tdescription?: string;\n}\n\nconst DropMenuContextMenu = (_props: IDropMenuContextMenuProps): null => null;\nDropMenuContextMenu.displayName = 'DropMenu.ContextMenu';\nDropMenuContextMenu.peek = {\n\tdescription: `Props that are passed through to the underlying ContextMenu.`,\n};\nDropMenuContextMenu.propName = 'ContextMenu';\nDropMenuContextMenu.propTypes = {\n\tchildren: node /**/,\n};\n\n/** Drop Menu */\nexport interface IDropMenuProps extends StandardProps {\n\t/** Disables the DropMenu from being clicked or focused. */\n\tisDisabled?: boolean;\n\n\t/** Renders the flyout menu adjacent to the control. */\n\tisExpanded?: boolean;\n\n\t/** Sets the direction the flyout menu will render relative to the control. */\n\tdirection?: 'down' | 'up';\n\n\t/** Sets the alignment the flyout menu will render relative to the control. */\n\talignment?: 'start' | 'center' | 'end';\n\n\t/** An array of currently selected \\`DropMenu.Option\\` indices. */\n\tselectedIndices?: number[] | null;\n\n\t/** The currently focused index of \\`DropMenu.Option\\`. Can also be \\`null\\`. */\n\tfocusedIndex?: number | null;\n\n\t/** The \\`id\\` of the flyout menu portal element that is appended to\n\t\t\t\\`document.body\\`. Defaults to a generated id. */\n\tportalId?: string;\n\n\t/** Styles that are passed through to the ContextMenu FlyOut element. */\n\tflyOutStyle?: object;\n\n\t/** Styles that are passed through to the option container element. */\n\toptionContainerStyle?: object;\n\n\t/** Called when collapsed and the control is clicked, or when the control has\n\t\t\tfocus and the Down Arrow is pressed. */\n\tonExpand?: ({\n\t\tprops,\n\t\tevent,\n\t}: {\n\t\tprops: IDropMenuPropsWithPassThroughs;\n\t\tevent: React.KeyboardEvent | React.MouseEvent;\n\t}) => void;\n\n\t/** Called when expanded and the user clicks the control or outside of the\n\t\t\tmenu, or when the control has focus and the Escape key is pressed */\n\tonCollapse?: ({\n\t\tprops,\n\t\tevent,\n\t}: {\n\t\tprops: IDropMenuPropsWithPassThroughs;\n\t\tevent: React.KeyboardEvent | React.MouseEvent;\n\t}) => void;\n\n\t/** Called when an option is clicked, or when an option has focus and the\n\t\t\tEnter key is pressed. */\n\tonSelect?: (\n\t\toptionIndex: any,\n\t\t{\n\t\t\tprops,\n\t\t\tevent,\n\t\t}: {\n\t\t\tprops: IDropMenuOptionProps | undefined;\n\t\t\tevent: React.KeyboardEvent | React.MouseEvent;\n\t\t}\n\t) => void;\n\n\t/** Called when expanded and the the Down Arrow key is pressed. Not called\n\t\t\twhen focus is on the last option. */\n\tonFocusNext?: ({\n\t\tprops,\n\t\tevent,\n\t}: {\n\t\tprops: IDropMenuPropsWithPassThroughs;\n\t\tevent: React.KeyboardEvent;\n\t}) => void;\n\n\t/** Called when expanded and the the Up Arrow key is pressed. Not called when\n\t\t\tfocus is on the first option. */\n\tonFocusPrev?: ({\n\t\tprops,\n\t\tevent,\n\t}: {\n\t\tprops: IDropMenuPropsWithPassThroughs;\n\t\tevent: React.KeyboardEvent;\n\t}) => void;\n\n\tonFocusOption?: (\n\t\toptionIndex: number | null,\n\t\t{\n\t\t\tprops,\n\t\t\tevent,\n\t\t}: {\n\t\t\tprops: IDropMenuPropsWithPassThroughs;\n\t\t\tevent: React.KeyboardEvent | React.MouseEvent;\n\t\t}\n\t) => void;\n\n\t/** *Child Element* - The control target which the flyout menu is anchored\n\t\t\tto. Only one \\`Control\\` is used. */\n\tControl?: React.ReactNode;\n\n\t/** *Child Element* - These are menu options. The \\`optionIndex\\` is in-order\n\t\t\tof rendering regardless of group nesting, starting with index \\`0\\`.\n\t\t\tEach \\`Option\\` may be passed a prop called \\`isDisabled\\` to disable\n\t\t\tselection of that \\`Option\\`.  Any other props pass to Option will be\n\t\t\tavailable from the \\`onSelect\\` handler. */\n\tOption?: React.ReactNode;\n\n\t/** *Child Element* - Used to group \\`Option\\`s within the menu. Any\n\t\t\tnon-\\`Option\\`s passed in will be rendered as a label for the group. */\n\tOptionGroup?: React.ReactNode;\n\n\t/** *Child Element* - A special kind of \\`Option\\` that is always rendered at\n\t\t\tthe top of the menu and has an \\`optionIndex\\` of \\`null\\`. Useful for\n\t\t\tunselect. */\n\tNullOption?: React.ReactNode;\n\n\t/** *Child Element* - An optional header to be displayed within the expanded\n\t\t\tFlyout, above all \\`Option\\`s. */\n\tHeader?: React.ReactNode;\n\n\t/** *Child Element* - props pass through to the underlying ContextMenu\n\t\t\tcomponent */\n\tContextMenu?: React.ReactNode;\n\n\t/** *Child Element* - A special kind of \\`Option\\` that is always rendered at the top of\n\t\t\tthe menu. */\n\tFixedOption?: React.ReactNode;\n}\n\ntype IDropMenuPropsWithPassThroughs = Overwrite<\n\tReact.DetailedHTMLProps<React.DOMAttributes<HTMLDivElement>, HTMLDivElement>,\n\tIDropMenuProps\n>;\n\n/** TODO: Remove the nonPassThroughs when the component is converted to a functional component */\nconst nonPassThroughs = [\n\t'children',\n\t'className',\n\t'style',\n\t'isDisabled',\n\t'isExpanded',\n\t'direction',\n\t'alignment',\n\t'selectedIndices',\n\t'focusedIndex',\n\t'portalId',\n\t'flyOutStyle',\n\t'optionContainerStyle',\n\t'onExpand',\n\t'onCollapse',\n\t'onSelect',\n\t'onFocusNext',\n\t'onFocusPrev',\n\t'onFocusOption',\n\t'Control',\n\t'Option',\n\t'OptionGroup',\n\t'NullOption',\n\t'Header',\n\t'ContextMenu',\n\t'FixedOption',\n\t'initialState',\n\t'callbackId',\n];\n\nexport interface IOptionsData {\n\tlocalOptionIndex: number;\n\toptionIndex: number;\n\toptionGroupIndex: number | null;\n\toptionProps: IDropMenuOptionProps;\n}\n\nexport interface IHasOptionChildren<\n\tOptionGroupProps,\n\tOptionProps,\n\tNullOptionProps,\n\tFixedOptionProps\n> {\n\tOptionGroup: (_props: OptionGroupProps) => null;\n\tOption: (_props: OptionProps) => null;\n\tNullOption: (_props: NullOptionProps) => null;\n\tFixedOption: (_props: FixedOptionProps) => null;\n}\n\nexport interface IDropMenuState {\n\tisMouseTriggered: boolean;\n\toptionGroups: IDropMenuOptionGroupProps[];\n\tflattenedOptionsData: IOptionsData[];\n\tungroupedOptionData: IOptionsData[];\n\toptionGroupDataLookup: { [key: number]: IOptionsData[] };\n\tfixedOptionData: IOptionsData[];\n\tportalId: string;\n\tisExpanded: boolean;\n\tfocusedIndex: number | null;\n\tselectedIndices: number[];\n\tnullOptions: IDropMenuNullOptionProps[];\n\toptionGroupIndex: number | null;\n\toptionProps: [];\n}\n\nclass DropMenu extends React.Component<\n\tIDropMenuPropsWithPassThroughs,\n\tIDropMenuState\n> {\n\tprivate _header: React.RefObject<HTMLDivElement>;\n\n\tconstructor(props: IDropMenuPropsWithPassThroughs) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\toptionGroups: [],\n\t\t\tflattenedOptionsData: [],\n\t\t\tungroupedOptionData: [],\n\t\t\toptionGroupDataLookup: {},\n\t\t\tnullOptions: [],\n\t\t\tfixedOptionData: [],\n\t\t\tisMouseTriggered: false,\n\t\t\tportalId: this.props.portalId || uniqueName('DropMenu-Portal-'),\n\t\t\tisExpanded: false,\n\t\t\tfocusedIndex: null,\n\t\t\toptionGroupIndex: null,\n\t\t\toptionProps: [],\n\t\t\tselectedIndices: [],\n\t\t\t...(this.getPreprocessedOptionData(props) as any), // TODO: typescript hack that should be removed\n\t\t};\n\n\t\tthis._header = React.createRef<HTMLDivElement>();\n\t}\n\n\tstatic displayName = 'DropMenu';\n\n\tstatic ContextMenu = DropMenuContextMenu;\n\tstatic FixedOption = FixedOption;\n\tstatic NullOption = NullOption;\n\tstatic Option = Option;\n\tstatic OptionGroup = OptionGroup;\n\tstatic Control = Control;\n\tstatic Header = Header;\n\n\tstatic peek = {\n\t\tContextMenu: DropMenuContextMenu,\n\t\tdescription: `\\`DropMenu\\` is a helper component used to render a menu of options attached to any control. Supports option groups with and without labels as well as special options with a \\`null\\` index for unselect.`,\n\t\tcategories: ['helpers'],\n\t\tmadeFrom: ['ContextMenu'],\n\t};\n\n\tstatic reducers = reducers;\n\n\tstatic propTypes = {\n\t\t/**\n\t\t\tShould be instances of: \\`DropMenu.Control\\`, \\`DropMenu.Option\\`,\n\t\t\t\\`DropMenu.OptionGroup\\`, \\`DropMenu.Nulloption\\`. Other direct child\n\t\t\telements will not render.\n\t\t*/\n\t\tchildren: node,\n\n\t\tclassName: string /**\n\t\t\tAppended to the component-specific class names set on the root elements.\n\t\t\tApplies to *both* the control and the flyout menu.\n\t\t*/,\n\n\t\t/**\n\t\t\tStyles that are passed through to root element.\n\t\t*/\n\t\tstyle: object,\n\n\t\t/**\n\t\t\tDisables the DropMenu from being clicked or focused.\n\t\t*/\n\t\tisDisabled: bool,\n\n\t\t/**\n\t\t\tRenders the flyout menu adjacent to the control.\n\t\t*/\n\t\tisExpanded: bool,\n\n\t\t/**\n\t\t\tSets the direction the flyout menu will render relative to the control.\n\t\t*/\n\t\tdirection: oneOf(['down', 'up']),\n\n\t\t/**\n\t\t\tSets the alignment the flyout menu will render relative to the control.\n\t\t*/\n\t\talignment: oneOf(['start', 'center', 'end']),\n\n\t\t/**\n\t\t\tAn array of currently selected \\`DropMenu.Option\\` indices.\n\t\t*/\n\t\tselectedIndices: arrayOf(number),\n\n\t\t/**\n\t\t\tThe currently focused index of \\`DropMenu.Option\\`. Can also be \\`null\\`.\n\t\t*/\n\t\tfocusedIndex: number,\n\n\t\t/**\n\t\t\tThe \\`id\\` of the flyout menu portal element that is appended to\n\t\t\t\\`document.body\\`. Defaults to a generated id.\n\t\t*/\n\t\tportalId: string,\n\n\t\t/**\n\t\t\tStyles that are passed through to the ContextMenu FlyOut element.\n\t\t*/\n\t\tflyOutStyle: object,\n\n\t\t/**\n\t\t\tStyles that are passed through to the option container element.\n\t\t*/\n\t\toptionContainerStyle: object,\n\n\t\t/**\n\t\t\tCalled when collapsed and the control is clicked, or when the control has\n\t\t\tfocus and the Down Arrow is pressed.  Has the signature\n\t\t\t\\`({ props, event }) => {}\\`\n\t\t*/\n\t\tonExpand: func,\n\n\t\t/**\n\t\t\tCalled when expanded and the user clicks the control or outside of the\n\t\t\tmenu, or when the control has focus and the Escape key is pressed Has the\n\t\t\tsignature \\`({ props, event }) => {}\\`\n\t\t*/\n\t\tonCollapse: func,\n\n\t\t/**\n\t\t\tCalled when an option is clicked, or when an option has focus and the\n\t\t\tEnter key is pressed.  Has the signature\n\t\t\t\\`(optionIndex, {props, event}) => {}\\`\n\t\t\twhere optionIndex can be a number or \\`null\\`.\n\t\t*/\n\t\tonSelect: func,\n\n\t\t/**\n\t\t\tCalled when expanded and the the Down Arrow key is pressed. Not called\n\t\t\twhen focus is on the last option.  Has the signature\n\t\t\t\\`({ props, event }) => {}\\`\n\t\t*/\n\t\tonFocusNext: func,\n\n\t\t/**\n\t\t\tCalled when expanded and the the Up Arrow key is pressed. Not called when\n\t\t\tfocus is on the first option.  Has the signature\n\t\t\t\\`({ props, event }) => {}\\`\n\t\t*/\n\t\tonFocusPrev: func,\n\n\t\t/**\n\t\t\tCalled when the mouse moves over an option.  Has the signature\n\t\t\t\\`(optionIndex) => {}\\` where optionIndex can be a number or \\`null\\`.\n\t\t*/\n\t\tonFocusOption: func,\n\n\t\tControl: any /**\n\t\t\t*Child Element* - The control target which the flyout menu is anchored\n\t\t\tto. Only one \\`Control\\` is used.\n\t\t*/,\n\n\t\tOption: any /**\n\t\t\t*Child Element* - These are menu options. The \\`optionIndex\\` is in-order\n\t\t\tof rendering regardless of group nesting, starting with index \\`0\\`.\n\t\t\tEach \\`Option\\` may be passed a prop called \\`isDisabled\\` to disable\n\t\t\tselection of that \\`Option\\`.  Any other props pass to Option will be\n\t\t\tavailable from the \\`onSelect\\` handler.\n\t\t*/,\n\n\t\tOptionGroup: any /**\n\t\t\t*Child Element* - Used to group \\`Option\\`s within the menu. Any\n\t\t\tnon-\\`Option\\`s passed in will be rendered as a label for the group.\n\t\t*/,\n\n\t\tNullOption: any /**\n\t\t\t*Child Element* - A special kind of \\`Option\\` that is always rendered at\n\t\t\tthe top of the menu and has an \\`optionIndex\\` of \\`null\\`. Useful for\n\t\t\tunselect.\n\t\t*/,\n\n\t\tHeader: any /**\n\t\t\t*Child Element* - An optional header to be displayed within the expanded\n\t\t\tFlyout, above all \\`Option\\`s.\n\t\t*/,\n\n\t\tContextMenu: any /**\n\t\t\t*Child Element* - props pass through to the underlying ContextMenu\n\t\t\tcomponent\n\t\t*/,\n\n\t\tFixedOption: any /**\n\t\t\t*Child Element* - A special kind of \\`Option\\` that is always rendered at the top of\n\t\t\tthe menu.\n\t\t*/,\n\t};\n\n\tstatic defaultProps = {\n\t\tisDisabled: false,\n\t\tisExpanded: false,\n\t\tdirection: 'down' as const,\n\t\talignment: 'start' as const,\n\t\tselectedIndices: [],\n\t\tfocusedIndex: null,\n\t\tflyOutStyle: { maxHeight: '18em' },\n\t\tonExpand: _.noop,\n\t\tonCollapse: _.noop,\n\t\tonSelect: _.noop,\n\t\tonFocusNext: _.noop,\n\t\tonFocusPrev: _.noop,\n\t\tonFocusOption: _.noop,\n\t\tportalId: '',\n\t\toptionContainerStyle: {},\n\t\tContextMenu: ContextMenu.defaultProps,\n\t};\n\n\tgetPreprocessedOptionData = (props: IDropMenuPropsWithPassThroughs) => {\n\t\treturn DropMenu.preprocessOptionData(props, DropMenu);\n\t};\n\n\tstatic preprocessOptionData = <\n\t\tOptionGroupProps extends IDropMenuOptionGroupProps,\n\t\tOptionProps extends IDropMenuOptionProps,\n\t\tNullOptionProps extends IDropMenuNullOptionProps,\n\t\tFixedOptionProps extends IDropMenuFixedOptionProps\n\t>(\n\t\tprops: StandardProps,\n\t\tParentType: IHasOptionChildren<\n\t\t\tOptionGroupProps,\n\t\t\tOptionProps,\n\t\t\tNullOptionProps,\n\t\t\tFixedOptionProps\n\t\t>\n\t) => {\n\t\tconst { OptionGroup, Option, NullOption, FixedOption } = ParentType;\n\n\t\tconst optionGroups = _.map(findTypes(props, OptionGroup), 'props'); // find all OptionGroup props\n\t\tconst fixedOptions = _.map(findTypes(props, FixedOption), 'props'); // find all FixedOption props\n\t\tconst ungroupedOptions = _.map(findTypes(props, Option), 'props'); // find all ungrouped Option props\n\t\tconst nullOptions = NullOption\n\t\t\t? _.map(findTypes(props, NullOption), 'props')\n\t\t\t: []; // find all NullOption props\n\n\t\tconst fixedOptionData: IOptionsData[] = _.map(\n\t\t\tfixedOptions,\n\t\t\t(optionProps, localOptionIndex) => {\n\t\t\t\treturn {\n\t\t\t\t\tlocalOptionIndex,\n\t\t\t\t\toptionIndex: localOptionIndex,\n\t\t\t\t\toptionGroupIndex: null, // ungrouped options have no `optionGroupIndex`\n\t\t\t\t\toptionProps,\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\t// flatten grouped options into array of objects to associate { index, group index, and props } for each option\n\t\tconst groupedOptionData: IOptionsData[] = _.reduce(\n\t\t\toptionGroups,\n\t\t\t(memo: IOptionsData[], optionGroupProps, optionGroupIndex) => {\n\t\t\t\tconst groupedOptions = _.map(\n\t\t\t\t\tfindTypes(optionGroupProps, Option),\n\t\t\t\t\t'props'\n\t\t\t\t); // find all Option props for current group\n\t\t\t\treturn memo.concat(\n\t\t\t\t\t_.map(groupedOptions, (optionProps, localOptionIndex) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlocalOptionIndex,\n\t\t\t\t\t\t\toptionIndex:\n\t\t\t\t\t\t\t\t_.size(memo) + _.size(fixedOptionData) + localOptionIndex, // add current index to current array length to get final option index\n\t\t\t\t\t\t\toptionGroupIndex, // store option group index to associate option back to group\n\t\t\t\t\t\t\toptionProps: {\n\t\t\t\t\t\t\t\tisHidden: false,\n\t\t\t\t\t\t\t\t...optionProps,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\t[]\n\t\t);\n\n\t\t// create lookup object for options by their group index\n\t\tconst optionGroupDataLookup = _.groupBy(\n\t\t\tgroupedOptionData,\n\t\t\t'optionGroupIndex'\n\t\t);\n\n\t\t// store ungrouped options into array of objects to associate { index, and props } for each option\n\t\tconst ungroupedOptionData: IOptionsData[] = _.map(\n\t\t\tungroupedOptions,\n\t\t\t(optionProps, localOptionIndex) => {\n\t\t\t\treturn {\n\t\t\t\t\tlocalOptionIndex,\n\t\t\t\t\toptionIndex:\n\t\t\t\t\t\t_.size(groupedOptionData) +\n\t\t\t\t\t\t_.size(fixedOptionData) +\n\t\t\t\t\t\tlocalOptionIndex, // add current index to grouped options array length to get final option index (grouped options rendered first)\n\t\t\t\t\toptionGroupIndex: null, // ungrouped options have no `optionGroupIndex`\n\t\t\t\t\toptionProps: {\n\t\t\t\t\t\tisHidden: false,\n\t\t\t\t\t\t...optionProps,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\t// concatenate grouped options array with ungrouped options array to get flat list of all options\n\t\tconst flattenedOptionsData = _.concat(\n\t\t\tfixedOptionData,\n\t\t\tgroupedOptionData,\n\t\t\tungroupedOptionData\n\t\t);\n\n\t\treturn {\n\t\t\toptionGroups,\n\t\t\toptionGroupDataLookup,\n\t\t\tfixedOptionData,\n\t\t\tungroupedOptionData,\n\t\t\tflattenedOptionsData,\n\t\t\tnullOptions,\n\t\t};\n\t};\n\n\thandleKeydown = (event: React.KeyboardEvent) => {\n\t\tconst {\n\t\t\tprops,\n\t\t\tprops: {\n\t\t\t\tisExpanded,\n\t\t\t\tfocusedIndex,\n\t\t\t\tonExpand,\n\t\t\t\tonCollapse,\n\t\t\t\tonSelect,\n\t\t\t\tonFocusOption,\n\t\t\t},\n\t\t} = this;\n\n\t\tconst { flattenedOptionsData, nullOptions } = this.state;\n\n\t\tthis.setState({\n\t\t\tisMouseTriggered: false,\n\t\t});\n\n\t\tif (isExpanded) {\n\t\t\tif (event.keyCode === KEYCODE.Enter) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst focusedOptionData = _.get(\n\t\t\t\t\tflattenedOptionsData,\n\t\t\t\t\t_.isNil(focusedIndex) ? '' : focusedIndex,\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\tconst focusedOptionProps = _.get(\n\t\t\t\t\tfocusedOptionData,\n\t\t\t\t\t'optionProps',\n\t\t\t\t\tOption.defaultProps\n\t\t\t\t) as IDropMenuPropsWithPassThroughs;\n\t\t\t\tif (focusedOptionData && !focusedOptionProps.isDisabled) {\n\t\t\t\t\tonSelect &&\n\t\t\t\t\t\tonSelect(focusedIndex, { props: focusedOptionProps, event });\n\t\t\t\t} else if (_.isNull(focusedIndex)) {\n\t\t\t\t\tonSelect && onSelect(null, { props: _.first(nullOptions), event });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.keyCode === KEYCODE.Escape) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tonCollapse && onCollapse({ props, event });\n\t\t\t}\n\t\t\tif (event.keyCode === KEYCODE.ArrowUp) {\n\t\t\t\tif (_.isNumber(focusedIndex) || _.isNull(focusedIndex)) {\n\t\t\t\t\tif (focusedIndex === 0) {\n\t\t\t\t\t\tif (!_.isEmpty(nullOptions)) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tonFocusOption && onFocusOption(null, { props, event });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!_.isNil(focusedIndex) && focusedIndex > 0) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tonFocusOption &&\n\t\t\t\t\t\t\tonFocusOption(\n\t\t\t\t\t\t\t\t_.findLastIndex(\n\t\t\t\t\t\t\t\t\tflattenedOptionsData,\n\t\t\t\t\t\t\t\t\tisOptionVisible,\n\t\t\t\t\t\t\t\t\tfocusedIndex - 1\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{ props, event }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tfocusedIndex &&\n\t\t\t\t\t\tonFocusOption &&\n\t\t\t\t\t\tonFocusOption(\n\t\t\t\t\t\t\t_.findLastIndex(\n\t\t\t\t\t\t\t\tflattenedOptionsData,\n\t\t\t\t\t\t\t\tisOptionVisible,\n\t\t\t\t\t\t\t\tfocusedIndex - 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t{ props, event }\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.keyCode === KEYCODE.ArrowDown) {\n\t\t\t\tif (_.isNumber(focusedIndex)) {\n\t\t\t\t\tif (focusedIndex < _.size(flattenedOptionsData) - 1) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tonFocusOption &&\n\t\t\t\t\t\t\tonFocusOption(\n\t\t\t\t\t\t\t\t_.findIndex(\n\t\t\t\t\t\t\t\t\tflattenedOptionsData,\n\t\t\t\t\t\t\t\t\tisOptionVisible,\n\t\t\t\t\t\t\t\t\tfocusedIndex + 1\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{ props, event }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tonFocusOption &&\n\t\t\t\t\t\tonFocusOption(\n\t\t\t\t\t\t\t_.findIndex(\n\t\t\t\t\t\t\t\tflattenedOptionsData,\n\t\t\t\t\t\t\t\tisOptionVisible,\n\t\t\t\t\t\t\t\t!_.isNil(focusedIndex) ? focusedIndex : undefined\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t{ props, event }\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (event.keyCode === KEYCODE.ArrowDown) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tonExpand && onExpand({ props, event });\n\t\t\t}\n\t\t}\n\t};\n\n\thandleClick = (event: React.MouseEvent) => {\n\t\tconst {\n\t\t\tprops,\n\t\t\tprops: { isExpanded, onExpand, onCollapse },\n\t\t} = this;\n\n\t\tif (isExpanded) {\n\t\t\tonCollapse && onCollapse({ props, event });\n\t\t} else {\n\t\t\tonExpand && onExpand({ props, event });\n\t\t}\n\t};\n\n\thandleMouseFocusOption = (\n\t\toptionIndex: number | null,\n\t\toptionProps: IDropMenuOptionProps,\n\t\tevent: React.MouseEvent\n\t) => {\n\t\tconst { focusedIndex, onFocusOption } = this.props;\n\n\t\tthis.setState({\n\t\t\tisMouseTriggered: true,\n\t\t});\n\n\t\tif (!optionProps.isDisabled && focusedIndex !== optionIndex) {\n\t\t\tonFocusOption && onFocusOption(optionIndex, { props: this.props, event });\n\t\t}\n\t};\n\n\thandleSelectOption = (\n\t\toptionIndex: number | null,\n\t\toptionProps: IDropMenuOptionProps,\n\t\tevent: React.KeyboardEvent | React.MouseEvent\n\t) => {\n\t\tconst { onSelect } = this.props;\n\n\t\tif (!optionProps.isDisabled) {\n\t\t\tonSelect && onSelect(optionIndex, { props: optionProps, event });\n\t\t}\n\t};\n\n\trenderOption = (\n\t\toptionProps: IDropMenuOptionProps,\n\t\toptionIndex: number | null,\n\t\tisGrouped = false\n\t) => {\n\t\tconst { selectedIndices, focusedIndex } = this.props;\n\n\t\tconst { isMouseTriggered } = this.state;\n\n\t\tconst { isDisabled, isHidden, isWrapped } = optionProps;\n\n\t\tconst isFocused = optionIndex === focusedIndex;\n\t\tconst isSelected = _.includes(selectedIndices, optionIndex);\n\n\t\treturn isHidden ? null : (\n\t\t\t<div\n\t\t\t\tkey={'DropMenuOption' + optionIndex}\n\t\t\t\t{..._.omit(optionProps, [\n\t\t\t\t\t'isDisabled',\n\t\t\t\t\t'isHidden',\n\t\t\t\t\t'isWrapped',\n\t\t\t\t\t'Selected',\n\t\t\t\t\t'Selection',\n\t\t\t\t\t'initialState',\n\t\t\t\t\t'callbackId',\n\t\t\t\t])}\n\t\t\t\tonClick={(event) =>\n\t\t\t\t\tthis.handleSelectOption(optionIndex, optionProps, event)\n\t\t\t\t}\n\t\t\t\tonMouseMove={(event) =>\n\t\t\t\t\tthis.handleMouseFocusOption(optionIndex, optionProps, event)\n\t\t\t\t}\n\t\t\t\tclassName={cx(\n\t\t\t\t\t'&-Option',\n\t\t\t\t\t{\n\t\t\t\t\t\t'&-Option-is-grouped': isGrouped,\n\t\t\t\t\t\t'&-Option-is-focused': isFocused,\n\t\t\t\t\t\t'&-Option-is-selected': isSelected,\n\t\t\t\t\t\t'&-Option-is-disabled': isDisabled,\n\t\t\t\t\t\t'&-Option-is-null': _.isNull(optionIndex),\n\t\t\t\t\t\t'&-Option-is-wrapped': isWrapped,\n\t\t\t\t\t},\n\t\t\t\t\toptionProps.className\n\t\t\t\t)}\n\t\t\t\tref={(optionHTMLElement) => {\n\t\t\t\t\tif (isFocused && !isMouseTriggered) {\n\t\t\t\t\t\tscrollParentTo(\n\t\t\t\t\t\t\toptionHTMLElement,\n\t\t\t\t\t\t\tthis._header && this._header.current\n\t\t\t\t\t\t\t\t? this._header.current.offsetHeight\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t};\n\n\tUNSAFE_componentWillReceiveProps = (\n\t\tnextProps: IDropMenuPropsWithPassThroughs\n\t) => {\n\t\t// only preprocess options data when it changes (via new props) - better performance than doing this each render\n\t\tthis.setState(this.getPreprocessedOptionData(nextProps));\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tstyle,\n\t\t\tisDisabled,\n\t\t\tisExpanded,\n\t\t\tdirection,\n\t\t\talignment,\n\t\t\tonCollapse,\n\t\t\tflyOutStyle,\n\t\t\toptionContainerStyle,\n\t\t\t...passThroughs\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\toptionGroups,\n\t\t\tfixedOptionData,\n\t\t\tungroupedOptionData,\n\t\t\toptionGroupDataLookup,\n\t\t\tnullOptions,\n\t\t\tportalId,\n\t\t} = this.state;\n\n\t\tconst contextMenuProps = _.get(\n\t\t\tgetFirst(this.props, DropMenu.ContextMenu),\n\t\t\t'props',\n\t\t\t{}\n\t\t);\n\t\tconst controlProps = _.get(\n\t\t\tgetFirst(this.props, DropMenu.Control),\n\t\t\t'props',\n\t\t\t{}\n\t\t);\n\t\tconst headerProps = _.get(\n\t\t\tgetFirst(this.props, DropMenu.Header),\n\t\t\t'props',\n\t\t\t{}\n\t\t);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={cx(\n\t\t\t\t\t'&',\n\t\t\t\t\t'&-base',\n\t\t\t\t\t{\n\t\t\t\t\t\t'&-is-expanded': isExpanded,\n\t\t\t\t\t\t'&-direction-down': isExpanded && direction === 'down',\n\t\t\t\t\t\t'&-direction-up': isExpanded && direction === 'up',\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tstyle={style}\n\t\t\t\t{...(_.omit(passThroughs, nonPassThroughs) as any)}\n\t\t\t>\n\t\t\t\t<ContextMenu\n\t\t\t\t\t{...contextMenuProps}\n\t\t\t\t\tportalId={portalId}\n\t\t\t\t\tisExpanded={isExpanded}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\talignment={alignment}\n\t\t\t\t\tonClickOut={onCollapse}\n\t\t\t\t>\n\t\t\t\t\t<ContextMenu.Target>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t{...(!isDisabled\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\ttabIndex: 0,\n\t\t\t\t\t\t\t\t\t\tonClick: this.handleClick,\n\t\t\t\t\t\t\t\t\t\tonKeyDown: this.handleKeydown,\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: null)}\n\t\t\t\t\t\t\t{...controlProps}\n\t\t\t\t\t\t\tclassName={cx('&-Control', _.get(controlProps, 'className'))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ContextMenu.Target>\n\t\t\t\t\t<ContextMenu.FlyOut\n\t\t\t\t\t\tclassName={cx('&', className)}\n\t\t\t\t\t\tstyle={flyOutStyle}\n\t\t\t\t\t>\n\t\t\t\t\t\t{!_.isEmpty(headerProps) && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t{...headerProps}\n\t\t\t\t\t\t\t\tclassName={cx('&-Header', headerProps.className)}\n\t\t\t\t\t\t\t\tonKeyDown={this.handleKeydown}\n\t\t\t\t\t\t\t\tref={this._header}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={cx('&-option-container')}\n\t\t\t\t\t\t\tstyle={_.assign({}, flyOutStyle, optionContainerStyle)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{_.map(nullOptions, (optionProps) =>\n\t\t\t\t\t\t\t\tthis.renderOption(optionProps, null)\n\t\t\t\t\t\t\t).concat(\n\t\t\t\t\t\t\t\t_.isEmpty(nullOptions)\n\t\t\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tkey={'OptionGroup-divider-NullOption'}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={cx('&-OptionGroup-divider')}\n\t\t\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// fixed options go first\n\t\t\t\t\t\t\t\t_.map(fixedOptionData, ({ optionProps, optionIndex }) =>\n\t\t\t\t\t\t\t\t\tthis.renderOption(optionProps, optionIndex)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{joinArray(\n\t\t\t\t\t\t\t\t// for each option group,\n\t\t\t\t\t\t\t\t_.map(\n\t\t\t\t\t\t\t\t\toptionGroups,\n\t\t\t\t\t\t\t\t\t(optionGroupProps, optionGroupIndex): React.ReactNode => {\n\t\t\t\t\t\t\t\t\t\tconst groupedOptions =\n\t\t\t\t\t\t\t\t\t\t\toptionGroupDataLookup[optionGroupIndex];\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\toptionGroupProps.isHidden ||\n\t\t\t\t\t\t\t\t\t\t\t_.every(groupedOptions, {\n\t\t\t\t\t\t\t\t\t\t\t\toptionProps: { isHidden: true },\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst labelElements = rejectTypes(\n\t\t\t\t\t\t\t\t\t\t\toptionGroupProps.children,\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tDropMenu.Control,\n\t\t\t\t\t\t\t\t\t\t\t\tDropMenu.OptionGroup,\n\t\t\t\t\t\t\t\t\t\t\t\tDropMenu.Option,\n\t\t\t\t\t\t\t\t\t\t\t\tDropMenu.NullOption,\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t// render label if there is one\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t_.isEmpty(labelElements)\n\t\t\t\t\t\t\t\t\t\t\t\t? ([] as React.ReactNode[])\n\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{..._.omit(optionGroupProps, [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'isHidden',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'initialState',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'callbackId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={'OptionGroup-label' + optionGroupIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'&-label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionGroupProps.className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{labelElements}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// render the options in the group\n\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t).concat(\n\t\t\t\t\t\t\t\t\t\t\t_.map(\n\t\t\t\t\t\t\t\t\t\t\t\toptionGroupDataLookup[optionGroupIndex],\n\t\t\t\t\t\t\t\t\t\t\t\t({ optionProps, optionIndex }) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.renderOption(optionProps, optionIndex, true)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t// append all ungrouped options as another unlabeled group\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t).concat(\n\t\t\t\t\t\t\t\t\t_.isEmpty(ungroupedOptionData)\n\t\t\t\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t_.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\tungroupedOptionData,\n\t\t\t\t\t\t\t\t\t\t\t\t\t({ optionProps, optionIndex }) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.renderOption(optionProps, optionIndex)\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t(element, index) =>\n\t\t\t\t\t\t\t\t\telement && (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tkey={`OptionGroup-divider-${index}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={cx('&-OptionGroup-divider')}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) // separate each group with divider\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ContextMenu.FlyOut>\n\t\t\t\t</ContextMenu>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default buildModernHybridComponent<\n\tIDropMenuPropsWithPassThroughs,\n\tIDropMenuState,\n\ttypeof DropMenu\n>(DropMenu as any, { reducers });\nexport { DropMenu as DropMenuDumb, NullOption, OptionGroup };\n"]},"metadata":{},"sourceType":"module"}