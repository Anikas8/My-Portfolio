{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nconst cx = lucidClassNames.bind('&-Badge');\nconst badgePropTypes = {\n  /** class names that are appended to the defaults */\n  className: PropTypes.string,\n  /** any valid React children */\n  children: PropTypes.node,\n  /** Style variations for the `Badge` */\n  kind: PropTypes.oneOf(['default', 'primary', 'success', 'danger', 'warning', 'info', 'dark']),\n  /** Fill style variations for the `Badge` */\n  type: PropTypes.oneOf(['filled', 'stroke'])\n};\nexport var Kind;\n(function (Kind) {\n  Kind[\"default\"] = \"default\";\n  Kind[\"primary\"] = \"primary\";\n  Kind[\"success\"] = \"success\";\n  Kind[\"danger\"] = \"danger\";\n  Kind[\"warning\"] = \"warning\";\n  Kind[\"info\"] = \"info\";\n  Kind[\"dark\"] = \"dark\";\n})(Kind || (Kind = {}));\nexport var Type;\n(function (Type) {\n  Type[\"filled\"] = \"filled\";\n  Type[\"stroke\"] = \"stroke\";\n})(Type || (Type = {}));\nconst defaultProps = {\n  kind: Kind.default,\n  type: Type.filled\n};\nexport const Badge = props => {\n  const {\n    className,\n    kind,\n    type,\n    children,\n    ...passThroughs\n  } = props;\n  return React.createElement(\"span\", {\n    className: cx('&', `&-${kind}`, `&-${type}`, className),\n    ...passThroughs\n  }, children);\n};\nBadge.defaultProps = defaultProps;\nBadge.displayName = 'Badge';\nBadge.peek = {\n  description: `A quick utility component to create a badge around an element.`,\n  categories: ['visual design', 'icons']\n};\nBadge.propTypes = badgePropTypes;\nexport default Badge;","map":{"version":3,"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,eAAe,QAAQ,0BAA0B;AAG1D,MAAMC,EAAE,GAAGD,eAAe,CAACE,IAAI,CAAC,SAAS,CAAC;AAE1C,MAAMC,cAAc,GAAG;EACtB;EACAC,SAAS,EAAEL,SAAS,CAACM,MAAM;EAE3B;EACAC,QAAQ,EAAEP,SAAS,CAACQ,IAAI;EAExB;EACAC,IAAI,EAAET,SAAS,CAACU,KAAK,CAAC,CACrB,SAAS,EACT,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,MAAM,EACN,MAAM,CACN,CAAC;EAEF;EACAC,IAAI,EAAEX,SAAS,CAACU,KAAK,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC;CAC1C;AAED,WAAYE,IAQX;AARD,WAAYA,IAAI;EACfA,2BAAmB;EACnBA,2BAAmB;EACnBA,2BAAmB;EACnBA,yBAAiB;EACjBA,2BAAmB;EACnBA,qBAAa;EACbA,qBAAa;AACd,CAAC,EARWA,IAAI,KAAJA,IAAI;AAUhB,WAAYC,IAGX;AAHD,WAAYA,IAAI;EACfA,yBAAiB;EACjBA,yBAAiB;AAClB,CAAC,EAHWA,IAAI,KAAJA,IAAI;AAgBhB,MAAMC,YAAY,GAAG;EACpBL,IAAI,EAAEG,IAAI,CAACG,OAAO;EAClBJ,IAAI,EAAEE,IAAI,CAACG;CACX;AAED,OAAO,MAAMC,KAAK,GAAIC,KAAkB,IAAwB;EAC/D,MAAM;IAAEb,SAAS;IAAEI,IAAI;IAAEE,IAAI;IAAEJ,QAAQ;IAAE,GAAGY;EAAY,CAAE,GAAGD,KAAK;EAElE,OACCnB;IACCM,SAAS,EAAEH,EAAE,CAAC,GAAG,EAAE,KAAKO,IAAI,EAAE,EAAE,KAAKE,IAAI,EAAE,EAAEN,SAAS,CAAC;IAAA,GAClDc;EAAoB,GAExBZ,QAAQ,CACH;AAET,CAAC;AAEDU,KAAK,CAACH,YAAY,GAAGA,YAAY;AACjCG,KAAK,CAACG,WAAW,GAAG,OAAO;AAC3BH,KAAK,CAACI,IAAI,GAAG;EACZC,WAAW,EAAE,gEAAgE;EAC7EC,UAAU,EAAE,CAAC,eAAe,EAAE,OAAO;CACrC;AACDN,KAAK,CAACO,SAAS,GAAGpB,cAAc;AAEhC,eAAea,KAAK","names":["React","PropTypes","lucidClassNames","cx","bind","badgePropTypes","className","string","children","node","kind","oneOf","type","Kind","Type","defaultProps","default","filled","Badge","props","passThroughs","displayName","peek","description","categories","propTypes"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/Badge/Badge.tsx"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { StandardProps } from '../../util/component-types';\n\nconst cx = lucidClassNames.bind('&-Badge');\n\nconst badgePropTypes = {\n\t/** class names that are appended to the defaults */\n\tclassName: PropTypes.string,\n\n\t/** any valid React children */\n\tchildren: PropTypes.node,\n\n\t/** Style variations for the `Badge` */\n\tkind: PropTypes.oneOf([\n\t\t'default',\n\t\t'primary',\n\t\t'success',\n\t\t'danger',\n\t\t'warning',\n\t\t'info',\n\t\t'dark',\n\t]),\n\n\t/** Fill style variations for the `Badge` */\n\ttype: PropTypes.oneOf(['filled', 'stroke']),\n};\n\nexport enum Kind {\n\tdefault = 'default',\n\tprimary = 'primary',\n\tsuccess = 'success',\n\tdanger = 'danger',\n\twarning = 'warning',\n\tinfo = 'info',\n\tdark = 'dark',\n}\n\nexport enum Type {\n\tfilled = 'filled',\n\tstroke = 'stroke',\n}\n\nexport interface IBadgeProps\n\textends StandardProps,\n\t\tReact.DetailedHTMLProps<\n\t\t\tReact.HTMLAttributes<HTMLSpanElement>,\n\t\t\tHTMLSpanElement\n\t\t> {\n\tkind: keyof typeof Kind;\n\t/** Fill variations for the `Badge` */\n\ttype: keyof typeof Type;\n}\n\nconst defaultProps = {\n\tkind: Kind.default,\n\ttype: Type.filled,\n};\n\nexport const Badge = (props: IBadgeProps): React.ReactElement => {\n\tconst { className, kind, type, children, ...passThroughs } = props;\n\n\treturn (\n\t\t<span\n\t\t\tclassName={cx('&', `&-${kind}`, `&-${type}`, className)}\n\t\t\t{...(passThroughs as any)}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n\nBadge.defaultProps = defaultProps;\nBadge.displayName = 'Badge';\nBadge.peek = {\n\tdescription: `A quick utility component to create a badge around an element.`,\n\tcategories: ['visual design', 'icons'],\n};\nBadge.propTypes = badgePropTypes;\n\nexport default Badge;\n"]},"metadata":{},"sourceType":"module"}