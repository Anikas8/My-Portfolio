{"ast":null,"code":"/*eslint no-console: 0*/\nimport _ from 'lodash';\nexport const isDevMode = function isReactInDev() {\n  // This property gets injected via Webpack.\n  return process.env.NODE_ENV !== 'production'; // eslint-disable-line no-undef\n}();\n\nexport const isNode = typeof process === 'object' && process.title === 'node';\nexport const logger = function () {\n  return checkIsDev() ? {\n    log,\n    logOnce,\n    warn,\n    warnOnce,\n    error,\n    errorOnce,\n    resetOnce\n  } : {\n    log: _.noop,\n    logOnce: _.noop,\n    warn: _.noop,\n    warnOnce: _.noop,\n    error: _.noop,\n    errorOnce: _.noop,\n    resetOnce: _.noop\n  };\n}();\nconst onceMap = {};\nfunction once(key, fn) {\n  if (!_.has(onceMap, key)) {\n    _.set(onceMap, key, true);\n    fn();\n  }\n}\nfunction resetOnce(key) {\n  _.unset(onceMap, key);\n}\nexport function checkIsDev() {\n  return isDevMode && typeof window !== 'undefined' && typeof console !== 'undefined';\n}\nfunction log() {\n  console.log(...arguments);\n  try {\n    // --- Welcome to debugging Lucid ---\n    // This error was thrown as a convenience so that you can use this\n    // stack to find the callsite that caused this warning to fire.\n    throw new Error(arguments.length <= 0 ? undefined : arguments[0]);\n  } catch (x) {\n    /* */\n  }\n}\nfunction logOnce(key) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  once(key, () => log(...args));\n}\nfunction warn() {\n  console.warn(...arguments);\n  try {\n    // --- Welcome to debugging Lucid ---\n    // This error was thrown as a convenience so that you can use this\n    // stack to find the callsite that caused this warning to fire.\n    throw new Error(arguments.length <= 0 ? undefined : arguments[0]);\n  } catch (x) {\n    /* */\n  }\n}\nfunction warnOnce(key) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  once(key, () => warn(...args));\n}\nfunction error() {\n  console.error(...arguments);\n  try {\n    // --- Welcome to debugging Lucid ---\n    // This error was thrown as a convenience so that you can use this\n    // stack to find the callsite that caused this warning to fire.\n    throw new Error(arguments.length <= 0 ? undefined : arguments[0]);\n  } catch (x) {\n    /* */\n  }\n}\nfunction errorOnce(key) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  once(key, () => error(...args));\n}","map":{"version":3,"mappings":"AAAA;AACA,OAAOA,CAAC,MAAM,QAAQ;AAEtB,OAAO,MAAMC,SAAS,GAAI,SAASC,YAAY;EAC9C;EACA,OAAOC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,CAAC,CAAC;AAC/C,CAAC,EAAG;;AAEJ,OAAO,MAAMC,MAAM,GAAG,OAAOH,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACI,KAAK,KAAK,MAAM;AAE7E,OAAO,MAAMC,MAAM,GAAI;EACtB,OAAOC,UAAU,EAAE,GAChB;IACAC,GAAG;IACHC,OAAO;IACPC,IAAI;IACJC,QAAQ;IACRC,KAAK;IACLC,SAAS;IACTC;GACC,GACD;IACAN,GAAG,EAAEV,CAAC,CAACiB,IAAI;IACXN,OAAO,EAAEX,CAAC,CAACiB,IAAI;IACfL,IAAI,EAAEZ,CAAC,CAACiB,IAAI;IACZJ,QAAQ,EAAEb,CAAC,CAACiB,IAAI;IAChBH,KAAK,EAAEd,CAAC,CAACiB,IAAI;IACbF,SAAS,EAAEf,CAAC,CAACiB,IAAI;IACjBD,SAAS,EAAEhB,CAAC,CAACiB;GACZ;AACL,CAAC,EAAG;AAEJ,MAAMC,OAAO,GAAG,EAAE;AAElB,SAASC,IAAI,CAACC,GAAsB,EAAEC,EAAc;EACnD,IAAI,CAACrB,CAAC,CAACsB,GAAG,CAACJ,OAAO,EAAEE,GAAG,CAAC,EAAE;IACzBpB,CAAC,CAACuB,GAAG,CAACL,OAAO,EAAEE,GAAG,EAAE,IAAI,CAAC;IACzBC,EAAE,EAAE;;AAEN;AAEA,SAASL,SAAS,CAACI,GAAsB;EACxCpB,CAAC,CAACwB,KAAK,CAACN,OAAO,EAAEE,GAAG,CAAC;AACtB;AAEA,OAAM,SAAUX,UAAU;EACzB,OACCR,SAAS,IAAI,OAAOwB,MAAM,KAAK,WAAW,IAAI,OAAOC,OAAO,KAAK,WAAW;AAE9E;AAEA,SAAShB,GAAG,GAAe;EAC1BgB,OAAO,CAAChB,GAAG,CAAC,YAAO,CAAC;EAEpB,IAAI;IACH;IACA;IACA;IACA,MAAM,IAAIiB,KAAK,kDAAS;GACxB,CAAC,OAAOC,CAAC,EAAE;IACX;;AAEF;AAEA,SAASjB,OAAO,CAACS,GAAsB,EAAgB;EAAA,kCAAXS,IAAW;IAAXA,IAAW;EAAA;EACtDV,IAAI,CAACC,GAAG,EAAE,MAAMV,GAAG,CAAC,GAAGmB,IAAI,CAAC,CAAC;AAC9B;AAEA,SAASjB,IAAI,GAAe;EAC3Bc,OAAO,CAACd,IAAI,CAAC,YAAO,CAAC;EAErB,IAAI;IACH;IACA;IACA;IACA,MAAM,IAAIe,KAAK,kDAAS;GACxB,CAAC,OAAOC,CAAC,EAAE;IACX;;AAEF;AAEA,SAASf,QAAQ,CAACO,GAAsB,EAAgB;EAAA,mCAAXS,IAAW;IAAXA,IAAW;EAAA;EACvDV,IAAI,CAACC,GAAG,EAAE,MAAMR,IAAI,CAAC,GAAGiB,IAAI,CAAC,CAAC;AAC/B;AAEA,SAASf,KAAK,GAAe;EAC5BY,OAAO,CAACZ,KAAK,CAAC,YAAO,CAAC;EAEtB,IAAI;IACH;IACA;IACA;IACA,MAAM,IAAIa,KAAK,kDAAS;GACxB,CAAC,OAAOC,CAAC,EAAE;IACX;;AAEF;AAEA,SAASb,SAAS,CAACK,GAAsB,EAAgB;EAAA,mCAAXS,IAAW;IAAXA,IAAW;EAAA;EACxDV,IAAI,CAACC,GAAG,EAAE,MAAMN,KAAK,CAAC,GAAGe,IAAI,CAAC,CAAC;AAChC","names":["_","isDevMode","isReactInDev","process","env","NODE_ENV","isNode","title","logger","checkIsDev","log","logOnce","warn","warnOnce","error","errorOnce","resetOnce","noop","onceMap","once","key","fn","has","set","unset","window","console","Error","x","args"],"sources":["/home/skanda/node_modules/lucid-ui/src/util/logger.ts"],"sourcesContent":["/*eslint no-console: 0*/\nimport _ from 'lodash';\n\nexport const isDevMode = (function isReactInDev() {\n\t// This property gets injected via Webpack.\n\treturn process.env.NODE_ENV !== 'production'; // eslint-disable-line no-undef\n})();\n\nexport const isNode = typeof process === 'object' && process.title === 'node';\n\nexport const logger = (function () {\n\treturn checkIsDev()\n\t\t? {\n\t\t\t\tlog,\n\t\t\t\tlogOnce,\n\t\t\t\twarn,\n\t\t\t\twarnOnce,\n\t\t\t\terror,\n\t\t\t\terrorOnce,\n\t\t\t\tresetOnce,\n\t\t  }\n\t\t: {\n\t\t\t\tlog: _.noop,\n\t\t\t\tlogOnce: _.noop,\n\t\t\t\twarn: _.noop,\n\t\t\t\twarnOnce: _.noop,\n\t\t\t\terror: _.noop,\n\t\t\t\terrorOnce: _.noop,\n\t\t\t\tresetOnce: _.noop,\n\t\t  };\n})();\n\nconst onceMap = {};\n\nfunction once(key: string | string[], fn: () => void) {\n\tif (!_.has(onceMap, key)) {\n\t\t_.set(onceMap, key, true);\n\t\tfn();\n\t}\n}\n\nfunction resetOnce(key: string | string[]) {\n\t_.unset(onceMap, key);\n}\n\nexport function checkIsDev() {\n\treturn (\n\t\tisDevMode && typeof window !== 'undefined' && typeof console !== 'undefined'\n\t);\n}\n\nfunction log(...args: any[]) {\n\tconsole.log(...args);\n\n\ttry {\n\t\t// --- Welcome to debugging Lucid ---\n\t\t// This error was thrown as a convenience so that you can use this\n\t\t// stack to find the callsite that caused this warning to fire.\n\t\tthrow new Error(args[0]);\n\t} catch (x) {\n\t\t/* */\n\t}\n}\n\nfunction logOnce(key: string | string[], ...args: any[]) {\n\tonce(key, () => log(...args));\n}\n\nfunction warn(...args: any[]) {\n\tconsole.warn(...args);\n\n\ttry {\n\t\t// --- Welcome to debugging Lucid ---\n\t\t// This error was thrown as a convenience so that you can use this\n\t\t// stack to find the callsite that caused this warning to fire.\n\t\tthrow new Error(args[0]);\n\t} catch (x) {\n\t\t/* */\n\t}\n}\n\nfunction warnOnce(key: string | string[], ...args: any[]) {\n\tonce(key, () => warn(...args));\n}\n\nfunction error(...args: any[]) {\n\tconsole.error(...args);\n\n\ttry {\n\t\t// --- Welcome to debugging Lucid ---\n\t\t// This error was thrown as a convenience so that you can use this\n\t\t// stack to find the callsite that caused this warning to fire.\n\t\tthrow new Error(args[0]);\n\t} catch (x) {\n\t\t/* */\n\t}\n}\n\nfunction errorOnce(key: string | string[], ...args: any[]) {\n\tonce(key, () => error(...args));\n}\n"]},"metadata":{},"sourceType":"module"}