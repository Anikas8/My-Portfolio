{"ast":null,"code":"import React from 'react';\nimport { cxBackgroundGray } from './LoadingSkeletonsSvgUtil';\nimport LoadingSkeleton from './LoadingSkeleton';\nexport const CardSkeleton = props => {\n  const {\n    width = 130,\n    height = 30,\n    className\n  } = props;\n  return React.createElement(\"div\", {\n    \"data-test-id\": 'loadingSkeleton-CardSkeleton',\n    className: cxBackgroundGray('&', className)\n  }, React.createElement(\"svg\", {\n    \"data-test-id\": 'loadingSkeleton-CardSkeleton-svg',\n    width: width,\n    height: height,\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React.createElement(\"g\", {\n    id: 'CardSkeleton-Details',\n    stroke: 'none',\n    strokeWidth: '1',\n    fill: 'none',\n    fillRule: 'evenodd'\n  }, React.createElement(\"g\", {\n    id: 'CardSkeleton-Card',\n    className: cxBackgroundGray('&', className),\n    transform: 'translate(-20.000000, -78.000000)'\n  }, React.createElement(\"path\", {\n    d: 'M120,95 L120,105 L20,105 L20,95 L120,95 Z M140,78 L140,88 L20,88 L20,78 L140,78 Z',\n    id: 'CardSkeleton-Combined-Shape'\n  })))));\n};\nconst CardLoadingSkeleton = props => {\n  return React.createElement(LoadingSkeleton, {\n    \"data-test-id\": 'loadingSkeleton-CardLoadingSkeleton',\n    Skeleton: CardSkeleton,\n    ...props\n  });\n};\nCardLoadingSkeleton.displayName = 'CardLoadingSkeleton';\nCardLoadingSkeleton.peek = {\n  description: `A loading indicator wrapper with optional overlay.`,\n  notes: {\n    overview: `\n\t\t\tA visual indication that a section or component of the interface is loading. Designed to indicate loading data\n\t\t`,\n    intendedUse: `\n\t\t\t- Use in places where data takes time to load. CardLoadingSkeleton lets users know that the information they expect to see will appear shortly.\t\t\n\t\t`,\n    technicalRecommendations: `\n\t\t\tIf a page is displaying a lot of data coming from multiple sources, try as best as possible to load the \n\t\t\tindividual parts of the UI, so as not to disrupt the user and block them from interacting with the entire page until all data is loaded.\n\t\t`\n  },\n  categories: ['Loading Indicator']\n};\nexport default CardLoadingSkeleton;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAOC,eAGN,MAAM,mBAAmB;AAE1B,OAAO,MAAMC,YAAY,GACxBC,KAAwB,IACkB;EAC1C,MAAM;IAAEC,KAAK,GAAG,GAAG;IAAEC,MAAM,GAAG,EAAE;IAAEC;EAAS,CAAE,GAAGH,KAAK;EAErD,OACCJ;IAAA,gBACc,8BAA8B;IAC3CO,SAAS,EAAEN,gBAAgB,CAAC,GAAG,EAAEM,SAAS;EAAC,GAE3CP;IAAA,gBACc,kCAAkC;IAC/CK,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACdE,KAAK,EAAC;EAA4B,GAElCR;IACCS,EAAE,EAAC,sBAAsB;IACzBC,MAAM,EAAC,MAAM;IACbC,WAAW,EAAC,GAAG;IACfC,IAAI,EAAC,MAAM;IACXC,QAAQ,EAAC;EAAS,GAElBb;IACCS,EAAE,EAAC,mBAAmB;IACtBF,SAAS,EAAEN,gBAAgB,CAAC,GAAG,EAAEM,SAAS,CAAC;IAC3CO,SAAS,EAAC;EAAmC,GAE7Cd;IACCe,CAAC,EAAC,mFAAmF;IACrFN,EAAE,EAAC;EAA6B,EAC/B,CACC,CACD,CACC,CACD;AAER,CAAC;AAED,MAAMO,mBAAmB,GACxBZ,KAA4B,IACL;EACvB,OACCJ,oBAACE,eAAe;IAAA,gBACF,qCAAqC;IAClDe,QAAQ,EAAEd,YAAY;IAAA,GAClBC;EAAK,EACR;AAEJ,CAAC;AAEDY,mBAAmB,CAACE,WAAW,GAAG,qBAAqB;AACvDF,mBAAmB,CAACG,IAAI,GAAG;EAC1BC,WAAW,EAAE,oDAAoD;EACjEC,KAAK,EAAE;IACNC,QAAQ,EAAE;;GAET;IACDC,WAAW,EAAE;;GAEZ;IACDC,wBAAwB,EAAE;;;;GAI1B;EACDC,UAAU,EAAE,CAAC,mBAAmB;CAChC;AAED,eAAeT,mBAAmB","names":["React","cxBackgroundGray","LoadingSkeleton","CardSkeleton","props","width","height","className","xmlns","id","stroke","strokeWidth","fill","fillRule","transform","d","CardLoadingSkeleton","Skeleton","displayName","peek","description","notes","overview","intendedUse","technicalRecommendations","categories"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/LoadingSkeletons/CardLoadingSkeleton.tsx"],"sourcesContent":["import React from 'react';\nimport { cxBackgroundGray } from './LoadingSkeletonsSvgUtil';\nimport LoadingSkeleton, {\n\tILoadingSkeletonProps,\n\tIStandardSkeleton,\n} from './LoadingSkeleton';\n\nexport const CardSkeleton = (\n\tprops: IStandardSkeleton\n): React.ReactElement<IStandardSkeleton> => {\n\tconst { width = 130, height = 30, className } = props;\n\n\treturn (\n\t\t<div\n\t\t\tdata-test-id='loadingSkeleton-CardSkeleton'\n\t\t\tclassName={cxBackgroundGray('&', className)}\n\t\t>\n\t\t\t<svg\n\t\t\t\tdata-test-id='loadingSkeleton-CardSkeleton-svg'\n\t\t\t\twidth={width}\n\t\t\t\theight={height}\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t>\n\t\t\t\t<g\n\t\t\t\t\tid='CardSkeleton-Details'\n\t\t\t\t\tstroke='none'\n\t\t\t\t\tstrokeWidth='1'\n\t\t\t\t\tfill='none'\n\t\t\t\t\tfillRule='evenodd'\n\t\t\t\t>\n\t\t\t\t\t<g\n\t\t\t\t\t\tid='CardSkeleton-Card'\n\t\t\t\t\t\tclassName={cxBackgroundGray('&', className)}\n\t\t\t\t\t\ttransform='translate(-20.000000, -78.000000)'\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td='M120,95 L120,105 L20,105 L20,95 L120,95 Z M140,78 L140,88 L20,88 L20,78 L140,78 Z'\n\t\t\t\t\t\t\tid='CardSkeleton-Combined-Shape'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t</div>\n\t);\n};\n\nconst CardLoadingSkeleton = (\n\tprops: ILoadingSkeletonProps\n): React.ReactElement => {\n\treturn (\n\t\t<LoadingSkeleton\n\t\t\tdata-test-id='loadingSkeleton-CardLoadingSkeleton'\n\t\t\tSkeleton={CardSkeleton}\n\t\t\t{...props}\n\t\t/>\n\t);\n};\n\nCardLoadingSkeleton.displayName = 'CardLoadingSkeleton';\nCardLoadingSkeleton.peek = {\n\tdescription: `A loading indicator wrapper with optional overlay.`,\n\tnotes: {\n\t\toverview: `\n\t\t\tA visual indication that a section or component of the interface is loading. Designed to indicate loading data\n\t\t`,\n\t\tintendedUse: `\n\t\t\t- Use in places where data takes time to load. CardLoadingSkeleton lets users know that the information they expect to see will appear shortly.\t\t\n\t\t`,\n\t\ttechnicalRecommendations: `\n\t\t\tIf a page is displaying a lot of data coming from multiple sources, try as best as possible to load the \n\t\t\tindividual parts of the UI, so as not to disrupt the user and block them from interacting with the entire page until all data is loaded.\n\t\t`,\n\t},\n\tcategories: ['Loading Indicator'],\n};\n\nexport default CardLoadingSkeleton;\n"]},"metadata":{},"sourceType":"module"}