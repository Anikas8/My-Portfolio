{"ast":null,"code":"import _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { getAbsoluteBoundingClientRect } from '../../util/dom-helpers';\nconst cx = lucidClassNames.bind('&-StickySection');\nconst {\n  node,\n  number,\n  object,\n  string\n} = PropTypes;\nclass StickySection extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.scrollContainer = React.createRef();\n    this.stickySection = React.createRef();\n    this.stickyFrame = React.createRef();\n    this.state = {\n      isAboveFold: false,\n      containerRect: {\n        bottom: 0,\n        height: 0,\n        left: 0,\n        right: 0,\n        top: 0,\n        width: 0,\n        frameLeft: 0,\n        scrollWidth: 0\n      }\n    };\n    this.handleScroll = () => {\n      const {\n        lowerBound,\n        topOffset = 0\n      } = this.props;\n      const {\n        isAboveFold,\n        containerRect\n      } = this.state;\n      const nextContainerRect = this.getContainerRect();\n      if (window.pageYOffset + topOffset >= nextContainerRect.top) {\n        if (!isAboveFold) {\n          this.setState({\n            isAboveFold: true\n          });\n        }\n      } else {\n        if (isAboveFold) {\n          this.setState({\n            isAboveFold: false\n          });\n        }\n      }\n      if (_.isNumber(lowerBound) && window.pageYOffset >= lowerBound) {\n        this.setState({\n          isAboveFold: false\n        });\n      }\n      if (containerRect.bottom !== nextContainerRect.bottom || containerRect.height !== nextContainerRect.height || containerRect.left !== nextContainerRect.left || containerRect.right !== nextContainerRect.right || containerRect.top !== nextContainerRect.top || containerRect.width !== nextContainerRect.width || containerRect.scrollWidth !== nextContainerRect.scrollWidth || containerRect.frameLeft !== nextContainerRect.frameLeft) {\n        this.setState({\n          containerRect: nextContainerRect\n        });\n      }\n    };\n    this.getContainerRect = () => {\n      const containerRect = getAbsoluteBoundingClientRect(this.scrollContainer.current);\n      const stickyRect = this.stickySection.current.getBoundingClientRect();\n      const frameRect = this.stickyFrame.current.getBoundingClientRect();\n      return {\n        bottom: containerRect.top + stickyRect.height,\n        height: stickyRect.height,\n        left: containerRect.left,\n        right: containerRect.left + stickyRect.width,\n        top: containerRect.top,\n        scrollWidth: this.stickySection.current.scrollWidth,\n        width: containerRect.width,\n        frameLeft: frameRect.left\n      };\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        containerRect: this.getContainerRect()\n      });\n      this.handleScroll();\n    }, 1);\n    window.addEventListener('scroll', this.handleScroll, true);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll, true);\n  }\n  render() {\n    const {\n      children,\n      className,\n      style,\n      topOffset = 0,\n      viewportWidth,\n      ...passThroughs\n    } = this.props;\n    const {\n      isAboveFold,\n      containerRect\n    } = this.state;\n    return React.createElement(\"div\", {\n      ...omit(passThroughs, ['lowerBound', 'topOffset', 'initialState', 'callbackId']),\n      className: cx('&', className),\n      style: {\n        ...(isAboveFold ? {\n          height: containerRect.height,\n          visibility: 'hidden'\n        } : {}),\n        ...style\n      },\n      ref: this.scrollContainer\n    }, React.createElement(\"div\", {\n      className: cx('&-sticky-frame'),\n      ref: this.stickyFrame,\n      style: {\n        ...(isAboveFold ? {\n          visibility: 'visible',\n          position: 'fixed',\n          top: topOffset,\n          width: _.isNumber(viewportWidth) ? viewportWidth : containerRect.width,\n          height: containerRect.height,\n          overflow: 'hidden'\n        } : {}),\n        ...style\n      }\n    }, React.createElement(\"div\", {\n      className: cx('&-sticky-section'),\n      ref: this.stickySection,\n      style: {\n        ...(isAboveFold ? {\n          position: 'absolute',\n          top: 0,\n          left: containerRect.left - containerRect.frameLeft || 0,\n          width: containerRect.scrollWidth,\n          height: containerRect.height\n        } : {\n          position: 'relative'\n        }),\n        ...style\n      }\n    }, children)));\n  }\n}\nStickySection.displayName = 'StickySection';\nStickySection.peek = {\n  description: `\\`StickySection\\` can be wrapped around any content to make it _stick_ to the top edge of the screen when a user scrolls beyond its initial location.`,\n  categories: ['helpers']\n};\nStickySection.propTypes = {\n  /**\n      any valid React children\n  */\n  children: node,\n  /**\n      Appended to the component-specific class names set on the root element.\n  */\n  className: string,\n  /**\n      Styles that are passed through to the root container.\n  */\n  style: object,\n  /**\n      Pixel value from the top of the document. When scrolled passed, the\n      sticky header is no longer sticky, and renders normally.\n  */\n  lowerBound: number,\n  /**\n      Top offset threshold before sticking to the top. The sticky content will\n      display with this offset.\n  */\n  topOffset: number\n};\nexport default StickySection;","map":{"version":3,"mappings":"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","names":["_","omit","React","PropTypes","lucidClassNames","getAbsoluteBoundingClientRect","cx","bind","node","number","object","string","StickySection","Component","constructor","createRef","isAboveFold","containerRect","bottom","height","left","right","top","width","frameLeft","scrollWidth","lowerBound","topOffset","props","state","nextContainerRect","getContainerRect","window","pageYOffset","setState","isNumber","scrollContainer","current","stickyRect","stickySection","getBoundingClientRect","frameRect","stickyFrame","componentDidMount","setTimeout","handleScroll","addEventListener","componentWillUnmount","removeEventListener","render","children","className","style","viewportWidth","passThroughs","visibility","ref","position","overflow","description","categories"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/StickySection/StickySection.tsx"],"sourcesContent":["import _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { StandardProps } from '../../util/component-types';\nimport { getAbsoluteBoundingClientRect } from '../../util/dom-helpers';\n\nconst cx = lucidClassNames.bind('&-StickySection');\nconst { node, number, object, string } = PropTypes;\n\nexport interface IStickySectionProps\n\textends StandardProps,\n\t\tReact.DetailedHTMLProps<\n\t\t\tReact.HTMLAttributes<HTMLDivElement>,\n\t\t\tHTMLDivElement\n\t\t> {\n\t/** Pixel value from the top of the document. When scrolled passed, the\n\t * sticky header is no longer sticky, and renders normally. */\n\tlowerBound?: number;\n\n\t/** Width of section when it sticks to the top edge of the screen. When\n\t * omitted, it defaults to the last width of the section. */\n\tviewportWidth?: number;\n\n\t/** Top offset threshold before sticking to the top. The sticky content will\n\t * display with this offset. */\n\ttopOffset?: number;\n}\n\ninterface IContainerRect extends Omit<ClientRect, 'x' | 'y' | 'toJSON'> {\n\tscrollWidth: number;\n\tframeLeft: number;\n}\n\ninterface IStickySectionState {\n\tisAboveFold: boolean;\n\tcontainerRect: IContainerRect;\n}\n\nclass StickySection extends React.Component<\n\tIStickySectionProps,\n\tIStickySectionState,\n\t{}\n> {\n\tstatic displayName = 'StickySection';\n\n\tstatic peek = {\n\t\tdescription: `\\`StickySection\\` can be wrapped around any content to make it _stick_ to the top edge of the screen when a user scrolls beyond its initial location.`,\n\t\tcategories: ['helpers'],\n\t};\n\n\tstatic propTypes = {\n\t\t/**\n\t\t\tany valid React children\n\t\t*/\n\t\tchildren: node,\n\t\t/**\n\t\t\tAppended to the component-specific class names set on the root element.\n\t\t*/\n\t\tclassName: string,\n\t\t/**\n\t\t\tStyles that are passed through to the root container.\n\t\t*/\n\t\tstyle: object,\n\t\t/**\n\t\t\tPixel value from the top of the document. When scrolled passed, the\n\t\t\tsticky header is no longer sticky, and renders normally.\n\t\t*/\n\t\tlowerBound: number,\n\t\t/**\n\t\t\tTop offset threshold before sticking to the top. The sticky content will\n\t\t\tdisplay with this offset.\n\t\t*/\n\t\ttopOffset: number,\n\t};\n\n\tprivate scrollContainer = React.createRef<HTMLDivElement>();\n\tprivate stickySection = React.createRef<HTMLDivElement>();\n\tprivate stickyFrame = React.createRef<HTMLDivElement>();\n\n\tstate = {\n\t\tisAboveFold: false,\n\t\tcontainerRect: {\n\t\t\tbottom: 0,\n\t\t\theight: 0,\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\twidth: 0,\n\t\t\tframeLeft: 0,\n\t\t\tscrollWidth: 0,\n\t\t},\n\t};\n\n\thandleScroll = (): void => {\n\t\tconst { lowerBound, topOffset = 0 } = this.props;\n\n\t\tconst { isAboveFold, containerRect } = this.state;\n\n\t\tconst nextContainerRect = this.getContainerRect();\n\n\t\tif (window.pageYOffset + topOffset >= nextContainerRect.top) {\n\t\t\tif (!isAboveFold) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisAboveFold: true,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (isAboveFold) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisAboveFold: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (_.isNumber(lowerBound) && window.pageYOffset >= lowerBound) {\n\t\t\tthis.setState({\n\t\t\t\tisAboveFold: false,\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tcontainerRect.bottom !== nextContainerRect.bottom ||\n\t\t\tcontainerRect.height !== nextContainerRect.height ||\n\t\t\tcontainerRect.left !== nextContainerRect.left ||\n\t\t\tcontainerRect.right !== nextContainerRect.right ||\n\t\t\tcontainerRect.top !== nextContainerRect.top ||\n\t\t\tcontainerRect.width !== nextContainerRect.width ||\n\t\t\tcontainerRect.scrollWidth !== nextContainerRect.scrollWidth ||\n\t\t\tcontainerRect.frameLeft !== nextContainerRect.frameLeft\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tcontainerRect: nextContainerRect,\n\t\t\t});\n\t\t}\n\t};\n\n\tgetContainerRect = (): IContainerRect => {\n\t\tconst containerRect = getAbsoluteBoundingClientRect(\n\t\t\tthis.scrollContainer.current as HTMLElement\n\t\t);\n\t\tconst stickyRect = (\n\t\t\tthis.stickySection.current as HTMLElement\n\t\t).getBoundingClientRect();\n\t\tconst frameRect = (\n\t\t\tthis.stickyFrame.current as HTMLElement\n\t\t).getBoundingClientRect();\n\n\t\treturn {\n\t\t\tbottom: containerRect.top + stickyRect.height,\n\t\t\theight: stickyRect.height,\n\t\t\tleft: containerRect.left,\n\t\t\tright: containerRect.left + stickyRect.width,\n\t\t\ttop: containerRect.top,\n\t\t\tscrollWidth: (this.stickySection.current as HTMLElement).scrollWidth,\n\t\t\twidth: containerRect.width,\n\t\t\tframeLeft: frameRect.left,\n\t\t};\n\t};\n\n\tcomponentDidMount(): void {\n\t\tsetTimeout((): void => {\n\t\t\tthis.setState({\n\t\t\t\tcontainerRect: this.getContainerRect(),\n\t\t\t});\n\t\t\tthis.handleScroll();\n\t\t}, 1);\n\t\twindow.addEventListener('scroll', this.handleScroll, true);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\twindow.removeEventListener('scroll', this.handleScroll, true);\n\t}\n\n\trender(): React.ReactNode {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tclassName,\n\t\t\tstyle,\n\t\t\ttopOffset = 0,\n\t\t\tviewportWidth,\n\t\t\t...passThroughs\n\t\t} = this.props;\n\n\t\tconst { isAboveFold, containerRect } = this.state;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...omit(passThroughs, [\n\t\t\t\t\t'lowerBound',\n\t\t\t\t\t'topOffset',\n\t\t\t\t\t'initialState',\n\t\t\t\t\t'callbackId',\n\t\t\t\t])}\n\t\t\t\tclassName={cx('&', className)}\n\t\t\t\tstyle={{\n\t\t\t\t\t...(isAboveFold\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\theight: containerRect.height,\n\t\t\t\t\t\t\t\tvisibility: 'hidden',\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}),\n\t\t\t\t\t...style,\n\t\t\t\t}}\n\t\t\t\tref={this.scrollContainer}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={cx('&-sticky-frame')}\n\t\t\t\t\tref={this.stickyFrame}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...(isAboveFold\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tvisibility: 'visible',\n\t\t\t\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\t\t\t\ttop: topOffset,\n\t\t\t\t\t\t\t\t\twidth: _.isNumber(viewportWidth)\n\t\t\t\t\t\t\t\t\t\t? viewportWidth\n\t\t\t\t\t\t\t\t\t\t: containerRect.width,\n\t\t\t\t\t\t\t\t\theight: containerRect.height,\n\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: {}),\n\t\t\t\t\t\t...style,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={cx('&-sticky-section')}\n\t\t\t\t\t\tref={this.stickySection}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...(isAboveFold\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\t\t\tleft: containerRect.left - containerRect.frameLeft || 0,\n\t\t\t\t\t\t\t\t\t\twidth: containerRect.scrollWidth,\n\t\t\t\t\t\t\t\t\t\theight: containerRect.height,\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t...style,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default StickySection;\n"]},"metadata":{},"sourceType":"module"}