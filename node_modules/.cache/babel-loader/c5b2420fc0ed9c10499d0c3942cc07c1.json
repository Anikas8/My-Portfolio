{"ast":null,"code":"import _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lucidClassNames } from '../../util/style-helpers';\nconst cx = lucidClassNames.bind('&-DragCaptureZone');\nconst {\n  func,\n  string\n} = PropTypes;\n/** TODO: Remove the nonPassThroughs when the component is converted to a functional component */\nconst nonPassThroughs = ['className', 'onDrag', 'onDragEnd', 'onDragStart', 'onDragCancel', 'initialState', 'callbackId'];\nclass DragCaptureZone extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.elementRef = React.createRef();\n    this.state = {\n      pageX: 0,\n      pageY: 0\n    };\n    this.handleDrag = event => {\n      let pageX;\n      let pageY;\n      /* istanbul ignore next */\n      if ('touches' in event) {\n        pageX = event.touches[0].pageX;\n        pageY = event.touches[0].pageY;\n      } else {\n        pageX = event.pageX;\n        pageY = event.pageY;\n      }\n      event.preventDefault();\n      this.props.onDrag({\n        dX: pageX - this.state.pageX,\n        dY: pageY - this.state.pageY,\n        pageX,\n        pageY\n      }, {\n        event,\n        props: this.props\n      });\n    };\n    this.handleMouseDragStart = event => {\n      const pageX = event.pageX;\n      const pageY = event.pageY;\n      window.document.addEventListener('mousemove', this.handleDrag);\n      window.document.addEventListener('mouseup', this.handleDragEnd);\n      event.preventDefault();\n      this.props.onDragStart({\n        dX: 0,\n        dY: 0,\n        pageX,\n        pageY\n      }, {\n        event,\n        props: this.props\n      });\n      this.setState({\n        pageX,\n        pageY\n      });\n    };\n    this.handleTouchDragStart = event => {\n      const pageX = event.touches[0].pageX;\n      const pageY = event.touches[0].pageY;\n      event.preventDefault();\n      this.props.onDragStart({\n        dX: 0,\n        dY: 0,\n        pageX,\n        pageY\n      }, {\n        event,\n        props: this.props\n      });\n      this.setState({\n        pageX,\n        pageY\n      });\n    };\n    this.handleDragEnd = event => {\n      let pageX;\n      let pageY;\n      /* istanbul ignore next */\n      if ('changedTouches' in event) {\n        pageX = event.changedTouches[0].pageX;\n        pageY = event.changedTouches[0].pageY;\n      } else {\n        pageX = event.pageX;\n        pageY = event.pageY;\n      }\n      window.document.removeEventListener('mousemove', this.handleDrag);\n      window.document.removeEventListener('mouseup', this.handleDragEnd);\n      event.preventDefault();\n      this.props.onDragEnd({\n        dX: pageX - this.state.pageX,\n        dY: pageY - this.state.pageY,\n        pageX,\n        pageY\n      }, {\n        event,\n        props: this.props\n      });\n      this.setState({\n        pageX: 0,\n        pageY: 0\n      });\n    };\n    this.handleDragCancel = event => {\n      this.props.onDragCancel({\n        event,\n        props: this.props\n      });\n      this.setState({\n        pageX: 0,\n        pageY: 0\n      });\n    };\n  }\n  componentDidMount() {\n    //add event listeners directly on the DOM element to allow preventDefault\n    //calls which are not honored due to react's event delegation\n    //reference: https://github.com/facebook/react/issues/8968\n    if (this.elementRef.current) {\n      this.elementRef.current.addEventListener('touchmove', this.handleDrag);\n      this.elementRef.current.addEventListener('touchend', this.handleDragEnd);\n      this.elementRef.current.addEventListener('touchcancel', this.handleDragCancel);\n    }\n  }\n  componentWillUnmount() {\n    if (this.elementRef.current) {\n      this.elementRef.current.removeEventListener('touchmove', this.handleDrag);\n      this.elementRef.current.removeEventListener('touchend', this.handleDragEnd);\n      this.elementRef.current.removeEventListener('touchcancel', this.handleDragCancel);\n    }\n    window.document.removeEventListener('mousemove', this.handleDrag);\n    window.document.removeEventListener('mouseup', this.handleDragEnd);\n  }\n  render() {\n    return React.createElement(\"div\", {\n      ...omit(this.props, nonPassThroughs),\n      className: cx('&', this.props.className),\n      key: 'DragCaptureZone',\n      onMouseDown: this.handleMouseDragStart,\n      onTouchStart: this.handleTouchDragStart,\n      ref: this.elementRef\n    });\n  }\n}\nDragCaptureZone.displayName = 'DragCaptureZone';\nDragCaptureZone.peek = {\n  description: `This is a helper component used to capture mouse events to determine when the user starts, is and stops dragging.`,\n  categories: ['utility']\n};\nDragCaptureZone.propTypes = {\n  /**\n      Appended to the component-specific class names set on the root element.\n  */\n  className: string,\n  /**\n      Called as the user drags the mouse.  Signature:\n      \\`({ dx, dy, pageX, pageY }, { event, props }) => {}\\`\n  */\n  onDrag: func,\n  /**\n      Called when the user releases the mouse button after having dragged.\n      Signature: \\`({ dx, dy, pageX, pageY }, { event, props }) => {}\\`\n  */\n  onDragEnd: func,\n  /**\n      Called when the user presses the mouse button down while over the\n      component.  Signature:\n      \\`({ dx, dy, pageX, pageY }, { event, props }) => {}\\`\n  */\n  onDragStart: func,\n  /**\n      Called when the drag event is canceled due to user interaction.  For\n      example: if a system alert pops up during a touch event.  Signature:\n      \\`({ event, props }) => {}\\`\n  */\n  onDragCancel: func\n};\nDragCaptureZone.defaultProps = {\n  onDrag: _.noop,\n  onDragEnd: _.noop,\n  onDragStart: _.noop,\n  onDragCancel: _.noop\n};\nexport default DragCaptureZone;","map":{"version":3,"mappings":"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","names":["_","omit","React","PropTypes","lucidClassNames","cx","bind","func","string","nonPassThroughs","DragCaptureZone","Component","constructor","createRef","pageX","pageY","event","touches","preventDefault","props","onDrag","dX","state","dY","window","document","addEventListener","handleDrag","handleDragEnd","onDragStart","setState","changedTouches","removeEventListener","onDragEnd","onDragCancel","componentDidMount","elementRef","current","handleDragCancel","componentWillUnmount","render","className","key","onMouseDown","handleMouseDragStart","onTouchStart","handleTouchDragStart","ref","description","categories","noop"],"sources":["/home/skanda/node_modules/lucid-ui/src/components/DragCaptureZone/DragCaptureZone.tsx"],"sourcesContent":["import _, { omit } from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { lucidClassNames } from '../../util/style-helpers';\nimport { StandardProps, Overwrite } from '../../util/component-types';\n\nconst cx = lucidClassNames.bind('&-DragCaptureZone');\nconst { func, string } = PropTypes;\n\nexport interface IDragCaptureZonePropsRaw extends StandardProps {\n\t/** Called as the user drags the mouse. */\n\tonDrag: (\n\t\t{\n\t\t\tdX,\n\t\t\tdY,\n\t\t\tpageX,\n\t\t\tpageY,\n\t\t}: {\n\t\t\tdX: number;\n\t\t\tdY: number;\n\t\t\tpageX: number;\n\t\t\tpageY: number;\n\t\t},\n\t\t{\n\t\t\tevent,\n\t\t\tprops,\n\t\t}: {\n\t\t\tevent: MouseEvent | TouchEvent;\n\t\t\tprops: IDragCaptureZoneProps;\n\t\t}\n\t) => void;\n\n\t/** Called when the user releases the mouse button after having dragged. */\n\tonDragEnd: (\n\t\t{\n\t\t\tdX,\n\t\t\tdY,\n\t\t\tpageX,\n\t\t\tpageY,\n\t\t}: {\n\t\t\tdX: number;\n\t\t\tdY: number;\n\t\t\tpageX: number;\n\t\t\tpageY: number;\n\t\t},\n\t\t{\n\t\t\tevent,\n\t\t\tprops,\n\t\t}: {\n\t\t\tevent: MouseEvent | TouchEvent;\n\t\t\tprops: IDragCaptureZoneProps;\n\t\t}\n\t) => void;\n\n\t/** Called when the user presses the mouse button down while over the component. */\n\tonDragStart: (\n\t\t{\n\t\t\tdX,\n\t\t\tdY,\n\t\t\tpageX,\n\t\t\tpageY,\n\t\t}: {\n\t\t\tdX: number;\n\t\t\tdY: number;\n\t\t\tpageX: number;\n\t\t\tpageY: number;\n\t\t},\n\t\t{\n\t\t\tevent,\n\t\t\tprops,\n\t\t}: {\n\t\t\tevent:\n\t\t\t\t| React.MouseEvent<HTMLDivElement, MouseEvent>\n\t\t\t\t| React.TouchEvent<HTMLDivElement>;\n\t\t\tprops: IDragCaptureZoneProps;\n\t\t}\n\t) => void;\n\n\t/** Called when the drag event is canceled due to user interaction.\n\t * For example: if a system alert pops up during a touch event. */\n\tonDragCancel: ({\n\t\tevent,\n\t\tprops,\n\t}: {\n\t\tevent: MouseEvent | TouchEvent;\n\t\tprops: IDragCaptureZoneProps;\n\t}) => void;\n}\n\n/** TODO: Remove the nonPassThroughs when the component is converted to a functional component */\nconst nonPassThroughs = [\n\t'className',\n\t'onDrag',\n\t'onDragEnd',\n\t'onDragStart',\n\t'onDragCancel',\n\t'initialState',\n\t'callbackId',\n];\n\nexport type IDragCaptureZoneProps = Overwrite<\n\tReact.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>,\n\tIDragCaptureZonePropsRaw\n>;\n\ninterface IDragCaptureZoneState {\n\tpageX: number;\n\tpageY: number;\n}\n\nclass DragCaptureZone extends React.Component<\n\tIDragCaptureZoneProps,\n\tIDragCaptureZoneState,\n\t{}\n> {\n\tstatic displayName = 'DragCaptureZone';\n\tstatic peek = {\n\t\tdescription: `This is a helper component used to capture mouse events to determine when the user starts, is and stops dragging.`,\n\t\tcategories: ['utility'],\n\t};\n\tstatic propTypes = {\n\t\t/**\n\t\t\tAppended to the component-specific class names set on the root element.\n\t\t*/\n\t\tclassName: string,\n\n\t\t/**\n\t\t\tCalled as the user drags the mouse.  Signature:\n\t\t\t\\`({ dx, dy, pageX, pageY }, { event, props }) => {}\\`\n\t\t*/\n\t\tonDrag: func,\n\n\t\t/**\n\t\t\tCalled when the user releases the mouse button after having dragged.\n\t\t\tSignature: \\`({ dx, dy, pageX, pageY }, { event, props }) => {}\\`\n\t\t*/\n\t\tonDragEnd: func,\n\n\t\t/**\n\t\t\tCalled when the user presses the mouse button down while over the\n\t\t\tcomponent.  Signature:\n\t\t\t\\`({ dx, dy, pageX, pageY }, { event, props }) => {}\\`\n\t\t*/\n\t\tonDragStart: func,\n\n\t\t/**\n\t\t\tCalled when the drag event is canceled due to user interaction.  For\n\t\t\texample: if a system alert pops up during a touch event.  Signature:\n\t\t\t\\`({ event, props }) => {}\\`\n\t\t*/\n\t\tonDragCancel: func,\n\t};\n\n\tprivate elementRef = React.createRef<HTMLDivElement>();\n\n\tstate = {\n\t\tpageX: 0,\n\t\tpageY: 0,\n\t};\n\n\tstatic defaultProps = {\n\t\tonDrag: _.noop,\n\t\tonDragEnd: _.noop,\n\t\tonDragStart: _.noop,\n\t\tonDragCancel: _.noop,\n\t};\n\n\thandleDrag = (event: MouseEvent | TouchEvent): void => {\n\t\tlet pageX;\n\t\tlet pageY;\n\n\t\t/* istanbul ignore next */\n\t\tif ('touches' in event) {\n\t\t\tpageX = event.touches[0].pageX;\n\t\t\tpageY = event.touches[0].pageY;\n\t\t} else {\n\t\t\tpageX = event.pageX;\n\t\t\tpageY = event.pageY;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tthis.props.onDrag(\n\t\t\t{\n\t\t\t\tdX: pageX - this.state.pageX,\n\t\t\t\tdY: pageY - this.state.pageY,\n\t\t\t\tpageX,\n\t\t\t\tpageY,\n\t\t\t},\n\t\t\t{\n\t\t\t\tevent,\n\t\t\t\tprops: this.props,\n\t\t\t}\n\t\t);\n\t};\n\n\thandleMouseDragStart = (\n\t\tevent: React.MouseEvent<HTMLDivElement, MouseEvent>\n\t): void => {\n\t\tconst pageX = event.pageX;\n\t\tconst pageY = event.pageY;\n\n\t\twindow.document.addEventListener('mousemove', this.handleDrag);\n\t\twindow.document.addEventListener('mouseup', this.handleDragEnd);\n\n\t\tevent.preventDefault();\n\n\t\tthis.props.onDragStart(\n\t\t\t{\n\t\t\t\tdX: 0,\n\t\t\t\tdY: 0,\n\t\t\t\tpageX,\n\t\t\t\tpageY,\n\t\t\t},\n\t\t\t{\n\t\t\t\tevent,\n\t\t\t\tprops: this.props,\n\t\t\t}\n\t\t);\n\n\t\tthis.setState({\n\t\t\tpageX,\n\t\t\tpageY,\n\t\t});\n\t};\n\n\thandleTouchDragStart = (event: React.TouchEvent<HTMLDivElement>): void => {\n\t\tconst pageX = event.touches[0].pageX;\n\t\tconst pageY = event.touches[0].pageY;\n\n\t\tevent.preventDefault();\n\n\t\tthis.props.onDragStart(\n\t\t\t{\n\t\t\t\tdX: 0,\n\t\t\t\tdY: 0,\n\t\t\t\tpageX,\n\t\t\t\tpageY,\n\t\t\t},\n\t\t\t{\n\t\t\t\tevent,\n\t\t\t\tprops: this.props,\n\t\t\t}\n\t\t);\n\n\t\tthis.setState({\n\t\t\tpageX,\n\t\t\tpageY,\n\t\t});\n\t};\n\n\thandleDragEnd = (event: MouseEvent | TouchEvent): void => {\n\t\tlet pageX;\n\t\tlet pageY;\n\n\t\t/* istanbul ignore next */\n\t\tif ('changedTouches' in event) {\n\t\t\tpageX = event.changedTouches[0].pageX;\n\t\t\tpageY = event.changedTouches[0].pageY;\n\t\t} else {\n\t\t\tpageX = event.pageX;\n\t\t\tpageY = event.pageY;\n\t\t}\n\n\t\twindow.document.removeEventListener('mousemove', this.handleDrag);\n\t\twindow.document.removeEventListener('mouseup', this.handleDragEnd);\n\n\t\tevent.preventDefault();\n\n\t\tthis.props.onDragEnd(\n\t\t\t{\n\t\t\t\tdX: pageX - this.state.pageX,\n\t\t\t\tdY: pageY - this.state.pageY,\n\t\t\t\tpageX,\n\t\t\t\tpageY,\n\t\t\t},\n\t\t\t{\n\t\t\t\tevent,\n\t\t\t\tprops: this.props,\n\t\t\t}\n\t\t);\n\n\t\tthis.setState({\n\t\t\tpageX: 0,\n\t\t\tpageY: 0,\n\t\t});\n\t};\n\n\thandleDragCancel = (event: MouseEvent | TouchEvent): void => {\n\t\tthis.props.onDragCancel({\n\t\t\tevent,\n\t\t\tprops: this.props,\n\t\t});\n\n\t\tthis.setState({\n\t\t\tpageX: 0,\n\t\t\tpageY: 0,\n\t\t});\n\t};\n\n\tcomponentDidMount(): void {\n\t\t//add event listeners directly on the DOM element to allow preventDefault\n\t\t//calls which are not honored due to react's event delegation\n\t\t//reference: https://github.com/facebook/react/issues/8968\n\n\t\tif (this.elementRef.current) {\n\t\t\tthis.elementRef.current.addEventListener('touchmove', this.handleDrag);\n\t\t\tthis.elementRef.current.addEventListener('touchend', this.handleDragEnd);\n\t\t\tthis.elementRef.current.addEventListener(\n\t\t\t\t'touchcancel',\n\t\t\t\tthis.handleDragCancel\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tif (this.elementRef.current) {\n\t\t\tthis.elementRef.current.removeEventListener('touchmove', this.handleDrag);\n\t\t\tthis.elementRef.current.removeEventListener(\n\t\t\t\t'touchend',\n\t\t\t\tthis.handleDragEnd\n\t\t\t);\n\t\t\tthis.elementRef.current.removeEventListener(\n\t\t\t\t'touchcancel',\n\t\t\t\tthis.handleDragCancel\n\t\t\t);\n\t\t}\n\t\twindow.document.removeEventListener('mousemove', this.handleDrag);\n\t\twindow.document.removeEventListener('mouseup', this.handleDragEnd);\n\t}\n\n\trender(): React.ReactNode {\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...(omit(this.props, nonPassThroughs) as any)}\n\t\t\t\tclassName={cx('&', this.props.className)}\n\t\t\t\tkey='DragCaptureZone'\n\t\t\t\tonMouseDown={this.handleMouseDragStart}\n\t\t\t\tonTouchStart={this.handleTouchDragStart}\n\t\t\t\tref={this.elementRef}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default DragCaptureZone;\n"]},"metadata":{},"sourceType":"module"}